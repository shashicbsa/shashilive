OBJECT Page 1319 Mini Sales Credit Memo
{
  OBJECT-PROPERTIES
  {
    Date=09/23/13;
    Time=12:00:00;
    Version List=NAVW17.10;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Credit Memo;
               ENA=Sales CR/Adj Note];
    SourceTable=Table36;
    SourceTableView=WHERE(Document Type=FILTER(Credit Memo));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Credit Memo,Posting,View;
                                ENA=New,Process,Report,CR/Adj Note,Posting,View];
    OnInit=BEGIN
             ShowBillToShipToTab := FALSE;
             ShowDetailsTab := FALSE;
           END;

    OnOpenPage=VAR
                 FileManagement@1000 : Codeunit 419;
               BEGIN
                 IF UserSetupManagement.GetSalesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserSetupManagement.GetSalesFilter);
                   FILTERGROUP(0);
                 END;

                 AllowDotNetAddIn := FileManagement.CanRunDotNetOnClient;
               END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserSetupManagement.GetSalesFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 57      ;1   ;ActionGroup;
                      Name=Credit Memo;
                      CaptionML=[ENU=&Credit Memo;
                                 ENA=&CR/Adj Note];
                      Image=CreditMemo }
      { 60      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Customer;
                                 ENA=Customer];
                      ToolTipML=[ENU=View or edit detailed information about the customer on the sales document.;
                                 ENA=View or edit detailed information about the customer on the sales document.];
                      RunObject=Page 1300;
                      RunPageLink=No.=FIELD(Sell-to Customer No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Customer;
                      PromotedCategory=Category4 }
      { 64      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 ENA=Copy Document];
                      ToolTipML=[ENU=Copy fields and document lines from another document to this document.;
                                 ENA=Copy fields and document lines from another document to this document.];
                      PromotedIsBig=Yes;
                      Image=CopyDocument;
                      PromotedCategory=New;
                      OnAction=VAR
                                 CopySalesDoc@1000 : Report 292;
                               BEGIN
                                 CopySalesDoc.SetSalesHeader(Rec);
                                 CopySalesDoc.RUNMODAL;
                               END;
                                }
      { 41      ;1   ;ActionGroup;
                      Name=Apply;
                      CaptionML=[ENU=Apply;
                                 ENA=Apply] }
      { 45      ;2   ;Action    ;
                      Name=ApplyEntries;
                      ShortCutKey=Shift+F11;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Apply Entries;
                                 ENA=Apply Entries];
                      ToolTipML=[ENU=Select one or more posted sales documents that you want the sales credit memo to be applied to.;
                                 ENA=Select one or more posted sales documents that you want the sales CR/Adj Note to be applied to.];
                      RunObject=Codeunit 401;
                      Promoted=No;
                      Image=ApplyEntries;
                      PromotedCategory=Process }
      { 69      ;1   ;ActionGroup;
                      Name=Posting;
                      CaptionML=[ENU=P&osting;
                                 ENA=P&osting];
                      Image=Post }
      { 71      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 ENA=P&ost];
                      ToolTipML=[ENU=Finalize the sales document. Posting updates the books with the document's amounts and quantities.;
                                 ENA=Finalise the sales document. Posting updates the books with the document's amounts and quantities.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post (Yes/No)");
                               END;
                                }
      { 1001    ;2   ;Action    ;
                      Name=Printer;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 ENA=&Print];
                      ToolTipML=[ENU=Finalize and print the sales document.;
                                 ENA=Finalise and print the sales document.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Print;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 PostAndPrint(CODEUNIT::"Sales-Post");
                               END;
                                }
      { 1002    ;2   ;Action    ;
                      Name=Email as PDF;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Send PDF by &Email;
                                 ENA=Send PDF by &Email];
                      ToolTipML=[ENU=Finalize and attach the sales document to an email to the customer.;
                                 ENA=Finalise and attach the sales document to an email to the customer.];
                      Promoted=Yes;
                      Visible=AllowDotNetAddIn;
                      PromotedIsBig=Yes;
                      Image=SendEmailPDF;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post + Email");
                               END;
                                }
      { 17      ;2   ;Action    ;
                      Name=SaveCopy;
                      CaptionML=[ENU=Save &PDF Document;
                                 ENA=Save &PDF Document];
                      ToolTipML=[ENU=Finalize the selected sales document and save it to your computer. You can then attach it to the email that you send to the customer.;
                                 ENA=Finalise the selected sales document and save it to your computer. You can then attach it to the email that you send to the customer.];
                      Promoted=Yes;
                      Visible=NOT AllowDotNetAddIn;
                      PromotedIsBig=Yes;
                      Image=Save;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post + Email");
                               END;
                                }
      { 3       ;1   ;ActionGroup;
                      Name=View;
                      CaptionML=[ENU=View;
                                 ENA=View] }
      { 4       ;2   ;Action    ;
                      Name=Bill-to and Ship-to Address;
                      CaptionML=[ENU=Bill-to Addresses;
                                 ENA=Bill-to Addresses];
                      ToolTipML=[ENU=Show fields for the customer's shipping and billing addresses. You can specify a different address where the item or service is delivered or specify a different address where the document is sent.;
                                 ENA=Show fields for the customer's shipping and billing addresses. You can specify a different address where the item or service is delivered or specify a different address where the document is sent.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ShipAddress;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ShowBillToShipToTab := NOT ShowBillToShipToTab;
                               END;
                                }
      { 5       ;2   ;Action    ;
                      Name=CreditMemoDetails;
                      CaptionML=[ENU=Credit Memo Details;
                                 ENA=CR/Adj Note Details];
                      ToolTipML=[ENU=Show fields for credit memo details, such as currency, shipment date, and payment terms.;
                                 ENA=Show fields for CR/Adj Note details, such as currency, shipment date, and payment terms.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=TaxDetail;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ShowDetailsTab := NOT ShowDetailsTab;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=SalesCreditMemo;
                CaptionML=[ENU=Sales Credit Memo;
                           ENA=Sales CR/Adj Note];
                GroupType=Group }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Customer Name;
                           ENA=Customer Name];
                ToolTipML=[ENU=Specifies the name of the customer that the items on the invoice will be shipped to.;
                           ENA=Specifies the name of the customer that the items on the invoice will be shipped to.];
                NotBlank=Yes;
                SourceExpr="Sell-to Customer Name";
                TableRelation=Customer.Name;
                LookupPageID=Mini Customer List;
                DrillDownPageID=Mini Customer List;
                OnValidate=VAR
                             NewCustomerNo@1000 : Code[20];
                           BEGIN
                             IF "No." = '' THEN
                               InitRecord;
                             IF ("Sell-to Customer Name" <> xRec."Sell-to Customer Name")
                             THEN BEGIN
                               NewCustomerNo := GetCustNoByName("Sell-to Customer Name");
                               VALIDATE("Sell-to Customer No.",NewCustomerNo);
                             END;
                             CurrPage.UPDATE;
                             SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 75  ;2   ;Field     ;
                CaptionML=[ENU=Address;
                           ENA=Address];
                ToolTipML=[ENU=Specifies the address of the customer that the invoice will be shipped to.;
                           ENA=Specifies the address of the customer that the invoice will be shipped to.];
                SourceExpr="Sell-to Address" }

    { 11  ;2   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENA=Address 2];
                ToolTipML=[ENU=Specifies an additional part of the address of the customer to whom the items on the invoice will be shipped.;
                           ENA=Specifies an additional part of the address of the customer to whom the items on the invoice will be shipped.];
                SourceExpr="Sell-to Address 2" }

    { 80  ;2   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENA=Post Code];
                ToolTipML=[ENU=Specifies the post code of the customer that you sell the items to.;
                           ENA=Specifies the post code of the customer that you sell the items to.];
                SourceExpr="Sell-to Post Code" }

    { 79  ;2   ;Field     ;
                CaptionML=[ENU=City;
                           ENA=City];
                ToolTipML=[ENU=Specifies the city name of the customer that the items on the invoice will be shipped to.;
                           ENA=Specifies the city name of the customer that the items on the invoice will be shipped to.];
                SourceExpr="Sell-to City" }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENA=Contact];
                ToolTipML=[ENU=Specifies the name of the person to contact at the customer that the items on the invoice will be shipped to.;
                           ENA=Specifies the name of the person to contact at the customer that the items on the invoice will be shipped to.];
                SourceExpr="Sell-to Contact" }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the posting of the sales document will be recorded. By default, today's date is entered.;
                           ENA=Specifies the date when the posting of the sales document will be recorded. By default, today's date is entered.];
                SourceExpr="Posting Date";
                Importance=Promoted }

    { 43  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which you create the sales document. The date will appear on the printed sales document. By default, today's date is entered.;
                           ENA=Specifies the date on which you create the sales document. The date will appear on the printed sales document. By default, today's date is entered.];
                SourceExpr="Document Date" }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when the sales invoice must be paid. By default, the field is calculated as the date in the Shipment Date field plus the period defined in the Payment Terms Code field.;
                           ENA=Specifies when the sales invoice must be paid. By default, the field is calculated as the date in the Shipment Date field plus the period defined in the Payment Terms Code field.];
                SourceExpr="Due Date";
                Importance=Promoted }

    { 37  ;2   ;Field     ;
                ToolTipML=[ENU=You can use this field if you want the invoice, when you post it, to be applied to a document that has already been posted. In this case, enter here the type of document that it should be applied to.;
                           ENA=You can use this field if you want the invoice, when you post it, to be applied to a document that has already been posted. In this case, enter here the type of document that it should be applied to.];
                SourceExpr="Applies-to Doc. Type" }

    { 39  ;2   ;Field     ;
                ToolTipML=[ENU=You can use this field if you want to apply the invoice to a document that has already been posted. If so, enter the number of the document that the invoice should be applied to.;
                           ENA=You can use this field if you want to apply the invoice to a document that has already been posted. If so, enter the number of the document that the invoice should be applied to.];
                SourceExpr="Applies-to Doc. No." }

    { 40  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the applies-to ID of entries that will be applied to by the sales document if you use the Apply Entries function.;
                           ENA=Specifies the applies-to ID of entries that will be applied to by the sales document if you use the Apply Entries function.];
                SourceExpr="Applies-to ID" }

    { 7   ;1   ;Group     ;
                Name=CreditMemoDetails;
                CaptionML=[ENU=Credit Memo Details;
                           ENA=CR/Adj Note Details];
                Visible=ShowDetailsTab;
                GroupType=Group }

    { 107 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency of amounts on the sales lines. Leave the field empty to use the customer's default currency code.;
                           ENA=Specifies the currency of amounts on the sales lines. Leave the field empty to use the customer's default currency code.];
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=VAR
                               ChangeExchangeRate@1000 : Page 511;
                             BEGIN
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                             END;
                              }

    { 33  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date you expect to ship items on the sales document. By default, today's date is entered.;
                           ENA=Specifies the date you expect to ship items on the sales document. By default, today's date is entered.];
                SourceExpr="Shipment Date" }

    { 121 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the unit price on the line should be displayed including or excluding VAT.;
                           ENA=Specifies whether the unit price on the line should be displayed including or excluding GST.];
                SourceExpr="Prices Including VAT";
                Visible=FALSE;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             CALCFIELDS("Invoice Discount Amount");
                             SalesCalcDiscByType.ApplyDefaultInvoiceDiscount("Invoice Discount Amount",Rec);
                           END;
                            }

    { 156 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's VAT specification to link transactions made for this customer with the appropriate general ledger account according to the VAT posting setup.;
                           ENA=Specifies the customer's GST specification to link transactions made for this customer with the appropriate general ledger account according to the GST posting setup.];
                SourceExpr="VAT Bus. Posting Group";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the sales document. By default, the payment term from the customer card is entered.;
                           ENA=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the sales document. By default, the payment term from the customer card is entered.];
                SourceExpr="Payment Terms Code";
                Importance=Promoted }

    { 101 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how payment for the sales document must be submitted, such as bank transfer or check. By default, the payment method from the customer card is entered.;
                           ENA=Specifies how payment for the sales document must be submitted, such as bank transfer or cheque. By default, the payment method from the customer card is entered.];
                SourceExpr="Payment Method Code" }

    { 112 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the document is open, waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.;
                           ENA=Specifies whether the document is open, waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.];
                SourceExpr=Status;
                Importance=Promoted;
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Enter here a code for the sales header's transaction type. To see the transaction type codes in the Transaction Type table, click the field.;
                           ENA=Enter here a code for the sales header's transaction type. To see the transaction type codes in the Transaction Type table, click the field.];
                SourceExpr="Transaction Type" }

    { 1905885101;1;Group  ;
                Name=BilltoandShiptoAddresses;
                CaptionML=[ENU=Bill-to Customer Addresses;
                           ENA=Bill-to Customer Addresses];
                Visible=ShowBillToShipToTab;
                GroupType=Group }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Name;
                           ENA=Name];
                ToolTipML=[ENU=Specifies the customer to whom you will send the sales invoice, when different from the customer that you are selling to. By default, the name and address of the customer that you are selling to is entered.;
                           ENA=Specifies the customer to whom you will send the sales invoice, when different from the customer that you are selling to. By default, the name and address of the customer that you are selling to is entered.];
                SourceExpr="Bill-to Name";
                TableRelation=Customer.Name;
                LookupPageID=Mini Customer List;
                DrillDownPageID=Mini Customer List;
                OnValidate=VAR
                             MiniCustomerMgt@1001 : Codeunit 1302;
                             NewCustomerNo@1000 : Code[20];
                           BEGIN
                             IF "Bill-to Name" <> xRec."Bill-to Name" THEN BEGIN
                               NewCustomerNo := MiniCustomerMgt.GetCustNoByName("Bill-to Name");
                               VALIDATE("Bill-to Customer No.",NewCustomerNo);
                             END;
                             CurrPage.UPDATE;
                             SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 19  ;2   ;Field     ;
                CaptionML=[ENU=Address;
                           ENA=Address];
                ToolTipML=[ENU=Specifies the address of the customer that you will send the invoice to.;
                           ENA=Specifies the address of the customer that you will send the invoice to.];
                SourceExpr="Bill-to Address" }

    { 24  ;2   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENA=Address 2];
                ToolTipML=[ENU=Contains another line of the address of the customer that you will send the invoice to.;
                           ENA=Contains another line of the address of the customer that you will send the invoice to.];
                SourceExpr="Bill-to Address 2" }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENA=Post Code];
                ToolTipML=[ENU=Specifies the post code of the customer's billing address.;
                           ENA=Specifies the post code of the customer's billing address.];
                SourceExpr="Bill-to Post Code" }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=City;
                           ENA=City];
                ToolTipML=[ENU=Specifies the city name of the customer that you will send the invoice to.;
                           ENA=Specifies the city name of the customer that you will send the invoice to.];
                SourceExpr="Bill-to City" }

    { 9   ;2   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENA=Contact];
                ToolTipML=[ENU=Specifies the name of the person you should contact at the customer that you are sending the invoice to.;
                           ENA=Specifies the name of the person you should contact at the customer that you are sending the invoice to.];
                SourceExpr="Bill-to Contact" }

    { 13  ;1   ;Part      ;
                Name=SalesLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page1320 }

  }
  CODE
  {
    VAR
      UserSetupManagement@1004 : Codeunit 5700;
      SalesCalcDiscByType@1002 : Codeunit 1300;
      MiniLinesInstructionMgt@1003 : Codeunit 1320;
      ShowBillToShipToTab@1005 : Boolean;
      ShowDetailsTab@1007 : Boolean;
      SelectCustErr@1008 : TextConst 'ENU=You must select an existing customer.;ENA=You must select an existing customer.';
      OpenPostedSalesCrMemoQst@1006 : TextConst 'ENU=The credit memo has been posted and archived.\\Do you want to open the posted credit memo from the Posted Sales Credit Memo list?;ENA=The CR/Adj Note has been posted and archived.\\Do you want to open the posted CR/Adj Note from the Posted Sales CR/Adj Note list?';
      AllowDotNetAddIn@1000 : Boolean INDATASET;
      PostAndPrintQst@1001 : TextConst 'ENU=Do you want to post and print the credit memo?;ENA=Do you want to post and print the CR/Adj Note?';

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer);
    BEGIN
      MiniLinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);

      SendToPosting(PostingCodeunitID);
      IF "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting" THEN
        CurrPage.CLOSE
      ELSE
        ShowPostedConfirmationMessage;
    END;

    LOCAL PROCEDURE PostAndPrint@1(PostingCodeunitID@1000 : Integer);
    VAR
      SalesCrMemoHeader@1001 : Record 114;
    BEGIN
      MiniLinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);

      IF NOT CONFIRM(PostAndPrintQst,FALSE) THEN
        EXIT;
      SendToPosting(PostingCodeunitID);
      IF SalesCrMemoHeader.GET("Last Posting No.") THEN BEGIN
        SalesCrMemoHeader.SETRECFILTER;
        COMMIT;
        SalesCrMemoHeader.PrintRecords(NOT AllowDotNetAddIn);
        ShowPostedConfirmationMessage;
      END;
    END;

    PROCEDURE GetCustNoByName@56(CustomerName@1000 : Text[50]) : Code[20];
    VAR
      Customer@1001 : Record 18;
    BEGIN
      Customer.SETRANGE(Name,CustomerName);
      CASE Customer.COUNT OF
        0:
          ERROR(SelectCustErr);
        1:
          BEGIN
            Customer.FINDFIRST;
            EXIT(Customer."No.");
          END;
        ELSE
          EXIT(PickCustomer(Customer));
      END;
    END;

    LOCAL PROCEDURE PickCustomer@58(Customer@1000 : Record 18) : Code[20];
    VAR
      MiniCustomerList@1001 : Page 1301;
    BEGIN
      MiniCustomerList.SETTABLEVIEW(Customer);
      MiniCustomerList.LOOKUPMODE := TRUE;
      IF MiniCustomerList.RUNMODAL <> ACTION::LookupOK THEN
        ERROR(SelectCustErr);

      MiniCustomerList.GETRECORD(Customer);
      EXIT(Customer."No.");
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@7();
    VAR
      SalesCrMemoHeader@1000 : Record 114;
    BEGIN
      SalesCrMemoHeader.SETFILTER("Pre-Assigned No.","No.");
      IF SalesCrMemoHeader.FINDFIRST THEN
        IF DIALOG.CONFIRM(OpenPostedSalesCrMemoQst,FALSE) THEN
          PAGE.RUN(PAGE::"Mini Posted Sales Credit Memo",SalesCrMemoHeader);
    END;

    BEGIN
    END.
  }
}

