OBJECT Table 98 General Ledger Setup
{
  OBJECT-PROPERTIES
  {
    Date=09/23/13;
    Time=12:00:00;
    Version List=NAVW17.10,NAVAPAC7.10,UPG09R2,UPG13,UPG13R2;
  }
  PROPERTIES
  {
    CaptionML=[ENU=General Ledger Setup;
               ENA=General Ledger Setup];
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              ENA=Primary Key] }
    { 2   ;   ;Allow Posting From  ;Date          ;CaptionML=[ENU=Allow Posting From;
                                                              ENA=Allow Posting From] }
    { 3   ;   ;Allow Posting To    ;Date          ;CaptionML=[ENU=Allow Posting To;
                                                              ENA=Allow Posting To] }
    { 4   ;   ;Register Time       ;Boolean       ;CaptionML=[ENU=Register Time;
                                                              ENA=Register Time] }
    { 28  ;   ;Pmt. Disc. Excl. VAT;Boolean       ;OnValidate=BEGIN
                                                                IF "Pmt. Disc. Excl. VAT" THEN
                                                                  TESTFIELD("Adjust for Payment Disc.",FALSE)
                                                                ELSE
                                                                  TESTFIELD("VAT Tolerance %",0);
                                                              END;

                                                   CaptionML=[ENU=Pmt. Disc. Excl. VAT;
                                                              ENA=Pmt. Disc. Excl. GST] }
    { 41  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              ENA=Date Filter] }
    { 42  ;   ;Global Dimension 1 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Global Dimension 1 Code));
                                                   CaptionML=[ENU=Global Dimension 1 Filter;
                                                              ENA=Global Dimension 1 Filter];
                                                   CaptionClass='1,3,1' }
    { 43  ;   ;Global Dimension 2 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Global Dimension 2 Code));
                                                   CaptionML=[ENU=Global Dimension 2 Filter;
                                                              ENA=Global Dimension 2 Filter];
                                                   CaptionClass='1,3,2' }
    { 44  ;   ;Cust. Balances Due  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                      Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                      Initial Entry Due Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Cust. Balances Due;
                                                              ENA=Cust. Balances Due];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 45  ;   ;Vendor Balances Due ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE (Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                        Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                        Initial Entry Due Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Vendor Balances Due;
                                                              ENA=Vendor Balances Due];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 48  ;   ;Unrealized VAT      ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT "Unrealized VAT" THEN BEGIN
                                                                  VATPostingSetup.SETFILTER(
                                                                    "Unrealized VAT Type",'>=%1',VATPostingSetup."Unrealized VAT Type"::Percentage);
                                                                  IF VATPostingSetup.FINDFIRST THEN
                                                                    ERROR(
                                                                      Text000,VATPostingSetup.TABLECAPTION,
                                                                      VATPostingSetup."VAT Bus. Posting Group",VATPostingSetup."VAT Prod. Posting Group",
                                                                      VATPostingSetup.FIELDCAPTION("Unrealized VAT Type"),VATPostingSetup."Unrealized VAT Type");
                                                                  TaxJurisdiction.SETFILTER(
                                                                    "Unrealized VAT Type",'>=%1',TaxJurisdiction."Unrealized VAT Type"::Percentage);
                                                                  IF TaxJurisdiction.FINDFIRST THEN
                                                                    ERROR(
                                                                      Text001,TaxJurisdiction.TABLECAPTION,
                                                                      TaxJurisdiction.Code,TaxJurisdiction.FIELDCAPTION("Unrealized VAT Type"),
                                                                      TaxJurisdiction."Unrealized VAT Type");
                                                                END;
                                                                IF "Unrealized VAT" THEN
                                                                  "Prepayment Unrealized VAT" := TRUE
                                                                ELSE
                                                                  "Prepayment Unrealized VAT" := FALSE;
                                                              END;

                                                   CaptionML=[ENU=Unrealized VAT;
                                                              ENA=Unrealised GST] }
    { 49  ;   ;Adjust for Payment Disc.;Boolean   ;OnValidate=BEGIN
                                                                IF "Adjust for Payment Disc." THEN BEGIN
                                                                  TESTFIELD("Pmt. Disc. Excl. VAT",FALSE);
                                                                  TESTFIELD("VAT Tolerance %",0);
                                                                END ELSE BEGIN
                                                                  VATPostingSetup.SETRANGE("Adjust for Payment Discount",TRUE);
                                                                  IF VATPostingSetup.FINDFIRST THEN
                                                                    ERROR(
                                                                      Text002,VATPostingSetup.TABLECAPTION,
                                                                      VATPostingSetup."VAT Bus. Posting Group",VATPostingSetup."VAT Prod. Posting Group",
                                                                      VATPostingSetup.FIELDCAPTION("Adjust for Payment Discount"));
                                                                  TaxJurisdiction.SETRANGE("Adjust for Payment Discount",TRUE);
                                                                  IF TaxJurisdiction.FINDFIRST THEN
                                                                    ERROR(
                                                                      Text003,TaxJurisdiction.TABLECAPTION,
                                                                      TaxJurisdiction.Code,TaxJurisdiction.FIELDCAPTION("Adjust for Payment Discount"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Adjust for Payment Disc.;
                                                              ENA=Adjust for Payment Disc.] }
    { 56  ;   ;Mark Cr. Memos as Corrections;Boolean;
                                                   CaptionML=[ENU=Mark Cr. Memos as Corrections;
                                                              ENA=Mark CR/Adj Note as Correct.] }
    { 57  ;   ;Local Address Format;Option        ;CaptionML=[ENU=Local Address Format;
                                                              ENA=Local Address Format];
                                                   OptionCaptionML=[ENU=Post Code+City,City+Post Code,City+County+Post Code,Blank Line+Post Code+City,City+Post Code (no comma),City+County+Post Code (no comma);
                                                                    ENA=Post Code+City,City+Post Code,City+State+Post Code,Blank Line+Post Code+City,City+Post Code (no comma),City+State+Post Code (no comma)];
                                                   OptionString=Post Code+City,City+Post Code,City+County+Post Code,Blank Line+Post Code+City,City+Post Code (no comma),City+County+Post Code (no comma) }
    { 58  ;   ;Inv. Rounding Precision (LCY);Decimal;
                                                   OnValidate=BEGIN
                                                                IF "Amount Rounding Precision" <> 0 THEN
                                                                  IF "Inv. Rounding Precision (LCY)" <> ROUND("Inv. Rounding Precision (LCY)","Amount Rounding Precision") THEN
                                                                    ERROR(
                                                                      Text004,
                                                                      FIELDCAPTION("Inv. Rounding Precision (LCY)"),"Amount Rounding Precision");
                                                              END;

                                                   CaptionML=[ENU=Inv. Rounding Precision (LCY);
                                                              ENA=Inv. Rounding Precision (LCY)];
                                                   AutoFormatType=1 }
    { 59  ;   ;Inv. Rounding Type (LCY);Option    ;CaptionML=[ENU=Inv. Rounding Type (LCY);
                                                              ENA=Inv. Rounding Type (LCY)];
                                                   OptionCaptionML=[ENU=Nearest,Up,Down;
                                                                    ENA=Nearest,Up,Down];
                                                   OptionString=Nearest,Up,Down }
    { 60  ;   ;Local Cont. Addr. Format;Option    ;InitValue=After Company Name;
                                                   CaptionML=[ENU=Local Cont. Addr. Format;
                                                              ENA=Local Cont. Addr. Format];
                                                   OptionCaptionML=[ENU=First,After Company Name,Last;
                                                                    ENA=First,After Company Name,Last];
                                                   OptionString=First,After Company Name,Last }
    { 63  ;   ;Bank Account Nos.   ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Bank Account Nos.;
                                                              ENA=Bank Account Nos.] }
    { 65  ;   ;Summarize G/L Entries;Boolean      ;CaptionML=[ENU=Summarize G/L Entries;
                                                              ENA=Summarise G/L Entries] }
    { 66  ;   ;Amount Decimal Places;Text5        ;InitValue=2:2;
                                                   OnValidate=BEGIN
                                                                CheckDecimalPlacesFormat("Amount Decimal Places");
                                                              END;

                                                   CaptionML=[ENU=Amount Decimal Places;
                                                              ENA=Amount Decimal Places] }
    { 67  ;   ;Unit-Amount Decimal Places;Text5   ;InitValue=2:5;
                                                   OnValidate=BEGIN
                                                                CheckDecimalPlacesFormat("Unit-Amount Decimal Places");
                                                              END;

                                                   CaptionML=[ENU=Unit-Amount Decimal Places;
                                                              ENA=Unit-Amount Decimal Places] }
    { 68  ;   ;Additional Reporting Currency;Code10;
                                                   TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF ("Additional Reporting Currency" <> xRec."Additional Reporting Currency") AND
                                                                   ("Additional Reporting Currency" <> '')
                                                                THEN BEGIN
                                                                  AdjAddReportingCurr.SetAddCurr("Additional Reporting Currency");
                                                                  AdjAddReportingCurr.RUNMODAL;
                                                                  IF NOT AdjAddReportingCurr.IsExecuted THEN
                                                                    "Additional Reporting Currency" := xRec."Additional Reporting Currency";
                                                                END;
                                                                IF ("Additional Reporting Currency" <> xRec."Additional Reporting Currency") AND
                                                                   AdjAddReportingCurr.IsExecuted
                                                                THEN
                                                                  DeleteIntrastatJnl;
                                                                IF ("Additional Reporting Currency" <> xRec."Additional Reporting Currency") AND
                                                                   ("Additional Reporting Currency" <> '') AND
                                                                   AdjAddReportingCurr.IsExecuted
                                                                THEN
                                                                  DeleteAnalysisView;
                                                              END;

                                                   CaptionML=[ENU=Additional Reporting Currency;
                                                              ENA=Additional Reporting Currency] }
    { 69  ;   ;VAT Tolerance %     ;Decimal       ;OnValidate=BEGIN
                                                                IF "VAT Tolerance %" <> 0 THEN BEGIN
                                                                  TESTFIELD("Adjust for Payment Disc.",FALSE);
                                                                  TESTFIELD("Pmt. Disc. Excl. VAT",TRUE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=VAT Tolerance %;
                                                              ENA=GST Tolerance %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 70  ;   ;EMU Currency        ;Boolean       ;CaptionML=[ENU=EMU Currency;
                                                              ENA=EMU Currency] }
    { 71  ;   ;LCY Code            ;Code10        ;CaptionML=[ENU=LCY Code;
                                                              ENA=LCY Code] }
    { 72  ;   ;VAT Exchange Rate Adjustment;Option;CaptionML=[ENU=VAT Exchange Rate Adjustment;
                                                              ENA=GST Exchange Rate Adjustment];
                                                   OptionCaptionML=[ENU=No Adjustment,Adjust Amount,Adjust Additional-Currency Amount;
                                                                    ENA=No Adjustment,Adjust Amount,Adjust Additional-Currency Amount];
                                                   OptionString=No Adjustment,Adjust Amount,Adjust Additional-Currency Amount }
    { 73  ;   ;Amount Rounding Precision;Decimal  ;InitValue=0,01;
                                                   OnValidate=BEGIN
                                                                IF "Amount Rounding Precision" <> 0 THEN
                                                                  "Inv. Rounding Precision (LCY)" := ROUND("Inv. Rounding Precision (LCY)","Amount Rounding Precision");
                                                                RoundingErrorCheck(FIELDCAPTION("Amount Rounding Precision"));
                                                                IF HideDialog THEN
                                                                  MESSAGE(Text021);
                                                              END;

                                                   CaptionML=[ENU=Amount Rounding Precision;
                                                              ENA=Amount Rounding Precision];
                                                   DecimalPlaces=0:5 }
    { 74  ;   ;Unit-Amount Rounding Precision;Decimal;
                                                   InitValue=0,00001;
                                                   OnValidate=BEGIN
                                                                IF HideDialog THEN
                                                                  MESSAGE(Text022);
                                                              END;

                                                   CaptionML=[ENU=Unit-Amount Rounding Precision;
                                                              ENA=Unit-Amount Rounding Precision];
                                                   DecimalPlaces=0:9 }
    { 75  ;   ;Appln. Rounding Precision;Decimal  ;CaptionML=[ENU=Appln. Rounding Precision;
                                                              ENA=Appln. Rounding Precision];
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 79  ;   ;Global Dimension 1 Code;Code20     ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                "Shortcut Dimension 1 Code" := "Global Dimension 1 Code";
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              ENA=Global Dimension 1 Code];
                                                   Editable=No }
    { 80  ;   ;Global Dimension 2 Code;Code20     ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                "Shortcut Dimension 2 Code" := "Global Dimension 2 Code";
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              ENA=Global Dimension 2 Code];
                                                   Editable=No }
    { 81  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              ENA=Shortcut Dimension 1 Code];
                                                   Editable=No }
    { 82  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              ENA=Shortcut Dimension 2 Code];
                                                   Editable=No }
    { 83  ;   ;Shortcut Dimension 3 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                IF Dim.CheckIfDimUsed("Shortcut Dimension 3 Code",3,'','',0) THEN
                                                                  ERROR(Text023,Dim.GetCheckDimErr);
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 3 Code;
                                                              ENA=Shortcut Dimension 3 Code] }
    { 84  ;   ;Shortcut Dimension 4 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                IF Dim.CheckIfDimUsed("Shortcut Dimension 4 Code",4,'','',0) THEN
                                                                  ERROR(Text023,Dim.GetCheckDimErr);
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 4 Code;
                                                              ENA=Shortcut Dimension 4 Code] }
    { 85  ;   ;Shortcut Dimension 5 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                IF Dim.CheckIfDimUsed("Shortcut Dimension 5 Code",5,'','',0) THEN
                                                                  ERROR(Text023,Dim.GetCheckDimErr);
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 5 Code;
                                                              ENA=Shortcut Dimension 5 Code] }
    { 86  ;   ;Shortcut Dimension 6 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                IF Dim.CheckIfDimUsed("Shortcut Dimension 6 Code",6,'','',0) THEN
                                                                  ERROR(Text023,Dim.GetCheckDimErr);
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 6 Code;
                                                              ENA=Shortcut Dimension 6 Code] }
    { 87  ;   ;Shortcut Dimension 7 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                IF Dim.CheckIfDimUsed("Shortcut Dimension 7 Code",7,'','',0) THEN
                                                                  ERROR(Text023,Dim.GetCheckDimErr);
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 7 Code;
                                                              ENA=Shortcut Dimension 7 Code] }
    { 88  ;   ;Shortcut Dimension 8 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                IF Dim.CheckIfDimUsed("Shortcut Dimension 8 Code",8,'','',0) THEN
                                                                  ERROR(Text023,Dim.GetCheckDimErr);
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 8 Code;
                                                              ENA=Shortcut Dimension 8 Code] }
    { 89  ;   ;Max. VAT Difference Allowed;Decimal;OnValidate=BEGIN
                                                                IF "Max. VAT Difference Allowed" <> ROUND("Max. VAT Difference Allowed") THEN
                                                                  ERROR(
                                                                    Text004,
                                                                    FIELDCAPTION("Max. VAT Difference Allowed"),"Amount Rounding Precision");

                                                                "Max. VAT Difference Allowed" := ABS("Max. VAT Difference Allowed");
                                                              END;

                                                   CaptionML=[ENU=Max. VAT Difference Allowed;
                                                              ENA=Max. GST Difference Allowed];
                                                   AutoFormatType=1 }
    { 90  ;   ;VAT Rounding Type   ;Option        ;CaptionML=[ENU=VAT Rounding Type;
                                                              ENA=GST Rounding Type];
                                                   OptionCaptionML=[ENU=Nearest,Up,Down;
                                                                    ENA=Nearest,Up,Down];
                                                   OptionString=Nearest,Up,Down }
    { 92  ;   ;Pmt. Disc. Tolerance Posting;Option;CaptionML=[ENU=Pmt. Disc. Tolerance Posting;
                                                              ENA=Pmt. Disc. Tolerance Posting];
                                                   OptionCaptionML=[ENU=Payment Tolerance Accounts,Payment Discount Accounts;
                                                                    ENA=Payment Tolerance Accounts,Payment Discount Accounts];
                                                   OptionString=Payment Tolerance Accounts,Payment Discount Accounts }
    { 93  ;   ;Payment Discount Grace Period;DateFormula;
                                                   CaptionML=[ENU=Payment Discount Grace Period;
                                                              ENA=Payment Discount Grace Period] }
    { 94  ;   ;Payment Tolerance % ;Decimal       ;CaptionML=[ENU=Payment Tolerance %;
                                                              ENA=Payment Tolerance %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Editable=No }
    { 95  ;   ;Max. Payment Tolerance Amount;Decimal;
                                                   CaptionML=[ENU=Max. Payment Tolerance Amount;
                                                              ENA=Max. Payment Tolerance Amount];
                                                   MinValue=0;
                                                   Editable=No }
    { 96  ;   ;Adapt Main Menu to Permissions;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=[ENU=Adapt Main Menu to Permissions;
                                                              ENA=Adapt Main Menu to Permissions] }
    { 97  ;   ;Allow G/L Acc. Deletion Before;Date;CaptionML=[ENU=Allow G/L Acc. Deletion Before;
                                                              ENA=Allow G/L Acc. Deletion Before] }
    { 98  ;   ;Check G/L Account Usage;Boolean    ;CaptionML=[ENU=Check G/L Account Usage;
                                                              ENA=Check G/L Account Usage] }
    { 99  ;   ;Payment Tolerance Posting;Option   ;CaptionML=[ENU=Payment Tolerance Posting;
                                                              ENA=Payment Tolerance Posting];
                                                   OptionCaptionML=[ENU=Payment Tolerance Accounts,Payment Discount Accounts;
                                                                    ENA=Payment Tolerance Accounts,Payment Discount Accounts];
                                                   OptionString=Payment Tolerance Accounts,Payment Discount Accounts }
    { 100 ;   ;Pmt. Disc. Tolerance Warning;Boolean;
                                                   CaptionML=[ENU=Pmt. Disc. Tolerance Warning;
                                                              ENA=Pmt. Disc. Tolerance Warning] }
    { 101 ;   ;Payment Tolerance Warning;Boolean  ;CaptionML=[ENU=Payment Tolerance Warning;
                                                              ENA=Payment Tolerance Warning] }
    { 102 ;   ;Last IC Transaction No.;Integer    ;CaptionML=[ENU=Last IC Transaction No.;
                                                              ENA=Last IC Transaction No.] }
    { 103 ;   ;Bill-to/Sell-to VAT Calc.;Option   ;CaptionML=[ENU=Bill-to/Sell-to VAT Calc.;
                                                              ENA=Bill-to/Sell-to GST Calc.];
                                                   OptionCaptionML=[ENU=Bill-to/Pay-to No.,Sell-to/Buy-from No.;
                                                                    ENA=Bill-to/Pay-to No.,Sell-to/Buy-from No.];
                                                   OptionString=Bill-to/Pay-to No.,Sell-to/Buy-from No. }
    { 150 ;   ;Print VAT specification in LCY;Boolean;
                                                   CaptionML=[ENU=Print VAT specification in LCY;
                                                              ENA=Print GST specification in LCY] }
    { 151 ;   ;Prepayment Unrealized VAT;Boolean  ;OnValidate=BEGIN
                                                                IF "Unrealized VAT" AND xRec."Prepayment Unrealized VAT" THEN
                                                                  ERROR(Text024,FIELDCAPTION("Prepayment Unrealized VAT"),FIELDCAPTION("Unrealized VAT"));

                                                                IF NOT "Prepayment Unrealized VAT" THEN BEGIN
                                                                  VATPostingSetup.SETFILTER(
                                                                    "Unrealized VAT Type",'>=%1',VATPostingSetup."Unrealized VAT Type"::Percentage);
                                                                  IF VATPostingSetup.FINDFIRST THEN
                                                                    ERROR(
                                                                      Text000,VATPostingSetup.TABLECAPTION,
                                                                      VATPostingSetup."VAT Bus. Posting Group",VATPostingSetup."VAT Prod. Posting Group",
                                                                      VATPostingSetup.FIELDCAPTION("Unrealized VAT Type"),VATPostingSetup."Unrealized VAT Type");
                                                                  TaxJurisdiction.SETFILTER(
                                                                    "Unrealized VAT Type",'>=%1',TaxJurisdiction."Unrealized VAT Type"::Percentage);
                                                                  IF TaxJurisdiction.FINDFIRST THEN
                                                                    ERROR(
                                                                      Text001,TaxJurisdiction.TABLECAPTION,
                                                                      TaxJurisdiction.Code,TaxJurisdiction.FIELDCAPTION("Unrealized VAT Type"),
                                                                      TaxJurisdiction."Unrealized VAT Type");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Prepayment Unrealized VAT;
                                                              ENA=Prepayment Unrealised GST] }
    { 152 ;   ;Use Legacy G/L Entry Locking;Boolean;
                                                   OnValidate=VAR
                                                                InventorySetup@1000 : Record 313;
                                                              BEGIN
                                                                IF NOT "Use Legacy G/L Entry Locking" THEN BEGIN
                                                                  IF InventorySetup.GET THEN
                                                                    IF InventorySetup."Automatic Cost Posting" THEN
                                                                      ERROR(Text025,
                                                                        FIELDCAPTION("Use Legacy G/L Entry Locking"),
                                                                        "Use Legacy G/L Entry Locking",
                                                                        InventorySetup.FIELDCAPTION("Automatic Cost Posting"),
                                                                        InventorySetup.TABLECAPTION,
                                                                        InventorySetup."Automatic Cost Posting");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Use Legacy G/L Entry Locking;
                                                              ENA=Use Legacy G/L Entry Locking] }
    { 160 ;   ;Payroll Trans. Import Format;Code20;TableRelation="Posting Exch. Def" WHERE (Type=CONST(Payroll Import));
                                                   CaptionML=[ENU=Payroll Trans. Import Format;
                                                              ENA=Payroll Trans. Import Format] }
    { 11600;  ;BAS to be Lodged as a Group;Boolean;OnValidate=BEGIN
                                                                IF (xRec."BAS to be Lodged as a Group" = TRUE) AND ("BAS Group Company" = TRUE) THEN
                                                                  ERROR(
                                                                    Text1500000,
                                                                    FIELDCAPTION("BAS to be Lodged as a Group"),xRec."BAS to be Lodged as a Group",
                                                                    FIELDCAPTION("BAS Group Company"),"BAS Group Company");
                                                              END;

                                                   CaptionML=[ENU=BAS to be Lodged as a Group;
                                                              ENA=BAS to be Lodged as a Group] }
    { 11601;  ;BAS Group Company   ;Boolean       ;OnValidate=BEGIN
                                                                IF "BAS Group Company" THEN BEGIN
                                                                  Company.SETFILTER(Name,'<>%1',COMPANYNAME);
                                                                  IF Company.FIND('-') THEN
                                                                    REPEAT
                                                                      GLSetup.CHANGECOMPANY(Company.Name);
                                                                      IF GLSetup."BAS Group Company" THEN
                                                                        ERROR(
                                                                          Text1500001,
                                                                          Company.Name,FIELDCAPTION("BAS Group Company"));
                                                                    UNTIL Company.NEXT = 0;
                                                                  TESTFIELD("BAS to be Lodged as a Group",TRUE);
                                                                END ELSE BEGIN
                                                                  IF NOT CONFIRM(
                                                                    Text1500002,
                                                                    FALSE,BASBusUnit.TABLECAPTION)
                                                                  THEN
                                                                    ERROR('')
                                                                  ELSE BEGIN
                                                                    BASBusUnit.RESET;
                                                                    BASBusUnit.DELETEALL;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=BAS Group Company;
                                                              ENA=BAS Group Company] }
    { 11602;  ;BAS GST Division Factor;Decimal    ;CaptionML=[ENU=BAS GST Division Factor;
                                                              ENA=BAS GST Division Factor];
                                                   MinValue=0 }
    { 11603;  ;Adjustment Mandatory;Boolean       ;CaptionML=[ENU=Adjustment Mandatory;
                                                              ENA=Adjustment Mandatory];
                                                   Editable=Yes }
    { 11604;  ;Enable GST (Australia);Boolean     ;OnValidate=BEGIN
                                                                IF NOT BASSetupName.READPERMISSION THEN
                                                                  ERROR(Text1500003);
                                                              END;

                                                   CaptionML=[ENU=Enable GST (Australia);
                                                              ENA=Enable GST (Australia)] }
    { 11605;  ;Enable IRD No.      ;Boolean       ;CaptionML=[ENU=Enable IRD No.;
                                                              ENA=ACN (Australian Company Number)] }
    { 11606;  ;Enable VAT Registration No.;Boolean;CaptionML=[ENU=Enable VAT Registration No.;
                                                              ENA=Enable Exemption Certificate No.] }
    { 28000;  ;Address Validation  ;Option        ;CaptionML=[ENU=Address Validation;
                                                              ENA=Address Validation];
                                                   OptionCaptionML=[ENU=Post Code & City,Entire Address,Address ID;
                                                                    ENA=Post Code & City,Entire Address,Address ID];
                                                   OptionString=Post Code & City,Entire Address,Address ID }
    { 28001;  ;AMAS Software       ;Integer       ;CaptionML=[ENU=AMAS Software;
                                                              ENA=AMAS Software] }
    { 28002;  ;BarCode Custom Information;Option  ;CaptionML=[ENU=BarCode Custom Information;
                                                              ENA=BarCode Custom Information];
                                                   OptionCaptionML=[ENU=" ,Code,Global Dimension 1 Code,Global Dimension 2 Code";
                                                                    ENA=" ,Code,Global Dimension 1 Code,Global Dimension 2 Code"];
                                                   OptionString=[ ,Code,Global Dimension 1 Code,Global Dimension 2 Code] }
    { 28005;  ;Full GST on Prepayment;Boolean     ;CaptionML=[ENU=Full GST on Prepayment;
                                                              ENA=Full GST on Prepayment] }
    { 28042;  ;Manual Sales WHT Calc.;Boolean     ;CaptionML=[ENU=Manual Sales WHT Calc.;
                                                              ENA=Manual Sales WHT Calc.] }
    { 28043;  ;Enable WHT          ;Boolean       ;CaptionML=[ENU=Enable WHT;
                                                              ENA=Enable WHT] }
    { 28044;  ;Enable Tax Invoices ;Boolean       ;CaptionML=[ENU=Enable Tax Invoices;
                                                              ENA=Enable Tax Invoices] }
    { 28045;  ;Print Tax Invoices on Posting;Boolean;
                                                   CaptionML=[ENU=Print Tax Invoices on Posting;
                                                              ENA=Print Tax Invoices on Posting] }
    { 28046;  ;Round Amount for WHT Calc;Boolean  ;CaptionML=[ENU=Round Amount for WHT Calc;
                                                              ENA=Round Amount for WHT Calc] }
    { 28047;  ;Min. WHT Calc only on Inv. Amt;Boolean;
                                                   CaptionML=[ENU=Min. WHT Calc only on Inv. Amt;
                                                              ENA=Min. WHT Calc only on Inv. Amt] }
    { 28048;  ;Force Payment With Invoice;Boolean ;CaptionML=[ENU=Force Payment With Invoice;
                                                              ENA=Force Payment With Invoice] }
    { 28090;  ;Post Dated Journal Template;Code10 ;TableRelation="Gen. Journal Template";
                                                   CaptionML=[ENU=Post Dated Journal Template;
                                                              ENA=Post Dated Journal Template] }
    { 28091;  ;Post Dated Journal Batch;Code10    ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(Post Dated Journal Template));
                                                   CaptionML=[ENU=Post Dated Journal Batch;
                                                              ENA=Post Dated Journal Batch] }
    { 28092;  ;Interest Cal Excl. VAT;Boolean     ;CaptionML=[ENU=Interest Cal Excl. VAT;
                                                              ENA=Interest Cal Excl. GST] }
    { 28093;  ;GST Report          ;Boolean       ;CaptionML=[ENU=GST Report;
                                                              ENA=GST Report] }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 %2 %3 have %4 to %5.;ENA=%1 %2 %3 have %4 to %5.';
      Text001@1001 : TextConst 'ENU=%1 %2 have %3 to %4.;ENA=%1 %2 have %3 to %4.';
      Text002@1002 : TextConst 'ENU=%1 %2 %3 use %4.;ENA=%1 %2 %3 use %4.';
      Text003@1003 : TextConst 'ENU=%1 %2 use %3.;ENA=%1 %2 use %3.';
      Text004@1004 : TextConst 'ENU=%1 must be rounded to the nearest %2.;ENA=%1 must be rounded to the nearest %2.';
      Text016@1013 : TextConst 'ENU="Enter one number or two numbers separated by a colon. ";ENA="Enter one number or two numbers separated by a colon. "';
      Text017@1014 : TextConst 'ENU=The online Help for this field describes how you can fill in the field.;ENA=The online Help for this field describes how you can fill in the field.';
      Text018@1015 : TextConst 'ENU=You cannot change the contents of the %1 field because there are posted ledger entries.;ENA=You cannot change the contents of the %1 field because there are posted ledger entries.';
      Text021@1018 : TextConst 'ENU=You must close the program and start again in order to activate the amount-rounding feature.;ENA=You must close the program and start again in order to activate the amount-rounding feature.';
      Text022@1019 : TextConst 'ENU=You must close the program and start again in order to activate the unit-amount rounding feature.;ENA=You must close the program and start again in order to activate the unit-amount rounding feature.';
      Text023@1020 : TextConst 'ENU=%1\You cannot use the same dimension twice in the same setup.;ENA=%1\You cannot use the same dimension twice in the same setup.';
      Dim@1021 : Record 348;
      GLEntry@1022 : Record 17;
      ItemLedgerEntry@1023 : Record 32;
      JobLedgEntry@1024 : Record 169;
      ResLedgEntry@1025 : Record 203;
      FALedgerEntry@1026 : Record 5601;
      MaintenanceLedgerEntry@1027 : Record 5625;
      InsCoverageLedgerEntry@1028 : Record 5629;
      VATPostingSetup@1029 : Record 325;
      TaxJurisdiction@1030 : Record 320;
      AdjAddReportingCurr@1031 : Report 86;
      AnalysisView@1032 : Record 363;
      AnalysisViewEntry@1033 : Record 365;
      AnalysisViewBudgetEntry@1034 : Record 366;
      ErrorMessage@1036 : Boolean;
      Text024@1009 : TextConst 'ENU=You cannot change the contents of the %1 field because the %2 is activated.;ENA=You cannot change the contents of the %1 field because the %2 is activated.';
      Text025@1016 : TextConst 'ENU=The field %1 should not be set to %2 if field %3 in %4 table is set to %5 because deadlocks can occur.;ENA=The field %1 should not be set to %2 if field %3 in %4 table is set to %5 because deadlocks can occur.';
      Company@1500007 : Record 2000000006;
      GLSetup@1500006 : Record 98;
      BASBusUnit@1500005 : Record 11603;
      BASSetupName@1500004 : Record 11606;
      Text1500000@1500003 : TextConst 'ENU=%1 must be set to %2 if %3 is set to %4.;ENA=%1 must be set to %2 if %3 is set to %4.';
      Text1500001@1500002 : TextConst 'ENU=%1 company is already set as %2.;ENA=%1 company is already set as %2.';
      Text1500002@1500001 : TextConst 'ENU=All records in %1 table will be deleted.;ENA=All records in %1 table will be deleted.';
      Text1500003@1500000 : TextConst 'ENU=You do not have permissions to activate this functionality.;ENA=You do not have permissions to activate this functionality.';

    PROCEDURE CheckDecimalPlacesFormat@1(VAR DecimalPlaces@1000 : Text[5]);
    VAR
      OK@1001 : Boolean;
      ColonPlace@1002 : Integer;
      DecimalPlacesPart1@1003 : Integer;
      DecimalPlacesPart2@1004 : Integer;
      Check@1005 : Text[5];
    BEGIN
      OK := TRUE;
      ColonPlace := STRPOS(DecimalPlaces,':');

      IF ColonPlace = 0 THEN BEGIN
        IF NOT EVALUATE(DecimalPlacesPart1,DecimalPlaces) THEN
          OK := FALSE;
        IF (DecimalPlacesPart1 < 0) OR (DecimalPlacesPart1 > 9) THEN
          OK := FALSE;
      END ELSE BEGIN
        Check := COPYSTR(DecimalPlaces,1,ColonPlace - 1);
        IF Check = '' THEN
          OK := FALSE;
        IF NOT EVALUATE(DecimalPlacesPart1,Check) THEN
          OK := FALSE;
        Check := COPYSTR(DecimalPlaces,ColonPlace + 1,STRLEN(DecimalPlaces));
        IF Check = '' THEN
          OK := FALSE;
        IF NOT EVALUATE(DecimalPlacesPart2,Check) THEN
          OK := FALSE;
        IF DecimalPlacesPart1 > DecimalPlacesPart2 THEN
          OK := FALSE;
        IF (DecimalPlacesPart1 < 0) OR (DecimalPlacesPart1 > 9) THEN
          OK := FALSE;
        IF (DecimalPlacesPart2 < 0) OR (DecimalPlacesPart2 > 9) THEN
          OK := FALSE;
      END;

      IF NOT OK THEN
        ERROR(
          Text016 +
          Text017);

      IF ColonPlace = 0 THEN
        DecimalPlaces := FORMAT(DecimalPlacesPart1)
      ELSE
        DecimalPlaces := STRSUBSTNO('%1:%2',DecimalPlacesPart1,DecimalPlacesPart2);
    END;

    PROCEDURE GetCurrencyCode@6(CurrencyCode@1000 : Code[10]) : Code[10];
    BEGIN
      CASE CurrencyCode OF
        '':
          EXIT("LCY Code");
        "LCY Code":
          EXIT('');
        ELSE
          EXIT(CurrencyCode);
      END;
    END;

    PROCEDURE RoundingErrorCheck@2(NameOfField@1000 : Text[100]);
    BEGIN
      ErrorMessage := FALSE;
      IF GLEntry.FINDFIRST THEN
        ErrorMessage := TRUE;
      IF ItemLedgerEntry.FINDFIRST THEN
        ErrorMessage := TRUE;
      IF JobLedgEntry.FINDFIRST THEN
        ErrorMessage := TRUE;
      IF ResLedgEntry.FINDFIRST THEN
        ErrorMessage := TRUE;
      IF FALedgerEntry.FINDFIRST THEN
        ErrorMessage := TRUE;
      IF MaintenanceLedgerEntry.FINDFIRST THEN
        ErrorMessage := TRUE;
      IF InsCoverageLedgerEntry.FINDFIRST THEN
        ErrorMessage := TRUE;
      IF ErrorMessage THEN
        ERROR(
          Text018,
          NameOfField);
    END;

    PROCEDURE DeleteIntrastatJnl@3();
    VAR
      IntrastatJnlBatch@1000 : Record 262;
      IntrastatJnlLine@1001 : Record 263;
    BEGIN
      IntrastatJnlBatch.SETRANGE(Reported,FALSE);
      IntrastatJnlBatch.SETRANGE("Amounts in Add. Currency",TRUE);
      IF IntrastatJnlBatch.FIND('-') THEN
        REPEAT
          IntrastatJnlLine.SETRANGE("Journal Template Name",IntrastatJnlBatch."Journal Template Name");
          IntrastatJnlLine.SETRANGE("Journal Batch Name",IntrastatJnlBatch.Name);
          IntrastatJnlLine.DELETEALL;
        UNTIL IntrastatJnlBatch.NEXT = 0;
    END;

    PROCEDURE DeleteAnalysisView@33();
    BEGIN
      IF AnalysisView.FIND('-') THEN
        REPEAT
          IF AnalysisView.Blocked = FALSE THEN BEGIN
            AnalysisViewEntry.SETRANGE("Analysis View Code",AnalysisView.Code);
            AnalysisViewEntry.DELETEALL;
            AnalysisViewBudgetEntry.SETRANGE("Analysis View Code",AnalysisView.Code);
            AnalysisViewBudgetEntry.DELETEALL;
            AnalysisView."Last Entry No." := 0;
            AnalysisView."Last Budget Entry No." := 0;
            AnalysisView."Last Date Updated" := 0D;
            AnalysisView.MODIFY;
          END ELSE BEGIN
            AnalysisView."Refresh When Unblocked" := TRUE;
            AnalysisView.MODIFY;
          END;
        UNTIL AnalysisView.NEXT = 0;
    END;

    PROCEDURE IsPostingAllowed@22(PostingDate@1000 : Date) : Boolean;
    BEGIN
      EXIT(PostingDate >= "Allow Posting From");
    END;

    PROCEDURE OptimGLEntLockForMultiuserEnv@4() : Boolean;
    VAR
      InventorySetup@1000 : Record 313;
    BEGIN
      IF "Use Legacy G/L Entry Locking" THEN
        EXIT(FALSE);

      IF InventorySetup.GET THEN
        IF InventorySetup."Automatic Cost Posting" THEN
          EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE FirstAllowedPostingDate@78() AllowedPostingDate : Date;
    VAR
      InvtPeriod@1000 : Record 5814;
    BEGIN
      AllowedPostingDate := "Allow Posting From";
      IF NOT InvtPeriod.IsValidDate(AllowedPostingDate) THEN
        AllowedPostingDate := CALCDATE('<+1D>',AllowedPostingDate);
    END;

    PROCEDURE GSTEnabled@1500000(DateToCheck@1500000 : Date) : Boolean;
    BEGIN
      IF DateToCheck <> 0D THEN
        EXIT((DateToCheck >= 010700D) AND "Enable GST (Australia)")
      ELSE
        EXIT("Enable GST (Australia)");
    END;

    PROCEDURE IRDNoEnabled@1500001() : Boolean;
    BEGIN
      EXIT("Enable IRD No.");
    END;

    PROCEDURE VATRegistrationNoEnabled@1500002() : Boolean;
    BEGIN
      EXIT("Enable VAT Registration No.");
    END;

    PROCEDURE CheckFullGSTonPrepayment@150000(VATBusPostingGr@150000 : Text[30];VATProdPostingGr@150001 : Text[30]) : Boolean;
    VAR
      VATPostingSetup@150002 : Record 325;
    BEGIN
      IF "Full GST on Prepayment" THEN
        IF VATPostingSetup.GET(VATBusPostingGr,VATProdPostingGr) THEN
          IF VATPostingSetup."Unrealized VAT Type" <> VATPostingSetup."Unrealized VAT Type"::Percentage THEN
            EXIT(TRUE);
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE HideDialog@5() : Boolean;
    BEGIN
      EXIT((CurrFieldNo = 0) OR NOT GUIALLOWED);
    END;

    BEGIN
    {
      //UPG09R2
      5.0 to 2009 R2 Merged Code in objects identification.
      //UPG13
      2009R2 to 2013 Merged Code.
      //UPG13R2
      2013 to 2013R2 Merged Code.
    }
    END.
  }
}

