OBJECT Codeunit 50083 YNSPIRE Import
{
  OBJECT-PROPERTIES
  {
    Date=11/27/15;
    Time=17:25:17;
    Modified=Yes;
    Version List=YNSPIRE1.2,PPNPPHDEV,UPG13R2DEV,CR001;
  }
  PROPERTIES
  {
    TableNo=472;
    OnRun=VAR
            Doc_No@1000000000 : Code[20];
            Cust_id@1000000001 : Code[20];
            NPWP_No@1000000003 : Code[20];
            Tax_InvDate@1000000004 : Date;
            Inv_Date@1000000005 : Date;
            Ext_no@1000000006 : Code[20];
            Cust_Master@1000000007 : Record 18;
            Ship_Add@1000000008 : Record 222;
            Due_Date@1000000009 : Date;
            Dim1@1000000010 : Text[10];
            Dim3@1000000011 : Text[10];
            GenLed_Setup@1000000012 : Record 98;
            Dim_Value@1000000013 : Record 349;
            Curr_Code@1000000014 : Code[10];
            Curry@1000000015 : Record 4;
            Tax_Date@1000000016 : Date;
            "G/L_Account"@1000000017 : Code[20];
            "G/L"@1000000018 : Record 15;
            Amount@1000000019 : Decimal;
            Vat@1000000020 : Boolean;
            Bl_date@1000000021 : Date;
            WHT_AreaCode@1000000023 : Code[10];
            Narration@1000000024 : Text[250];
            YNSPIREAccount@1000000025 : Record 50058;
            CustomerBankAcc@1102159001 : Record 287;
          BEGIN
            Ch:=9;
            Master_Setup.GET;
            FileName := Master_Setup."Interface File Path" + '\' + Master_Setup."YNSPIRE Input File";
            IF FileName = '' THEN
              EXIT;
            LogFile := Master_Setup."Interface File Path" + '\' + 'LOG-' + Master_Setup."YNSPIRE Input File";
            F1.CREATE(LogFile);
            F1.CREATEOUTSTREAM(Outstreamobj);
            F1.TEXTMODE(TRUE);
            Entry_No := 1;
            IF YNSPIREfile.OPEN(FileName) THEN BEGIN
              YNSPIREfile.CREATEINSTREAM(Instreamobj);
              WHILE NOT Instreamobj.EOS DO BEGIN
                Instreamobj.READTEXT(B,20);
                EVALUATE(Doc_No,B);
                IF Doc_No = '' THEN BEGIN
                  Error_Doc := TRUE;
                END ELSE BEGIN
                {//CR001.begin
                  IF SalesHeader.GET(3,Doc_No) THEN
                    Error_Doc1 := TRUE;
                  "SalesInv Header".SETRANGE("SalesInv Header"."Pre-Assigned No.",Doc_No);
                  IF "SalesInv Header".FINDFIRST THEN
                    Error_Doc2 := TRUE;
                }
                  SalesHeader.SETRANGE("External Document No.",Doc_No);
                  IF SalesHeader.FINDFIRST THEN
                    Error_Doc1 := TRUE;
                  "SalesInv Header".SETRANGE("External Document No.",Doc_No);
                  IF "SalesInv Header".FINDFIRST THEN
                    Error_Doc2 := TRUE;
                  //CR001.end
                END;
                Instreamobj.READTEXT(B,1);
                Instreamobj.READTEXT(B,20);
                EVALUATE(Cust_id,B);
                IF Cust_id = '' THEN
                  Error_Cust := TRUE
                ELSE IF NOT Cust_Master.GET(Cust_id) THEN
                  Error_Cust := TRUE
                ELSE BEGIN
                  IF ((Cust_Master."Customer Type"=Cust_Master."Customer Type"::" ") OR
                      (Cust_Master."Type of Dealer"=Cust_Master."Type of Dealer"::" ") OR
                      (Cust_Master."Gen. Bus. Posting Group"='') OR
                      (Cust_Master."VAT Bus. Posting Group"='') OR
                      (Cust_Master."WHT Business Posting Group"='') OR
                      (Cust_Master."Customer Posting Group"='') {OR
                      (Cust_Master."Customer Disc. Group"='')} )
                  THEN
                  Error_Cust_Setup := TRUE;
                END;
                {
                //Validate Bank Code SV.begin
                ConvTableEntity.RESET;
                ConvTableEntity.SETRANGE("YnspireSW Code",Cust_id);
                IF ConvTableEntity.FINDSET THEN BEGIN
                  IF ConvTableEntity."Bank Code" = '' THEN
                    BankCodeError := TRUE;
                END ELSE BEGIN
                  ConversionError := TRUE;
                END;
                //Validate Bank Code SV.end
                }//Bank Concept Previous code blocked
                ////UPG13R2DEV  SV Bank code new validation SV 01072015.begin
                {CustomerBankAcc.RESET;
                CustomerBankAcc.SETRANGE("Customer No.",Cust_id);
                CustomerBankAcc.SETRANGE(Service,TRUE);
                IF NOT ((CustomerBankAcc.FINDSET) AND (CustomerBankAcc.Code <> '')) THEN
                  BankCodeError := TRUE; } //code blocked for parallel run
                ////UPG13R2DEV  SV Bank code new validation SV 01072015.end
                Instreamobj.READTEXT(B,1);
                Instreamobj.READTEXT(B,11);
                IF ErrorInDate(B) THEN
                  Error_TransDate := TRUE;
                Instreamobj.READTEXT(B,11);
                IF ErrorInDate(B) THEN
                  Error_InvDate := TRUE
                ELSE Inv_Date:=Master_Setup.FindDate(B);
                Instreamobj.READTEXT(B,10);
                Instreamobj.READTEXT(B,1);
                Instreamobj.READTEXT(B,20);
                //EVALUATE(NPWP_No,B); PPNPPHDEV previous code commented
                Instreamobj.READTEXT(B,45);
                Instreamobj.READTEXT(B,11);
                IF ErrorInDate(B) THEN
                  Error_TaxInvDate:=TRUE
                ELSE BEGIN
                  Tax_InvDate:=Master_Setup.FindDate(B);
                  IF (Tax_InvDate<>0D)THEN
                    IF (Inv_Date) > (CALCDATE('+3M',Tax_InvDate)) THEN
                      Error_TaxInvDate:=TRUE;
                END;
                Instreamobj.READTEXT(B,10);
                IF NOT(YNSPIREAccount.GET(B))THEN
                  Error_Account:=TRUE
                ELSE IF ((YNSPIREAccount."YNSPIRE Shop Code"='') OR(YNSPIREAccount."YNSPIRE Model Code"='') OR
                         (YNSPIREAccount."YNSPIRE Selling Expense"=''))
                THEN
                  Error_Dim1:=TRUE;
                Instreamobj.READTEXT(B,1);
                Instreamobj.READTEXT(B,20);
                IF EVALUATE(Amount,B) THEN BEGIN
                  IF FORMAT(Amount) = '' THEN
                    Error_Amount := TRUE;
                END ELSE
                  Error_Amount := TRUE;
                Instreamobj.READTEXT(B,12);
                Instreamobj.READTEXT(B,1);
                EVALUATE(VATflag,B);
                IF ((B<>'1') AND (B<>'0')) THEN
                  Error_Vat:=TRUE;
                //PPNPPHDEV.begin
                {
                //>>19022013/PC/YIMMCR#13
                IF NPWP_No='' THEN
                  IF VATflag<>'0' THEN
                    Error_Npwp := TRUE;
                IF NPWP_No<>'' THEN BEGIN
                  Ship_Add.RESET;
                  IF ((Ship_Add.GET(Cust_id,NPWP_No))) THEN BEGIN
                    IF Ship_Add.Blocked THEN
                      Error_Npwp_Blocked := TRUE;
                  END ELSE
                    Error_Npwp := TRUE;
                END;
                //<<19022013/PC/YIMMCR#13
                }//previous code commented
                IF (VATflag = '1') THEN BEGIN
                  Result := GetPPNNpwpNumber(Cust_id);
                  IF (Result = 2) THEN
                    Error_Npwp_Blocked := TRUE
                  ELSE IF (Result = 3) THEN
                    Error_Npwp := TRUE;
                END;
                //PPNPPHDEV.end
                Instreamobj.READTEXT(B,22);
                Instreamobj.READTEXT(B,25);
                IF B='' THEN
                  Error_Kwitansi:=TRUE;
                Instreamobj.READTEXT(B,1);
                Instreamobj.READTEXT(B,1);
                Instreamobj.READTEXT(B,20);
                IF B='' THEN
                  Error_ComInv:=TRUE;
                Instreamobj.READTEXT(B,1);
                Instreamobj.READTEXT(B,11);
                IF ErrorInDate(B) THEN
                  Error_ComInvDate:=TRUE;
                Instreamobj.READTEXT(B,30);
                EVALUATE(TaxInvNo,B);
                IF (TaxInvNo<>'') THEN BEGIN
                  PostedCreditMemo.RESET;
                  PostedCreditMemo.SETCURRENTKEY(PostedCreditMemo."Tax Invoice No.");
                  PostedCreditMemo.SETRANGE(PostedCreditMemo."Tax Invoice No.",TaxInvNo);
                  PostedCreditMemo.SETRANGE(PostedCreditMemo."New NPWP.",NPWP_No);
                  IF (PostedCreditMemo.FINDSET) THEN BEGIN
                    SalesInvHeader.RESET;
                    SalesInvHeader.SETRANGE(SalesInvHeader."Applies-to Doc. Type",SalesInvHeader."Applies-to Doc. Type"::"Credit Memo");
                    SalesInvHeader.SETRANGE(SalesInvHeader."Applies-to Doc. No.",PostedCreditMemo."Document No.");
                    SalesInvHeader.SETRANGE(SalesInvHeader.ActualCreditMemo,FALSE);
                    IF NOT (SalesInvHeader.FINDSET) THEN BEGIN
                      Error_TaxInv:=TRUE;
                    END ELSE BEGIN
                      Sline.RESET;
                      Sline.SETCURRENTKEY(Sline."Tax Invoice No.");
                      Sline.SETRANGE(Sline."Tax Invoice No.",TaxInvNo);
                      Sline.SETFILTER(Sline."Document No.",'<>%1',Doc_No);
                      Sline.SETFILTER(Sline."New NPWP.",'%1',NPWP_No);
                      IF Sline.FINDFIRST THEN
                        Error_TaxInv:=TRUE;
                    END;
                  END;
                END;
                Instreamobj.READTEXT(B,1);
                Instreamobj.READTEXT(B,10);
                Instreamobj.READTEXT(B,1);
                Instreamobj.READTEXT(B,10);
                //ynspire1.1
                EVALUATE(WHT_Type,B);
                IF ((WHT_Type<>'1') AND (WHT_Type<>'0')) THEN
                  Error_WHT:=TRUE;
                Instreamobj.READTEXT(B,27);
                //PPNPPHDEV.begin
                {IF(WHT_Type = '1') THEN BEGIN
                  Result1 := GetPPHNpwpNumber(Cust_id);
                  IF (Result1 = 3) THEN
                    Error_pph_npwp := TRUE
                  ELSE IF (Result1 = 2) THEN
                    Error_pph_blocked := TRUE;
                END;}
                //PPNPPHDEV.end
                //Instreamobj.READTEXT(B,39);
                IF (Error_Doc OR Error_Doc1 OR Error_Doc2 OR Error_Cust OR Error_Npwp OR Error_TransDate OR Error_InvDate OR
                   "Error_G/L" OR Error_Amount OR Error_Conver OR Error_Dim1 OR Error_Dim3 OR Error_TaxInvDate OR Error_Npwp_Blocked OR
                   Error_Curr OR Error_NoVAt OR Error_WHT OR Error_Cust_Setup OR Error_Account OR Error_ComInvDate OR Error_TaxInv OR
                   Error_pph_npwp OR Error_pph_blocked OR BankCodeError OR ConversionError) //PPNPPHDEV error_pph_npwp
                THEN BEGIN
                  Flag := TRUE;
                  Outstreamobj.WRITETEXT(FORMAT(Entry_No));
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));
                  IF Error_Doc THEN BEGIN
                    Outstreamobj.WRITETEXT('! Error In Invoice No.');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,10,'<char>'));
                  END;
                  IF Error_Doc1 THEN BEGIN
                    Outstreamobj.WRITETEXT('! Duplicacy In Invoice No.');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,10,'<char>'));
                  END;
                  IF Error_Doc2 THEN BEGIN
                    Outstreamobj.WRITETEXT('! Duplicacy In Posted Invoice');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,10,'<char>'));
                  END;
                  IF Error_Cust THEN BEGIN
                    Outstreamobj.WRITETEXT('! Error In Dealer Code');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_Cust_Setup THEN BEGIN
                    Outstreamobj.WRITETEXT('! Setup Value is Missing for the Customer.');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));
                  END;
                  IF Error_Npwp THEN BEGIN
                    Outstreamobj.WRITETEXT('! Error PPN(PPN Service)NPWP No. not found for entity'); //PPNPPHDEV text modified
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_Npwp_Blocked THEN BEGIN
                    Outstreamobj.WRITETEXT('! PPN(PPN Service)NPWP No. is blocked in NAVISION.');   //PPNPPHDEV text modified
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_TransDate THEN BEGIN
                    Outstreamobj.WRITETEXT('! Error In Transaction Date');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_TaxInvDate THEN BEGIN
                    Outstreamobj.WRITETEXT('! Error In Tax Invoice Date');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_TaxInv THEN BEGIN
                    Outstreamobj.WRITETEXT('! Error In Tax Invoice No.');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_InvDate THEN BEGIN
                    Outstreamobj.WRITETEXT('! Error In Invoice Date');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_Account THEN BEGIN
                    Outstreamobj.WRITETEXT('! Account Code Not defined');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_Vat THEN BEGIN
                    Outstreamobj.WRITETEXT('! Error VAt flag is not Defined');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_Kwitansi THEN BEGIN
                    Outstreamobj.WRITETEXT('! Error in Kwitansi No');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_ComInvDate THEN BEGIN
                    Outstreamobj.WRITETEXT('! Error in Commercial Invoice Date');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF "Error_G/L" THEN BEGIN
                    Outstreamobj.WRITETEXT('! Error In G/L Account');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_Amount THEN BEGIN
                    Outstreamobj.WRITETEXT('! Error In Amount');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_Conver THEN BEGIN
                    Outstreamobj.WRITETEXT('! Error In Dealer Code In conversion Table');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_Dim1 THEN BEGIN
                    Outstreamobj.WRITETEXT('!Error- Dimmension Not Defined ');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_Dim3 THEN BEGIN
                    Outstreamobj.WRITETEXT('! Error In Dimmension Code 3');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_Curr THEN BEGIN
                    Outstreamobj.WRITETEXT('! Error Currency Code is not defined');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_NoVAt THEN BEGIN
                    Outstreamobj.WRITETEXT('! Error VAT Flag is always No In this transaction');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_WHT THEN BEGIN
                    Outstreamobj.WRITETEXT('! Error in  WHT Type');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  //PPNPPHDEV.begin
                  IF Error_pph_npwp THEN BEGIN
                    Outstreamobj.WRITETEXT('! Error PPH(PPH Service) NPWP No. not found');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_pph_blocked THEN BEGIN
                    Outstreamobj.WRITETEXT('! Error PPH(PPH Service) NPWP No. is Blocked in Navision');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  //PPNPPHDEV.end
                  {
                  //Bank Code Validation SV.begin
                  IF ConversionError THEN BEGIN
                    Outstreamobj.WRITETEXT('! Entity YnspireSD Code not found in Conversion Setup');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF BankCodeError THEN BEGIN
                    Outstreamobj.WRITETEXT('! Bank Code not found Entity YnspireSD Code in Conversion Setup');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  //Bank Code Validation SV.end
                  } ////UPG13R2DEV  SV Bank code new validation SV 01072015 Bank Code New Concept previous code commented
                  ////UPG13R2DEV  SV Bank code new validation SV 01072015 Bank Code New Concept.begin
                  IF BankCodeError THEN BEGIN
                    Outstreamobj.WRITETEXT('! Bank Code of Service Account not found for entity');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  ////UPG13R2DEV  SV Bank code new validation SV 01072015 Bank Code New Concept.end
                END ELSE BEGIN
                  IF (Error_CurrBlank OR Error_Exno OR
                      Error_BL OR Error_DuedateBlank OR
                      Error_ComInv)
                  THEN BEGIN
                    Outstreamobj.WRITETEXT(FORMAT(Entry_No));
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));
                    IF Error_DuedateBlank THEN BEGIN
                      Outstreamobj.WRITETEXT('Process SucessFully with Blank Due date');
                      Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                    END;
                    IF Error_BL THEN BEGIN
                      Outstreamobj.WRITETEXT('Process SucessFully with Blank B/L Date');
                      Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                    END;
                    IF Error_CurrBlank THEN BEGIN
                      Outstreamobj.WRITETEXT('Process SucessFully with Currency code Blank');
                      Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                    END;
                    IF Error_Exno THEN BEGIN
                      Outstreamobj.WRITETEXT('Process SucessFully with Blank External doc. No.');
                      Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                    END;
                    IF Error_ComInv THEN BEGIN
                      Outstreamobj.WRITETEXT('Process SucessFully with Blank Commercial Inv No.');
                      Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                    END;
                  END ELSE BEGIN
                    Outstreamobj.WRITETEXT(FORMAT(Entry_No));
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));
                    Outstreamobj.WRITETEXT('Process Sucessfully');
                  END;
                END;
                Entry_No := Entry_No +1;
                Outstreamobj.WRITETEXT();
                ResetAll();
              END;
                F1.CLOSE;
            END ELSE BEGIN    ///Code added Start- for error handling if file not open-19June12-nitin
                F1.CLOSE;
                EXIT;
            END;
                    ///Code added End- for error handling if file not open-19June12-nitin
            IF NOT Flag THEN BEGIN
              Master_Setup.UploadYNSPIREdata(FileName);
              YNSPIREinterface.RUN;
            END;
          END;

  }
  CODE
  {
    VAR
      Purchsetup@1000000008 : Record 312;
      Instreamobj@1000000001 : InStream;
      Outstreamobj@1000000034 : OutStream;
      B@1000000004 : Text[250];
      Pages@1000000005 : Integer;
      Flag@1000000006 : Boolean;
      B1@1000000007 : Text[5];
      Qty@1000000015 : Decimal;
      FileName@1102201000 : Text[250];
      text006@1102201002 : TextConst 'ENU=Import Text File';
      OrderDate@1000000003 : Date;
      YNSPIREfile@1000000000 : File;
      F1@1000000033 : File;
      ItemNo@1000000011 : Code[20];
      OrdDate@1000000012 : Date;
      NoSeries@1102201001 : Codeunit 396;
      Error_Doc@1000000002 : Boolean;
      Entry_No@1000000013 : Integer;
      Error_Cust@1000000014 : Boolean;
      Error_Npwp@1000000016 : Boolean;
      Error_TransDate@1000000017 : Boolean;
      Error_InvDate@1000000018 : Boolean;
      Error_DueDate@1000000019 : Boolean;
      Error_DuedateBlank@1000000041 : Boolean;
      Error_Dim1@1000000020 : Boolean;
      Error_Dim3@1000000021 : Boolean;
      Error_Curr@1000000022 : Boolean;
      Error_CurrBlank@1000000039 : Boolean;
      Error_TaxDate@1000000023 : Boolean;
      "Error_G/L"@1000000024 : Boolean;
      Error_Amount@1000000025 : Boolean;
      Error_Vat@1000000026 : Boolean;
      Error_BL@1000000027 : Boolean;
      Error_Exno@1000000028 : Boolean;
      Error_Conver@1000000029 : Boolean;
      Master_Setup@1000000030 : Record 50008;
      LogFile@1000000031 : Text[250];
      Ch@1000000032 : Char;
      SalesHeader@1000000036 : Record 36;
      "SalesInv Header"@1000000037 : Record 114;
      Error_Doc1@1000000038 : Boolean;
      Error_Doc2@1000000040 : Boolean;
      Error_NoVAt@1000000042 : Boolean;
      YNSPIREinterface@1000000043 : Report 62088;
      Error_WHT@1000000044 : Boolean;
      OK@1000000045 : Boolean;
      Error_Cust_Setup@1000000046 : Boolean;
      Error_Account@1000000047 : Boolean;
      Error_Kwitansi@1000000048 : Boolean;
      Error_ComInv@1000000049 : Boolean;
      Error_ComInvDate@1000000050 : Boolean;
      Error_TaxInvDate@1000000051 : Boolean;
      PostedCreditMemo@1000000052 : Record 115;
      SalesInvHeader@1000000053 : Record 112;
      TaxInvNo@1000000054 : Code[30];
      Error_TaxInv@1000000055 : Boolean;
      Sline@1000000056 : Record 37;
      WHT_Type@1102159001 : Code[10];
      VATflag@1102159002 : Code[10];
      Error_Npwp_Blocked@1102159003 : Boolean;
      Result@1102159004 : Integer;
      Result1@1102159005 : Integer;
      Error_pph_npwp@1102159006 : Boolean;
      Error_pph_blocked@1102159007 : Boolean;
      ConvTableEntity@1102159008 : Record 50004;
      BankCodeError@1102159009 : Boolean;
      ConversionError@1102159010 : Boolean;

    PROCEDURE ResetAll@1000000000();
    BEGIN

      Error_Doc := FALSE;
      Error_Cust := FALSE;
      Error_Npwp := FALSE;
      Error_TransDate := FALSE;
      Error_InvDate := FALSE;
      Error_DueDate := FALSE;
      Error_Dim1 := FALSE;
      Error_Dim3 := FALSE;
      Error_Curr := FALSE;
      Error_TaxDate := FALSE;
      "Error_G/L" := FALSE;
      Error_Amount := FALSE;
      Error_Vat := FALSE;
      Error_BL := FALSE;
      Error_Exno := FALSE;
      Error_Conver := FALSE;
      Error_WHT := FALSE;
      Error_Cust_Setup := FALSE;
      Error_TaxInvDate := FALSE;
      Error_TaxInv := FALSE;
      Error_Npwp_Blocked := FALSE;
      //PPNPPHDEV.begin
      Result := 0;
      Result1 := 0;
      Error_pph_npwp := FALSE;
      Error_pph_blocked := FALSE;
      //PPHPPHDEV.end
      //Bank code validation SV
      BankCodeError := FALSE;
      ConversionError := FALSE;
      //Bank code validation SV
      //CR001.begin
      Error_Doc1 := FALSE;
      Error_Doc2 := FALSE;
      //CR002.end
    END;

    PROCEDURE ErrorInDate@1000000001(DateMentioned@1000000000 : Text[11]) : Boolean;
    VAR
      day@1000000001 : Text[30];
      month@1000000002 : Text[30];
      year@1000000003 : Text[30];
      ExtractedDate@1000000004 : Text[30];
      date1@1000000005 : Date;
    BEGIN
      month:=COPYSTR(DateMentioned,1,2);
      day:=COPYSTR(DateMentioned,4,2);
      year:=COPYSTR(DateMentioned,7,2);
      ExtractedDate:=month+day+year;
      IF EVALUATE(date1,ExtractedDate) THEN EXIT(FALSE)
      ELSE EXIT(TRUE);
    END;

    PROCEDURE GetPPNNpwpNumber@1102159002("Customer code"@1102159001 : Code[30]) return : Integer;
    VAR
      ConvMasterCust@1102159002 : Record 50004;
      Cust_Master1@1102159003 : Record 18;
      ShipAdd@1102159004 : Record 222;
    BEGIN

        //new funtion for ppnpph npwp validation  //PPNPPHDEV
      IF Cust_Master1.GET("Customer code") THEN BEGIN
        ShipAdd.RESET;
        ShipAdd.SETRANGE("Customer No.",Cust_Master1."No.");
        ShipAdd.SETRANGE(Blocked,FALSE);
        ShipAdd.SETRANGE(ShipAdd.PPN,TRUE);
        ShipAdd.SETRANGE(ShipAdd."PPN Service",TRUE);
        IF NOT ShipAdd.FINDFIRST THEN
          return := 3
        ELSE IF ShipAdd.Blocked THEN
          return := 2
      END;
    END;

    PROCEDURE GetPPHNpwpNumber@1102159004("Customer code"@1102159001 : Text[30]) return : Integer;
    VAR
      ConvMasterCust1@1102159002 : Record 50004;
      Cust_Master2@1102159003 : Record 18;
      ShipAdd1@1102159004 : Record 222;
    BEGIN

       //new funtion for ppnpph npwp validation  //PPNPPHDEV
      IF Cust_Master2.GET("Customer code") THEN BEGIN
        ShipAdd1.RESET;
        ShipAdd1.SETRANGE("Customer No.",Cust_Master2."No.");
        ShipAdd1.SETRANGE(Blocked,FALSE);
        ShipAdd1.SETRANGE(PPH,TRUE);
        ShipAdd1.SETRANGE("PPH Service",TRUE);
        IF NOT ShipAdd1.FINDFIRST THEN
          return := 3
        ELSE IF ShipAdd1.Blocked THEN
          return := 2;
      END;
    END;

    BEGIN
    {
      //YNSPIRE Code Unit is created to import the YNSPIRE interface data from txt file.Dated 04-May-2011.
      //YIMMCR#10 ==> Code for NPWP NO. blocked. (YNSPIRE1.2) ==> 16-Nov-2012
      //YIMMCR#13 ==> Code for NPWP NO. Blank
      //PPNPPHDEV SV ppnpph concept developed
      //Bank Code Validation SV
      //UPG13R2DEV
      --SV Bank code new validation
      //CR001/VK/Duplicacy Validation modified. It should be based on External Doc No. of Invoices already Interfaced.
    }
    END.
  }
}

