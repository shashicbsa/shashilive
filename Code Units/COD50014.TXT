OBJECT Codeunit 50014 Eproc Batch
{
  OBJECT-PROPERTIES
  {
    Date=06/02/09;
    Time=19:50:21;
    Version List=Eproc1.0;
  }
  PROPERTIES
  {
    TableNo=472;
    OnRun=VAR
            Doc_No@1000000000 : Code[20];
            Trans_Date@1000000004 : Date;
            Dim1@1000000010 : Code[10];
            Dim2@1000000011 : Code[10];
            Dim3@1000000026 : Code[10];
            GenLed_Setup@1000000012 : Record 98;
            Dim_Value@1000000013 : Record 349;
            Curr_Code@1000000014 : Code[10];
            Curry@1000000015 : Record 4;
            "G/L_Account"@1000000017 : Code[20];
            "G/L"@1000000018 : Record 15;
            Amount@1000000019 : Decimal;
            Bl_date@1000000021 : Date;
            Account_Type@1000000022 : 'G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner';
            Account_No@1000000023 : Code[20];
            Credit_Amt@1000000024 : Decimal;
            Debit_Amt@1000000025 : Decimal;
            Bank_Acc@1000000001 : Record 270;
            CurrExc@1000000002 : Record 330;
            "Amount(Lcy)"@1000000006 : Decimal;
          BEGIN
            Ch:=9;
            Master_Setup.GET;

            //FileName := CommonDialogMgt.OpenFile(text006,'',1,'',0);
            FileName := Master_Setup."Interface File Path" + '\' + Master_Setup.Eproc;
            IF FileName = '' THEN
              EXIT;

            LogFile := Master_Setup."Interface File Path" + '\' + 'LOG-' + Master_Setup.Eproc;
            F1.CREATE(LogFile);
            F1.CREATEOUTSTREAM(Outstreamobj);
            F1.TEXTMODE(TRUE);


            Entry_No := 1;

            F.OPEN(FileName);
            F.CREATEINSTREAM(Instreamobj);

            WHILE NOT Instreamobj.EOS DO BEGIN

              Instreamobj.READTEXT(B,20);
              EVALUATE(Doc_No,B);
                IF Doc_No = '' THEN
                  Error_Doc := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,10);
              IF EVALUATE(Line_No,B) THEN BEGIN
                IF FORMAT(Line_No) = '' THEN
                  Error_Line := TRUE;
              END ELSE
                Error_Line := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,20);
              IF EVALUATE(Account_Type,B) THEN BEGIN
                IF FORMAT(Account_Type) = '' THEN
                  Error_Opt := TRUE;
              END ELSE
                Error_Opt := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,20);
              EVALUATE(Account_No,B);
                IF Account_No <> '' THEN BEGIN
                  CASE Account_Type OF
                    Account_Type::"G/L Account": BEGIN
                      IF NOT GL_Acc.GET(Account_No) THEN
                      Error_Acc := TRUE;
                    END;
                    Account_Type::"Bank Account": BEGIN
                      IF NOT Bank_Acc.GET(Account_No) THEN
                      Error_Acc := TRUE;
                    END;
                  END;
                END ELSE
                  Error_Acc := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,20);
              IF NOT EVALUATE(Debit_Amt,B) THEN
                Error_Debit := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,20);
              IF NOT EVALUATE(Credit_Amt,B) THEN
                Error_Credit := TRUE;

              IF (Debit_Amt) + (Credit_Amt) = 0 THEN
                Error_Amt := TRUE;

              Amount := Amount + Debit_Amt - Credit_Amt;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,10);
              EVALUATE(Dim1,B);
                IF Dim1 <> '' THEN BEGIN
                  GenLed_Setup.GET;
                  Dim_Value.RESET;
                  Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Global Dimension 1 Code");
                  Dim_Value.SETRANGE(Dim_Value.Name,Dim1);
                  IF NOT Dim_Value.FINDFIRST THEN
                    Error_Dim1 := TRUE;
                END ELSE
                  Error_Dim1 := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,10);
              EVALUATE(Dim2,B);
                IF Dim2 <> '' THEN BEGIN
                  GenLed_Setup.GET;
                  Dim_Value.RESET;
                  Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Global Dimension 2 Code");
                  Dim_Value.SETRANGE(Dim_Value.Name,Dim2);
                  IF NOT Dim_Value.FINDFIRST THEN
                    Error_Dim2 := TRUE;
                END ELSE
                  Error_Dim2 := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,10);
              EVALUATE(Dim3,B);
                IF Dim3 <> '' THEN BEGIN
                  GenLed_Setup.GET;
                  Dim_Value.RESET;
                  Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Shortcut Dimension 3 Code");
                  Dim_Value.SETRANGE(Dim_Value.Name,Dim3);
                  IF NOT Dim_Value.FINDFIRST THEN
                    Error_Dim3 := TRUE;
                END ELSE
                  Error_Dim3 := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,10);
              EVALUATE(Curr_Code,B);
                IF Curr_Code <> '' THEN BEGIN
                  Curry.RESET;
                  IF NOT Curry.GET(Curr_Code) THEN
                    Error_Curr := TRUE;
                END ELSE
                  Error_CurrBlank := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,11);
              IF EVALUATE(Trans_Date,B) THEN BEGIN
                IF FORMAT(Trans_Date) = '' THEN
                  Error_TransDate := TRUE;
              END ELSE
                Error_TransDate := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,11);
              IF EVALUATE(Bl_date,B) THEN BEGIN
                IF FORMAT(Bl_date) = '' THEN
                  Error_BLBlank := TRUE;
              END ELSE
                Error_BL := TRUE;

            //  IF NOT (Error_Curr or Error_CurrBlank) then;
            // Check with multiple Condition of Currency and BlDate
            // we need to check if currecny code is defined then there must bo BL exits for that record.

              CurrExc.RESET;
              CurrExc.SETRANGE(CurrExc."Starting Date",Bl_date);
              CurrExc.SETRANGE(CurrExc."Currency Code",Curr_Code);
              IF CurrExc.FINDFIRST THEN BEGIN
                "Debit_Amt(Lcy)" := ROUND(Debit_Amt * CurrExc."Relational Exch. Rate Amount",3);
                "Credit_Amt(Lcy)":= ROUND(Credit_Amt * CurrExc."Relational Exch. Rate Amount",3);
                "Amount(Lcy)" := "Amount(Lcy)" + "Debit_Amt(Lcy)" - "Credit_Amt(Lcy)";
              END;

              IF (Error_Doc OR Error_TransDate OR Error_BL OR Error_Debit OR Error_Credit OR Error_Opt OR Error_Acc
                  OR Error_Line OR Error_Curr OR Error_Dim1) THEN BEGIN
                Flag := TRUE;

                Outstreamobj.WRITETEXT(FORMAT(Entry_No));
                Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));

                IF Error_Doc THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Document No.');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));
                END;
                IF Error_TransDate THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Posting Date');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));
                END;
                IF Error_BL THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Bill Date');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;
                IF Error_Opt THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Account Type');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;
                IF Error_Acc THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Account Number');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;
                IF Error_Debit THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Debit Amount');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;
                IF Error_Credit THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Credit amount');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;
                IF Error_Line THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Line No');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;
                IF Error_Curr THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Currency');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;
                IF Error_Dim1 THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Dimmension code 1');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;
              END ELSE BEGIN
                IF (Error_BLBlank OR Error_CurrBlank OR Error_Dim2 OR Error_Dim3) THEN BEGIN
                  Outstreamobj.WRITETEXT(FORMAT(Entry_No));
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));

                  IF Error_BLBlank THEN BEGIN
                    Outstreamobj.WRITETEXT('Process SucessFully with Blank B/l Date');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_CurrBlank THEN BEGIN
                    Outstreamobj.WRITETEXT('Process SucessFully with Blank Currency code');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_Dim2 THEN BEGIN
                    Outstreamobj.WRITETEXT('! Process Sucessfully With Blank Dimmension');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                  IF Error_Dim3 THEN BEGIN
                    Outstreamobj.WRITETEXT('! Process Sucessfully With Blank Dimmension');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                  END;
                END ELSE
                 BEGIN
                  Outstreamobj.WRITETEXT(FORMAT(Entry_No));
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));
                  Outstreamobj.WRITETEXT('Process SucessFully');
                 END;
              END;
              Instreamobj.READTEXT(B,1);
              Outstreamobj.WRITETEXT();
              ResetAll();
            END;

            IF (Amount + "Amount(Lcy)") <> 0 THEN
              Outstreamobj.WRITETEXT('! Error In Total Amount');

            F1.CLOSE;

            IF NOT Flag THEN BEGIN
              Master_Setup.UploadDataGl(FileName,Master_Setup."Eproc Template Name",Master_Setup."Eproc Batch Name");
              EprocReport.RUN;
            END;
          END;

  }
  CODE
  {
    VAR
      Instreamobj@1000000001 : InStream;
      Outstreamobj@1000000034 : OutStream;
      B@1000000004 : Text[250];
      Flag@1000000006 : Boolean;
      FileName@1102201000 : Text[250];
      text006@1102201002 : TextConst 'ENU=Import Text File';
      F@1000000000 : File;
      F1@1000000033 : File;
      Error_Doc@1000000002 : Boolean;
      Sales_interface@1000000010 : Record 50010;
      Entry_No@1000000013 : Integer;
      Error_TransDate@1000000017 : Boolean;
      Error_Dim1@1000000020 : Boolean;
      Error_Dim2@1000000021 : Boolean;
      Error_Dim3@1000000047 : Boolean;
      Error_Curr@1000000022 : Boolean;
      Error_Amount@1000000025 : Boolean;
      Error_BL@1000000027 : Boolean;
      Error_BLBlank@1000000005 : Boolean;
      Master_Setup@1000000030 : Record 50008;
      LogFile@1000000031 : Text[250];
      Ch@1000000032 : Char;
      Error_Doc1@1000000038 : Boolean;
      Line_No@1000000039 : Integer;
      Error_Line@1000000040 : Boolean;
      Error_Opt@1000000041 : Boolean;
      Error_Acc@1000000042 : Boolean;
      GL_Acc@1000000043 : Record 15;
      Error_Credit@1000000044 : Boolean;
      Error_Debit@1000000045 : Boolean;
      Error_Amt@1000000046 : Boolean;
      Error_CurrBlank@1000000003 : Boolean;
      "Debit_Amt(Lcy)"@1000000008 : Decimal;
      "Credit_Amt(Lcy)"@1000000007 : Decimal;
      EprocReport@1000000009 : Report 50026;

    PROCEDURE ResetAll@1000000000();
    BEGIN
      Error_Doc := FALSE;
      Error_TransDate := FALSE;
      Error_Dim1 := FALSE;
      Error_Dim2 := FALSE;
      Error_Dim3 := FALSE;
      Error_Curr := FALSE;
      Error_BL := FALSE;
      Error_BLBlank := FALSE;
      Error_CurrBlank := FALSE;
      "Debit_Amt(Lcy)" := 0;
      "Credit_Amt(Lcy)" := 0;
      Error_Acc := FALSE;
      Error_Line := FALSE;
      Error_Opt := FALSE;
    END;

    BEGIN
    END.
  }
}

