OBJECT Codeunit 50021 G-Port In-Transit Interface
{
  OBJECT-PROPERTIES
  {
    Date=08/11/15;
    Time=11:03:49;
    Modified=Yes;
    Version List=Ginv1.0,UPG13R2DEV;
  }
  PROPERTIES
  {
    TableNo=472;
    OnRun=VAR
            LocalRecIfDimMapSetup@1000000001 : Record 60066;
            LocalCodeRes@1000000000 : Code[10];
          BEGIN
            ToCheckDate := ToCheckDate.DateTimeFormatCheck;  //UPG13R2DEV
            Ch:=9;
            MasterSetup.GET;

            FileName:=MasterSetup."Interface File Path" + '\' + MasterSetup."G-Port In-Transit";
            LogFileName:=MasterSetup."Interface File Path" + '\' + 'LOG-' + MasterSetup."G-Port In-Transit";
            LF.CREATE(LogFileName);
            LF.CREATEOUTSTREAM(Outstreamobj);
            LF.TEXTMODE(TRUE);


            IF NOT (F.OPEN(FileName)) THEN
            BEGIN
             LF.CLOSE;
             EXIT;
            END;




            F.CREATEINSTREAM(Instreamobj);

            ErrorInFile:=FALSE;
            EntryNo:=0;
            DeleteTempTable();

            WHILE NOT Instreamobj.EOS DO BEGIN

               ErrorInRow:=FALSE;

              //Creating Entry No.
              EntryNo+=1;
              Outstreamobj.WRITE(FORMAT(EntryNo));
              Outstreamobj.WRITETEXT(FORMAT(Ch,1,'<CHAR>'));

              //Reading Line No.
              Instreamobj.READTEXT(Readed,10);
              IF EVALUATE(LineNo,Readed) THEN BEGIN
                IF LineNo > 0 THEN ErrorInRow:=FALSE
                ELSE BEGIN
                  Outstreamobj.WRITETEXT('! Error In Line No.');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,1,'<CHAR>'));
                  ErrorInRow:=TRUE;
                END;
              END ELSE BEGIN
                Outstreamobj.WRITETEXT('! Error In Line No.');
                Outstreamobj.WRITETEXT(FORMAT(Ch,1,'<CHAR>'));
                ErrorInRow:=TRUE;
              END;

              //Reading Doc No.
              Instreamobj.READTEXT(Readed,1);
              Instreamobj.READTEXT(Readed,20);
              EVALUATE(DocNo,Readed);
              IF DocNo='' THEN BEGIN
                Outstreamobj.WRITETEXT('! Error In Document No.');
                Outstreamobj.WRITETEXT(FORMAT(Ch,1,'<CHAR>'));
                ErrorInRow:=TRUE;
              END;

              //Reading Posting Date
              Instreamobj.READTEXT(Readed,1);
              Instreamobj.READTEXT(Readed,11);
              //CLEAR(ToCheckDate);  //UPG13R2DEV
              //UPG13C.begin
              //CREATE(ToCheckDate);
              //CREATE(ToCheckDate,TRUE,TRUE);  //UPG13R2DEV
              //UPG13C.end

              //IF NOT (EVALUATE(PostingDate,Readed) AND ToCheckDate.CHECK(Readed)) THEN BEGIN  //UPG13R2DEV
              Readed:=ConvertDates(Readed);  //UPG13R2DEV
              IF NOT (EVALUATE(PostingDate,Readed) AND ToCheckDate.checkDateTime(Readed)) THEN BEGIN  //UPG13R2DEV
                Outstreamobj.WRITETEXT('! Error In Posting Date');
                Outstreamobj.WRITETEXT(FORMAT(Ch,1,'<CHAR>'));
                ErrorInRow:=TRUE;
              END;


              //Reading Commodity Code
              Instreamobj.READTEXT(Readed,1);
              Instreamobj.READTEXT(Readed,20);
              EVALUATE(CommodityCode,Readed);
              IF CommodityCode='' THEN BEGIN
                Outstreamobj.WRITETEXT('! Error In Commodity Code');
                Outstreamobj.WRITETEXT(FORMAT(Ch,1,'<CHAR>'));
                ErrorInRow:=TRUE;
              END ELSE BEGIN
                IF CommodityCode='FREIGHT' THEN CommodityCode:='FREIGHT'
                ELSE IF CommodityCode='INSURANCE' THEN CommodityCode:='INSURANCE'
                ELSE BEGIN
                  "CommodityCode(G-Port)".RESET;
                  "CommodityCode(G-Port)".SETRANGE("Commodity Code",CommodityCode);
                  IF "CommodityCode(G-Port)".FINDFIRST THEN
                    CommodityCode:=CommodityCode
                  ELSE BEGIN
                    Outstreamobj.WRITETEXT('! Error In Commodity Code');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,1,'<CHAR>'));
                    ErrorInRow:=TRUE;
                    CommodityCode:='';
                  END;
                END;
              END;

              //Reading Debit Amount
              Instreamobj.READTEXT(Readed,1);
              Instreamobj.READTEXT(Readed,20);
              EVALUATE(DebitAmount,Readed);

              //Reading Credit Amount
              Instreamobj.READTEXT(Readed,1);
              Instreamobj.READTEXT(Readed,20);
              EVALUATE(CreditAmount,Readed);
            //Dimension value new concept.start>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
              //Reading Shop Code
              {
              Instreamobj.READTEXT(Readed,1);
              Instreamobj.READTEXT(Readed,10);
              EVALUATE(ShopCode,Readed);
              IF ShopCode<>'' THEN BEGIN
                GeneralLedgerSetup.GET;
                DimensionValue.RESET;
                DimensionValue.SETRANGE("Dimension Code",GeneralLedgerSetup."Global Dimension 1 Code");
                DimensionValue.SETRANGE(DimensionValue.Name,ShopCode);
                IF DimensionValue.FINDFIRST THEN ShopCode:=DimensionValue.Code
                ELSE BEGIN
                  ShopCode:='';
                  Outstreamobj.WRITETEXT('! Error In Shop Code');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,1,'<CHAR>'));
                  ErrorInRow:=TRUE;
                  END;
              END;
               }//Dimension value new concept.previous code blocked
              Instreamobj.READTEXT(Readed,1);
              Instreamobj.READTEXT(Readed,10);
              EVALUATE(ShopCode,Readed);
              IF ShopCode<>'' THEN BEGIN
                IF LocalRecIfDimMapSetup.GET THEN;
                IF LocalRecIfDimMapSetup."YNSPIRE SD" THEN BEGIN
                  LocalCodeRes := GetDim1Value(ShopCode);
                  IF (LocalCodeRes = 'NOT FOUND') THEN BEGIN
                    ShopCode := '';
                    Outstreamobj.WRITETEXT('! Error In Shop Code');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,1,'<CHAR>'));
                    ErrorInRow := TRUE;
                  END ELSE
                    ShopCode := LocalCodeRes;
                END ELSE BEGIN
                  GeneralLedgerSetup.GET;
                  DimensionValue.RESET;
                  DimensionValue.SETRANGE("Dimension Code",GeneralLedgerSetup."Global Dimension 1 Code");
                  DimensionValue.SETRANGE(DimensionValue.Name,ShopCode);
                  IF DimensionValue.FINDFIRST THEN ShopCode:=DimensionValue.Code
                  ELSE BEGIN
                    ShopCode:='';
                    Outstreamobj.WRITETEXT('! Error In Shop Code');
                    Outstreamobj.WRITETEXT(FORMAT(Ch,1,'<CHAR>'));
                    ErrorInRow:=TRUE;
                    END;
                END;
              END;
            //Dimension value new concept.end<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
              //Reading Model Code
              Instreamobj.READTEXT(Readed,1);
              Instreamobj.READTEXT(Readed,10);
              EVALUATE(ModelCode,Readed);
              IF ModelCode<>'' THEN BEGIN
            //    GeneralLedgerSetup.GET;
            //    DimensionValue.RESET;
            //    DimensionValue.SETRANGE("Dimension Code",GeneralLedgerSetup."Global Dimension 2 Code");
            //    DimensionValue.SETRANGE(DimensionValue.Name,ModelCode);
            //    IF DimensionValue.FINDFIRST THEN ModelCode:=DimensionValue.Code
            //    ELSE BEGIN
            //      ModelCode:='';
            //      Outstreamobj.WRITETEXT('! Error In Model Code');
            //      Outstreamobj.WRITETEXT(FORMAT(Ch,1,'<CHAR>'));
            //      ErrorInRow:=TRUE;
            //    END;
              END;

              //Reading Flag
              Instreamobj.READTEXT(Readed,1);
              Instreamobj.READTEXT(Readed,1);
              IF EVALUATE(FlagCheck,Readed) THEN BEGIN
                IF FlagCheck=1 THEN Flag:=TRUE
                ELSE BEGIN
                 // Outstreamobj.WRITETEXT('! Error In Flag');
                //  Outstreamobj.WRITETEXT(FORMAT(Ch,1,'<CHAR>'));
                //  ErrorInRow:=TRUE;
                END;
              END ELSE BEGIN
                //  Outstreamobj.WRITETEXT('! Error In Flag');
                //  Outstreamobj.WRITETEXT(FORMAT(Ch,1,'<CHAR>'));
                //  ErrorInRow:=TRUE;
              END;


              //Reading Narration
              Instreamobj.READTEXT(Readed,1);
              Instreamobj.READTEXT(Readed,50);
              EVALUATE(Narration,Readed);

              //Checking Debit & Credit Amount
              IF (DebitAmount=0) AND (CreditAmount=0) THEN BEGIN
                Outstreamobj.WRITETEXT('! Both Credit and Debit Amount Are Zero');
                Outstreamobj.WRITETEXT(FORMAT(Ch,1,'<CHAR>'));
                ErrorInRow:=TRUE;
              END;

              IF (DebitAmount<>0) AND (CreditAmount<>0) THEN BEGIN
                Outstreamobj.WRITETEXT('! Both Credit and Debit Amount Have Value');
                Outstreamobj.WRITETEXT(FORMAT(Ch,1,'<CHAR>'));
                ErrorInRow:=TRUE;
              END;

              IF Flag THEN BEGIN
                IF CreditAmount<>0 THEN BEGIN
                  Outstreamobj.WRITETEXT('! In Case Of Receiving Credit Amount Must Be Zero');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,1,'<CHAR>'));
                  ErrorInRow:=TRUE;
                END;
              END;

              IF ErrorInRow THEN ErrorInFile:=TRUE;

              IF NOT ErrorInRow THEN BEGIN
                Outstreamobj.WRITETEXT('Processed Successfully');
                IF NOT ErrorInFile THEN InsertInTempTable();
              END;

              Instreamobj.READTEXT(Readed,1);
              Outstreamobj.WRITETEXT();

            END;

            LF.CLOSE;

            IF ErrorInFile THEN DeleteTempTable();

            IF NOT ErrorInFile THEN GPortInTransitInterfaceReport.RUN;
          END;

  }
  CODE
  {
    VAR
      Ch@1000000000 : Char;
      MasterSetup@1000000001 : Record 50008;
      FileName@1000000002 : Text[255];
      LogFileName@1000000003 : Text[255];
      LF@1000000004 : File;
      F@1000000005 : File;
      Outstreamobj@1000000006 : OutStream;
      Instreamobj@1000000007 : InStream;
      Readed@1000000011 : Text[255];
      GeneralLedgerSetup@1000000020 : Record 98;
      DimensionValue@1000000021 : Record 349;
      ErrorInFile@1000000008 : Boolean;
      ErrorInRow@1000000010 : Boolean;
      EntryNo@1000000009 : Integer;
      LineNo@1000000012 : Integer;
      DocNo@1000000013 : Code[20];
      PostingDate@1000000014 : Date;
      CommodityCode@1000000015 : Code[20];
      DebitAmount@1000000016 : Decimal;
      CreditAmount@1000000017 : Decimal;
      ShopCode@1000000018 : Code[20];
      ModelCode@1000000019 : Code[20];
      Flag@1000000022 : Boolean;
      FlagCheck@1000000023 : Integer;
      Narration@1000000024 : Text[50];
      "CommodityCode(G-Port)"@1000000025 : Record 50019;
      GPortInTransitInterfaceReport@1000000026 : Report 50058;
      ToCheckDate@1000000027 : DotNet "'DateTimeFun, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.DateTimeFun.DateTimeFormatCheck";

    PROCEDURE DeleteTempTable@1000000001();
    VAR
      GPortInTransitInterface@1000000000 : Record 50020;
    BEGIN
      GPortInTransitInterface.DELETEALL;
    END;

    PROCEDURE InsertInTempTable@1000000000();
    VAR
      GPortInTransitInterface@1000000000 : Record 50020;
      i@1000000001 : Integer;
    BEGIN
      IF (FlagCheck=1) THEN BEGIN

      GPortInTransitInterface.INIT;
      GPortInTransitInterface."Document No.":=DocNo;
      GPortInTransitInterface."Line No.":=LineNo;
      GPortInTransitInterface.INSERT;
      GPortInTransitInterface."Entry No.":=EntryNo;
      GPortInTransitInterface."Posting Date":=PostingDate;
      GPortInTransitInterface."Commodity Code":=CommodityCode;
      DebitAmount:=DebitAmount/100;
      GPortInTransitInterface."Debit Amount":=DebitAmount;
      CreditAmount:=CreditAmount/100;
      GPortInTransitInterface."Credit Amount":=CreditAmount;
      GPortInTransitInterface."Shop Code":='';
      GPortInTransitInterface."Model Code":=ModelCode;
      GPortInTransitInterface."Recceive Or Cancel":=Flag;
      GPortInTransitInterface.Narration:=Narration;
      GPortInTransitInterface.MODIFY;


      END;
    END;

    PROCEDURE DateTrim@1102159001(ADate@1102159001 : Text) : Text[250];
    BEGIN
      //EXIT(DELSTR(ADate,STRLEN(ADate),1));
    END;

    PROCEDURE ConvertDates@1000000002(DateText@1000000000 : Text[255]) : Text[255];
    VAR
      NewDateText@1000000001 : Text[30];
      DD@1000000002 : Text[30];
      MM@1000000003 : Text[30];
      YY@1000000004 : Text[30];
    BEGIN
      //UPG13R2DEV.begin

      MM:=COPYSTR(DateText,1,2);
      DD:=COPYSTR(DateText,4,2);
      YY:=COPYSTR(DateText,7,2);

      //NewDateText:=MM+'-'+DD+'-'+YY;
      NewDateText:=MM+'-'+DD+'-'+'20'+YY;
      EXIT(NewDateText);

      //UPG13R2DEV.end
    END;

    PROCEDURE GetDim1Value@1000000004(Dimension1@1000000000 : Code[10]) LocalCodeReturnRes : Code[10];
    VAR
      LocalRecIfDimMapp@1000000001 : Record 60065;
    BEGIN

      LocalRecIfDimMapp.RESET;
      LocalRecIfDimMapp.SETRANGE("Dimension Name",LocalRecIfDimMapp."Dimension Name"::"SHOP CODE");
      LocalRecIfDimMapp.SETRANGE("Old YIMM Code",Dimension1);
      IF NOT LocalRecIfDimMapp.FINDSET THEN
        LocalCodeReturnRes := 'NOT FOUND'
      ELSE
        LocalCodeReturnRes := LocalRecIfDimMapp."New NAV Code";
    END;

    BEGIN
    {
      //UPG13R2DEV
      Modifications for 2013R2DB. Dotnet variable "ToCheckDate" is modified. Also "ConvertDates" function is created to flow the the year in YYYY format
      in the Dotnet function .

      [UPG13R2DEV]
      [SIGN]  : SV
      [REF]   : Dimension value new concept
      [DESC]  : Dimension value new concept.New mapping table introduced and will be used(based on setup) untill all other systems are updated to use new dimension values.
                After all other system updated mapping will be obsolate
    }
    END.
  }
}

