OBJECT Codeunit 50002 Propac Batch
{
  OBJECT-PROPERTIES
  {
    Date=07/14/14;
    Time=11:42:17;
    Modified=Yes;
    Version List=Propac1.0;
  }
  PROPERTIES
  {
    OnRun=VAR
            Doc_No@1000000000 : Code[20];
            Cust_id@1000000001 : Code[20];
            Cust@1000000002 : Record 50004;
            NPWP_No@1000000003 : Code[20];
            Trans_Date@1000000004 : Date;
            Inv_Date@1000000005 : Date;
            Ext_no@1000000006 : Code[20];
            Cust_Master@1000000007 : Record 18;
            Ship_Add@1000000008 : Record 222;
            Due_Date@1000000009 : Date;
            Dim1@1000000010 : Code[10];
            Dim2@1000000011 : Code[10];
            GenLed_Setup@1000000012 : Record 98;
            Dim_Value@1000000013 : Record 349;
            Curr_Code@1000000014 : Code[10];
            Curry@1000000015 : Record 4;
            Tax_Date@1000000016 : Date;
            "G/L_Account"@1000000017 : Code[20];
            "G/L"@1000000018 : Record 15;
            Amount@1000000019 : Decimal;
            Vat@1000000020 : Boolean;
            Bl_date@1000000021 : Date;
          BEGIN
            IF ISCLEAR(DateformatCheck) THEN
            //UPG13C.begin
            //CREATE(DateformatCheck);
            CREATE(DateformatCheck,TRUE,TRUE);
            //UPG13C.end

            Ch:=9;
            Master_Setup.GET;

            //FileName := CommonDialogMgt.OpenFile(text006,'',1,'',0);
            FileName := Master_Setup."Interface File Path" + '\' + Master_Setup."Propac Sales Inv Dom";
            IF FileName = '' THEN
              EXIT;

            LogFile := Master_Setup."Interface File Path" + '\' + 'LOG-' + Master_Setup."Propac Sales Inv Dom";
            F1.CREATE(LogFile);
            F1.CREATEOUTSTREAM(Outstreamobj);
            F1.TEXTMODE(TRUE);


            Entry_No := 1;

            F.OPEN(FileName);
            F.CREATEINSTREAM(Instreamobj);

            WHILE NOT Instreamobj.EOS DO BEGIN

              Instreamobj.READTEXT(B,20);
              EVALUATE(Doc_No,B);
                IF Doc_No = '' THEN
                  Error_Doc := TRUE
                ELSE BEGIN
                  SalesHeader.SETRANGE(SalesHeader."No.",Doc_No);
                  IF SalesHeader.FINDFIRST THEN
                     Error_Doc1 := TRUE;

                  "SalesInv Header".SETRANGE("SalesInv Header"."No.",Doc_No);
                   IF "SalesInv Header".FINDFIRST THEN
                       Error_Doc2 := TRUE;
                END;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,20);
              EVALUATE(Cust_id,B);
                IF Cust_id = '' THEN
                  Error_Cust := TRUE
                ELSE
                  Cust.RESET;
                  Cust.SETRANGE(Cust."Imacs Code",Cust_id);
                  IF Cust.FINDFIRST THEN BEGIN
                    IF NOT Cust_Master.GET(Cust.NAV) THEN
                      Error_Cust := TRUE
                    ELSE
                      BEGIN
                        IF ((Cust_Master."Customer Type"=Cust_Master."Customer Type"::" ") OR
                            (Cust_Master."Type of Dealer"=Cust_Master."Type of Dealer"::" ") OR
                            (Cust_Master."Gen. Bus. Posting Group"='') OR
                            (Cust_Master."VAT Bus. Posting Group"='') OR
                            (Cust_Master."WHT Business Posting Group"='') OR
                            (Cust_Master."Customer Posting Group"='') OR
                            (Cust_Master."Customer Disc. Group"='') ) THEN
                            Error_Cust_Setup := TRUE;
                      END;
                  END ELSE
                    Error_Cust := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,11);
              IF EVALUATE(Trans_Date,B) THEN BEGIN
                Ok := DateformatCheck.CHECK(B);
                IF NOT(Ok) THEN
                  Error_TransDate := TRUE;
              END ELSE
                Error_TransDate := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,11);
              IF EVALUATE(Inv_Date,B) THEN BEGIN
                Ok:=DateformatCheck.CHECK(B);
                IF NOT (Ok) THEN
                  Error_InvDate := TRUE;
              END ELSE
                Error_InvDate := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,10);
              EVALUATE(Ext_no,B);
                IF Ext_no = '' THEN
                  Error_Exno := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,20);
              EVALUATE(NPWP_No,B);
                IF NPWP_No = '' THEN BEGIN
                  Cust.RESET;
                  Cust.SETRANGE(Cust."Propac Code",Cust_id);
                  IF Cust.FINDFIRST THEN
                    IF NOT Cust_Master.GET(Cust.NAV) THEN
                      Error_Cust := TRUE
                  ELSE
                    Error_Conver := TRUE;
                END ELSE BEGIN
                  Cust.RESET;
                  Cust.SETRANGE(Cust."Propac Code",Cust_id);
                  Cust.SETRANGE(Cust.NPWP,NPWP_No);
                  IF Cust.FINDFIRST THEN BEGIN
                    IF Cust_Master.GET(Cust.NAV) THEN BEGIN
                      Ship_Add.RESET;
                      IF NOT Ship_Add.GET(Cust_Master."No.",NPWP_No) THEN
                        Error_Npwp := TRUE;
                    END ELSE
                      Error_Cust := TRUE;
                  END ELSE
                    Error_Conver := TRUE;
                END;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,11);
              IF EVALUATE(Due_Date,B) THEN BEGIN
                Ok:=DateformatCheck.CHECK(B);
                IF NOT (Ok) THEN
                  Error_DueDate := TRUE;
              END ELSE
                Error_DueDate := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,10);
              EVALUATE(Dim1,B);
                IF Dim1 <> '' THEN BEGIN
                  GenLed_Setup.GET;
                  Dim_Value.RESET;
                  Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Global Dimension 1 Code");
                  Dim_Value.SETRANGE(Dim_Value.Name,Dim1);
                  IF NOT Dim_Value.FINDFIRST THEN
                    Error_Dim1 := TRUE;
                END ELSE
                  Error_Dim1 := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,10);
              EVALUATE(Dim2,B);
                IF Dim2 <> '' THEN BEGIN
                  GenLed_Setup.GET;
                  Dim_Value.RESET;
                  Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Global Dimension 2 Code");
                  Dim_Value.SETRANGE(Dim_Value.Name,Dim2);
                  IF NOT Dim_Value.FINDFIRST THEN
                    Error_Dim2 := TRUE;
                END ELSE
                  Error_Dim2 := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,10);
              EVALUATE(Curr_Code,B);
                IF Curr_Code <> '' THEN BEGIN
                  Curry.RESET;
                  IF NOT Curry.GET(Curr_Code) THEN
                    Error_Curr := TRUE;
                END ELSE
                  Error_CurrBlank := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,11);
              IF EVALUATE(Tax_Date,B) THEN BEGIN
                Ok:=DateformatCheck.CHECK(B);
                IF NOT (Ok) THEN
                  Error_TaxDate := TRUE
              END ELSE
                Error_TaxDate := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,20);
              EVALUATE("G/L_Account",B);
                IF "G/L_Account" <> '' THEN BEGIN
                  "G/L".RESET;
                  IF NOT "G/L".GET("G/L_Account") THEN
                    "Error_G/L" := TRUE;
                END ELSE
                "Error_G/L" := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,20);
              IF EVALUATE(Amount,B) THEN BEGIN
                IF FORMAT(Amount) = '' THEN
                  Error_Amount := TRUE;
              END ELSE
                Error_Amount := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,3);
              IF EVALUATE(Vat,B) THEN BEGIN
                IF FORMAT(Vat) = '' THEN
                  Error_Vat := TRUE
              END ELSE
                Error_Vat := TRUE;

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,11);
              IF EVALUATE(Bl_date,B) THEN BEGIN
                Ok:=DateformatCheck.CHECK(B);
                IF NOT (Ok) THEN
                 Error_BL := TRUE;
              END ELSE
                Error_BL := TRUE;


              IF (Error_Doc OR Error_Doc1 OR Error_Doc2 OR Error_Cust OR Error_Npwp OR Error_TransDate OR Error_InvDate OR Error_DueDate
                  OR Error_Dim1 OR Error_Dim2 OR "Error_G/L" OR Error_Amount OR Error_Conver OR Error_Vat OR Error_Curr OR Error_Cust_Setup
                  ) THEN BEGIN
                Flag := TRUE;

                Outstreamobj.WRITETEXT(FORMAT(Entry_No));
                Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));

                IF Error_Doc THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Document No.');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));
                END;

                IF Error_Doc1 THEN BEGIN
                  Outstreamobj.WRITETEXT('! Duplicacy In Document No.');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));
                END;

                IF Error_Doc2 THEN BEGIN
                  Outstreamobj.WRITETEXT('! Document No. already exist in posted invoices');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));
                END;

                IF Error_Cust THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Dealer Code');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_Cust_Setup THEN BEGIN
                  Outstreamobj.WRITETEXT('! Setup Value is Missing for the Customer.');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));
                END;

                IF Error_Npwp THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In NPWP No.');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_TransDate THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Transaction Date');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_InvDate THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Invoice Date');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_DueDate THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In DueDate');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_Dim1 THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Dimmension Code 1');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_Dim2 THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Dimmension Code 2');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF "Error_G/L" THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In G/L Account');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_Amount THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Amount');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_Conver THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Dealer Code In conversion Table');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_Vat THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error VAT Flag is Not Defined');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_Curr THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error Currency Code Is Not defined');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;
              END ELSE BEGIN
                  IF (Error_CurrBlank OR Error_BL OR Error_Exno OR Error_TaxDate) THEN BEGIN

                    Outstreamobj.WRITETEXT(FORMAT(Entry_No));
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));


                    IF Error_CurrBlank THEN BEGIN
                      Outstreamobj.WRITETEXT('Process SucessFully with Currency Code Blank');
                      Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                    END;

                    IF Error_BL THEN BEGIN
                      Outstreamobj.WRITETEXT('Process SucessFully with Blank B/L DAte');
                      Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                    END;

                    IF Error_Exno THEN BEGIN
                      Outstreamobj.WRITETEXT('Process SucessFully with Blank External Doc. No.');
                      Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                    END;

                    IF Error_TaxDate THEN BEGIN
                      Outstreamobj.WRITETEXT('Process SucessFully with Tax Date Is Blank');
                      Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                    END;
                  END ELSE
                   BEGIN
                    Outstreamobj.WRITETEXT(FORMAT(Entry_No));
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));
                    Outstreamobj.WRITETEXT('Process Succesfully');
                   END;
                END;
              Entry_No := Entry_No +1;
              Instreamobj.READTEXT(B,1);
              Outstreamobj.WRITETEXT();
              ResetAll();
            END;

            F1.CLOSE;

            IF NOT Flag THEN BEGIN
              Master_Setup.UploadData(FileName,Sales_interface."Sales Type"::Propac);
              ProReport.RUN;
            END;
          END;

  }
  CODE
  {
    VAR
      Purchsetup@1000000008 : Record 312;
      Instreamobj@1000000001 : InStream;
      Outstreamobj@1000000034 : OutStream;
      B@1000000004 : Text[250];
      Pages@1000000005 : Integer;
      Flag@1000000006 : Boolean;
      B1@1000000007 : Text[5];
      Qty@1000000015 : Decimal;
      FileName@1102201000 : Text[250];
      text006@1102201002 : TextConst 'ENU=Import Text File';
      OrderDate@1000000003 : Date;
      F@1000000000 : File;
      F1@1000000033 : File;
      ItemNo@1000000011 : Code[20];
      OrdDate@1000000012 : Date;
      NoSeries@1102201001 : Codeunit 396;
      Error_Doc@1000000002 : Boolean;
      Sales_interface@1000000010 : Record 50009;
      Entry_No@1000000013 : Integer;
      Error_Cust@1000000014 : Boolean;
      Error_Npwp@1000000016 : Boolean;
      Error_TransDate@1000000017 : Boolean;
      Error_InvDate@1000000018 : Boolean;
      Error_DueDate@1000000019 : Boolean;
      Error_Dim1@1000000020 : Boolean;
      Error_Dim2@1000000021 : Boolean;
      Error_Curr@1000000022 : Boolean;
      Error_CurrBlank@1000000040 : Boolean;
      Error_TaxDate@1000000023 : Boolean;
      "Error_G/L"@1000000024 : Boolean;
      Error_Amount@1000000025 : Boolean;
      Error_Vat@1000000026 : Boolean;
      Error_BL@1000000027 : Boolean;
      Error_Exno@1000000028 : Boolean;
      Error_Conver@1000000029 : Boolean;
      Master_Setup@1000000030 : Record 50008;
      LogFile@1000000031 : Text[250];
      Ch@1000000032 : Char;
      SalesHeader@1000000036 : Record 36;
      "SalesInv Header"@1000000037 : Record 112;
      Error_Doc1@1000000038 : Boolean;
      Error_Doc2@1000000039 : Boolean;
      ProReport@1000000041 : Report 50015;
      DateformatCheck@1000000042 : Automation "{84B43D7D-C0AF-40AB-BCC4-F15BE59A9D62} 1.0:{531EC973-2A03-4C71-82C5-0FEBCEE3C236}:Unknown Automation Server.Unknown Class";
      Ok@1000000035 : Boolean;
      Error_Cust_Setup@1000000043 : Boolean;

    PROCEDURE ResetAll@1000000000();
    BEGIN
      Error_Doc := FALSE;
      Error_Cust := FALSE;
      Error_Npwp := FALSE;
      Error_TransDate := FALSE;
      Error_InvDate := FALSE;
      Error_DueDate := FALSE;
      Error_Dim1 := FALSE;
      Error_Dim2 := FALSE;
      Error_Curr := FALSE;
      Error_TaxDate := FALSE;
      "Error_G/L" := FALSE;
      Error_Amount := FALSE;
      Error_CurrBlank := FALSE;
      Error_Vat := FALSE;
      Error_BL := FALSE;
      Error_Exno := FALSE;
      Error_Conver := FALSE;
      Error_Doc1 := FALSE;
      Error_Doc2 := FALSE;
      Error_Cust_Setup := FALSE;
    END;

    BEGIN
    END.
  }
}

