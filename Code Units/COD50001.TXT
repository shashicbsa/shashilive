OBJECT Codeunit 50001 Imacs Batch
{
  OBJECT-PROPERTIES
  {
    Date=08/25/15;
    Time=10:35:12;
    Modified=Yes;
    Version List=Imacs1.0,YIMMIAFP,CR#018,CR#022,UPG13R2DEV,PPNPPHDEV;
  }
  PROPERTIES
  {
    TableNo=472;
    OnRun=VAR
            Doc_No@1000000000 : Code[20];
            Cust_id@1000000001 : Code[20];
            Cust@1000000002 : Record 50004;
            NPWP_No@1000000003 : Code[20];
            Trans_Date@1000000004 : Date;
            Inv_Date@1000000005 : Date;
            Ext_no@1000000006 : Code[20];
            Cust_Master@1000000007 : Record 18;
            Ship_Add@1000000008 : Record 222;
            Due_Date@1000000009 : Date;
            Dim1@1000000010 : Code[10];
            Dim2@1000000011 : Code[10];
            GenLed_Setup@1000000012 : Record 98;
            Dim_Value@1000000013 : Record 349;
            Curr_Code@1000000014 : Code[10];
            Curry@1000000015 : Record 4;
            Tax_Date@1000000016 : Date;
            "G/L_Account"@1000000017 : Code[20];
            "G/L"@1000000018 : Record 15;
            Amount@1000000019 : Decimal;
            Vat@1000000020 : Boolean;
            Bl_date@1000000021 : Date;
            WHT_AreaCode@1000000022 : Code[10];
            AreaCode_WHT@1000000023 : Record 50017;
            Narration@1000000024 : Text[250];
            Dim3@1102159001 : Code[20];
            LocalRecIfDimMapSetup@1000000025 : Record 60066;
            LocalIntRes@1000000026 : Integer;
          BEGIN
            //YIMMIAFPST -1

            //IF ISCLEAR(DateformatCheck) THEN  //UPG13R2DEV
            //UPG13C.begin
            //CREATE(DateformatCheck);
            //CREATE(DateformatCheck,TRUE,TRUE);  //UPG13R2DEV
            //UPG13C.end

            DateformatCheck := DateformatCheck.DateTimeFormatCheck; //UPG13R2DEV
            Ch := 9;
            Master_Setup.GET;

            //FileName := CommonDialogMgt.OpenFile(text006,'',1,'',0);
            FileName := Master_Setup."Interface File Path" + '\' + Master_Setup."Imacs Sales Invoice";
            IF FileName = '' THEN
              EXIT;

            LogFile := Master_Setup."Interface File Path" + '\' + 'LOG-' + Master_Setup."Imacs Sales Invoice";
            //LogFile := 'C:\Documents and settings\ATUL\desktop\test.txt';


            F1.CREATE(LogFile);
            F1.CREATEOUTSTREAM(Outstreamobj);
            F1.TEXTMODE(TRUE);
            Entry_No := 1;
            IF NOT (F.OPEN(FileName)) THEN BEGIN
              F1.CLOSE;
              EXIT;
            END;
            F.CREATEINSTREAM(Instreamobj);

            WHILE NOT Instreamobj.EOS DO BEGIN
              //Reading Document No.
              Instreamobj.READTEXT(B,20);
              EVALUATE(Doc_No,B);
                IF Doc_No = '' THEN
                  Error_Doc := TRUE
                ELSE BEGIN
                  SalesHeader.SETRANGE(SalesHeader."No.",Doc_No);
                  IF SalesHeader.FINDFIRST THEN
                    Error_Doc1 := TRUE;

                  "SalesInv Header".SETRANGE("SalesInv Header"."No.",Doc_No);
                  IF "SalesInv Header".FINDFIRST THEN
                    Error_Doc2 := TRUE;
                END;

              //Reading Dealer Code
              //YIMMIAFPST -2

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,20);
              EVALUATE(Cust_id,B);
                IF Cust_id = '' THEN
                  Error_Cust := TRUE
                ELSE
                  Cust.RESET;
                  Cust.SETRANGE(Cust."Imacs Code",Cust_id);
                  IF Cust.FINDFIRST THEN BEGIN
                    IF NOT Cust_Master.GET(Cust.NAV) THEN
                      Error_Cust := TRUE
                    ELSE BEGIN
                    IF ((Cust_Master."Customer Type" = Cust_Master."Customer Type"::" ") OR
                        (Cust_Master."Type of Dealer" = Cust_Master."Type of Dealer"::" ") OR
                        (Cust_Master."Gen. Bus. Posting Group" = '') OR
                        (Cust_Master."VAT Bus. Posting Group" = '') OR
                        (Cust_Master."WHT Business Posting Group" = '') OR
                        (Cust_Master."Customer Posting Group" = '') {OR
                        (Cust_Master."Customer Disc. Group" = '')}) THEN
                          Error_Cust_Setup := TRUE;
                    END;
                  END ELSE
                    //Error_Cust := TRUE;
                    Error_Conver := TRUE;
            //YIMMIAFPEN -2

            //Reading Transaction Date

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,11);
              IF EVALUATE(Trans_Date,B) THEN BEGIN
                //Ok := DateformatCheck.CHECK(B);  //UPG13R2DEV
                Ok := DateformatCheck.checkDateTime(DateTrim(B)); //UPG13R2DEV
                IF NOT(Ok) THEN
                  Error_TransDate := TRUE;
              END ELSE
                Error_TransDate := TRUE;

            //Reading Commerical Invoice date

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,11);
              IF EVALUATE(Inv_Date,B) THEN BEGIN
                //Ok := DateformatCheck.CHECK(B);  //UPG13R2DEV
                Ok := DateformatCheck.checkDateTime(DateTrim(B)); //UPG13R2DEV
                IF NOT(Ok) THEN
                  Error_InvDate := TRUE;
              END ELSE
                Error_InvDate := TRUE;

            //Reading DO Number

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,20);
              EVALUATE(Ext_no,B);
              IF Ext_no = '' THEN
                Error_Exno := TRUE;

            //Reading NPWP Number

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,20);
              EVALUATE(NPWP_No,B);
              //PPNPPHDEV.begin
              {IF NPWP_No = '' THEN BEGIN
                 Cust.RESET;
                 Cust.SETRANGE(Cust."Imacs Code",Cust_id);
                 IF Cust.FINDFIRST THEN BEGIN
                   IF NOT Cust_Master.GET(Cust.NAV) THEN
                     Error_Cust := TRUE;
                 END ELSE
                  Error_Conver := TRUE;
               END ELSE BEGIN
                  Cust.RESET;
                  Cust.SETRANGE(Cust."Imacs Code",Cust_id);
                  Cust.SETRANGE(Cust.NPWP,NPWP_No);
                  IF Cust.FINDFIRST THEN BEGIN
                    IF Cust_Master.GET(Cust.NAV) THEN BEGIN
                      Ship_Add.RESET;
                      IF NOT Ship_Add.GET(Cust_Master."No.",NPWP_No) THEN
                        Error_Npwp := TRUE
                    END ELSE
                      Error_Cust := TRUE;
                  END ELSE
                    Error_Conver := TRUE;
                END;  } //previous code commented


              //PPNPPHDEV.end

            //Reading Due Date

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,11);
              IF EVALUATE(Due_Date,B) THEN BEGIN
                //Ok := DateformatCheck.CHECK(B);  //UPG13R2DEV
                Ok := DateformatCheck.checkDateTime(DateTrim(B)); //UPG13R2DEV
                IF NOT(Ok) THEN
                  Error_DueDate := TRUE;
              END ELSE
                Error_DueDate := TRUE;
            //Dimension value new concept.start
            //Reading Dimmension Value Global Dimmension code 1
            //YIMMIAFPST -3
              {
              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,10);
              EVALUATE(Dim1,B);
                IF Dim1 <> '' THEN BEGIN
                  GenLed_Setup.GET;
                  Dim_Value.RESET;
                  Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Global Dimension 1 Code");
                  Dim_Value.SETRANGE(Dim_Value.Name,Dim1);
                  IF NOT Dim_Value.FINDFIRST THEN
                    Error_Dim1 := TRUE;
                END ELSE
                  Error_Dim1 := TRUE;
              }//dimesnion value new concept previous code blocked


              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,10);
              EVALUATE(Dim1,B);
              IF Dim1 <> '' THEN BEGIN
                IF LocalRecIfDimMapSetup.GET THEN;
                IF LocalRecIfDimMapSetup.IMACS THEN BEGIN
                  LocalIntRes := GetDim1Value(Dim1);
                  IF (LocalIntRes = 1) THEN
                    Error_Dim1 := TRUE;
                END ELSE BEGIN
                  GenLed_Setup.GET;
                  Dim_Value.RESET;
                  Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Global Dimension 1 Code");
                  Dim_Value.SETRANGE(Dim_Value.Name,Dim1);
                  IF NOT Dim_Value.FINDFIRST THEN
                    Error_Dim1 := TRUE
                END;
              END ELSE
                Error_Dim1 := TRUE;




            //Dimension value new concept.end





            //Reading Dimmension Value Global Dimmension Code 2

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,10);
              EVALUATE(Dim2,B);
                IF Dim2 <> '' THEN BEGIN
                  GenLed_Setup.GET;
                  Dim_Value.RESET;
                  Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Global Dimension 2 Code");
                  Dim_Value.SETRANGE(Dim_Value.Name,Dim2);
                  IF NOT Dim_Value.FINDFIRST THEN
                    Error_Dim2 := TRUE;
                END ELSE
                  Error_Dim2 := TRUE;

            //YIMMIAFPEN -3

            //Reading Currency Code

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,10);
              EVALUATE(Curr_Code,B);
                IF Curr_Code <> '' THEN BEGIN
                  Curry.RESET;
                  IF NOT Curry.GET(Curr_Code) THEN
                    Error_Curr := TRUE;
                END ELSE
                  Error_CurrBlank := TRUE;

            //Reading Tax invoice date

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,11);
              IF EVALUATE(Tax_Date,B) THEN BEGIN
                //Ok := DateformatCheck.CHECK(B);  //UPG13R2DEV
                Ok := DateformatCheck.checkDateTime(DateTrim(B)); //UPG13R2DEV
                IF NOT(Ok) THEN
                  Error_TaxDate := TRUE;
              END ELSE
                Error_TaxDate := TRUE;

            //Reading G/L Account Code

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,20);
              EVALUATE("G/L_Account",B);
                IF "G/L_Account" <> '' THEN BEGIN
                  "G/L".RESET;
                  IF NOT "G/L".GET("G/L_Account") THEN
                    "Error_G/L" := TRUE;
                END ELSE
                "Error_G/L" := TRUE;

            //PPNPPHDEV.begin
            IF ("G/L_Account" = Master_Setup."WHT Account For MC") THEN
              Result1 := GetPPHNpwpNumber(Cust_id);
            CASE Result1 OF
              1:
                Error_Cust := TRUE;
              2:
                Error_Conver := TRUE;
              3:
                Error_PPH_Npwp := TRUE;
            END;
            //PPNPPHDEV.end;

            //Reading Amount(Invoice Amount)

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,20);
              IF EVALUATE(Amount,B) THEN BEGIN
                IF FORMAT(Amount) = '' THEN
                  Error_Amount := TRUE;
              END ELSE
                Error_Amount := TRUE;

            //Reading Narration
            //YIMMIAFPST -5

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,50);
              IF EVALUATE(Narration,B) THEN;

            //YIMMIAFPEN -5

            //Reading Flag For VAT

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,3);
              IF EVALUATE(Vat,B) THEN BEGIN
                IF FORMAT(Vat) = '' THEN
                  Error_Vat := TRUE
              END ELSE
                  Error_Vat := TRUE;
            //PPNPPHDEV.begin
                Result := GetPPNNpwpNumber(Cust_id,Vat);
                CASE Result OF
                  1:
                    Error_Cust := TRUE;
                  2:
                    Error_Conver := TRUE;
                  3:
                    Error_Npwp := TRUE;
                END;

            //PPNPPHDEV.end

            //Reading B/L Date

              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,11);
              IF EVALUATE(Bl_date,B) THEN BEGIN
                //Ok := DateformatCheck.CHECK(B);  //UPG13R2DEV
                Ok := DateformatCheck.checkDateTime(DateTrim(B)); //UPG13R2DEV
                IF NOT(Ok) THEN
                  Error_BL := TRUE;
              END ELSE
                Error_BL := TRUE;

            //Reading WHT Area Code
            //YIMMIAFPST -4
              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,10);
              EVALUATE(WHT_AreaCode,B);
                IF WHT_AreaCode <> '' THEN BEGIN
                   IF NOT AreaCode_WHT.GET(WHT_AreaCode) THEN
                       Error_WHT := TRUE;
                END ELSE
                       Error_WHT_BLANK := TRUE;

            //YIMMIAFPEN -4
            //YIMMIAFPEN -1
            //Dimension value new concept.start>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
            //>>02122013/VK/CR#022- Reading Shortcut Dimension 3 Code Selling Expense
              {
              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,20);
              EVALUATE(Dim3,B);
                IF Dim3 <> '' THEN BEGIN
                  GenLed_Setup.GET;
                  Dim_Value.RESET;
                  Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Shortcut Dimension 3 Code");
                  Dim_Value.SETRANGE(Dim_Value.Name,Dim3);
                  IF NOT Dim_Value.FINDFIRST THEN
                    Error_Dim3 := TRUE;
                END; //ELSE BEGIN
                  //IF "G/L_Account" <>
                  //Error_Dim3 := TRUE;
              }//Dimension value new concept.previous code blocked
              Instreamobj.READTEXT(B,1);
              Instreamobj.READTEXT(B,20);
              EVALUATE(Dim3,B);
              IF Dim3 <> '' THEN BEGIN
                LocalRecIfDimMapSetup.GET;
                IF LocalRecIfDimMapSetup.IMACS THEN BEGIN
                  LocalIntRes := GetDim3Value(Dim3);
                  IF (LocalIntRes = 1) THEN
                    Error_Dim3 := TRUE;
                END ELSE BEGIN
                  GenLed_Setup.GET;
                  Dim_Value.RESET;
                  Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Shortcut Dimension 3 Code");
                  Dim_Value.SETRANGE(Dim_Value.Name,Dim3);
                  IF NOT Dim_Value.FINDFIRST THEN
                    Error_Dim3 := TRUE;
                END;
              END;

            //Dimension value new concept.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
              //WHT Line Check-No error for blank Dimensions
              IF "G/L_Account" = Master_Setup."WHT Account For MC" THEN
              BEGIN
                IF Dim1 = '' THEN
                  Error_Dim1 := FALSE;
                IF Dim2 = '' THEN
                  Error_Dim2 := FALSE;
              END;
            //<<02122013/VK/CR#022

               IF (Error_Doc OR Error_Doc1 OR Error_Doc2 OR Error_Cust OR Error_Npwp OR Error_TransDate OR Error_InvDate OR Error_DueDate
                  OR Error_TaxDate OR "Error_G/L" OR Error_Amount OR Error_Conver OR Error_Curr OR Error_Dim1
                  OR Error_Dim2 OR Error_Vat OR Error_Exno OR Error_WHT OR Error_Cust_Setup OR Error_Dim3 OR Error_PPH_Npwp) THEN BEGIN //02122013/VK/CR#022   //PPNPPHDEV
                Flag := TRUE;

                  Outstreamobj.WRITETEXT(FORMAT(Entry_No));
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));
                IF Error_Doc THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Document No.');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));
                END;

                IF Error_Doc1 THEN BEGIN
                  Outstreamobj.WRITETEXT('! Duplicacy In Document No.');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));
                END;

                IF Error_Cust_Setup THEN BEGIN
                  Outstreamobj.WRITETEXT('! Setup Value is Missing for that Customer.');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));
                END;

                IF Error_Doc2 THEN BEGIN
                  Outstreamobj.WRITETEXT('! Document No. already exist in posted invoices');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));
                END;

                IF Error_Cust THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Dealer Code');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_Npwp THEN BEGIN
                  //Outstreamobj.WRITETEXT('! Error In NPWP No.'); //PPNPPHDEV previou code commented
                  Outstreamobj.WRITETEXT('! PPN M/C NPWP No. not found for entity'); //PPNPPHDEV
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;
                //PPNPPHDEV.begin
                IF Error_PPH_Npwp THEN BEGIN
                  Outstreamobj.WRITETEXT('! PPH M/C NPWP No. not found for entity'); //PPNPPHDEV
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;
                //PPNPPHDEV.end


                IF Error_TransDate THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Transaction Date');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_InvDate THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Invoice Date');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_DueDate THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In DueDate');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_TaxDate THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Tax Date');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF "Error_G/L" THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In G/L Account');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_Amount THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Amount');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_Conver THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Dealer Code In conversion Table');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_Curr THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error Currency code is not Defined');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_Dim1 THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Dimmension Code 1 : if IMACS is true in IF Dimension Mapping Setup page then check' +
                  'in Interface Dimension Mapping page otherwise check in Dimension Values page');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_Dim2 THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Dimmension Code 2');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_Vat THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error VAT flag is not OK');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;

                IF Error_Exno THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error DO no is not Defined');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;
            //YIMMIAFPST -4
                IF Error_WHT THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error IN WHT AREA CODE');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;
            //YIMMIAFPEN -4
            //>>02122013/VK/CR#022
                IF Error_Dim3 THEN BEGIN
                  Outstreamobj.WRITETEXT('! Error In Dimmension Code 3 : if IMACS is true in IF Dimension Mapping Setup page then check' +
                  'in Interface Dimension Mapping page otherwise check in Dimension Values page');
                  Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                END;
            //<<02122013/VK/CR#022
              END ELSE BEGIN
                  IF (Error_CurrBlank OR Error_BL OR Error_WHT_BLANK) THEN BEGIN

                    Outstreamobj.WRITETEXT(FORMAT(Entry_No));
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));

                    IF Error_CurrBlank THEN BEGIN
                      Outstreamobj.WRITETEXT('Process SucessFully with Currency Code Blank');
                      Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                    END;

                    IF Error_BL THEN BEGIN
                      Outstreamobj.WRITETEXT('Process SucessFully with Blank B/L Date');
                      Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                    END;
            //YIMMIAFPST -4
                    IF Error_WHT_BLANK THEN BEGIN
                      Outstreamobj.WRITETEXT('Process SucessFully with Blank WHT Area Code');
                      Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<CHAR>'));
                    END;
            //YIMMIAFOEN-4
                  END ELSE
                   BEGIN
                    Outstreamobj.WRITETEXT(FORMAT(Entry_No));
                    Outstreamobj.WRITETEXT(FORMAT(Ch,2,'<char>'));
                    Outstreamobj.WRITETEXT('Process Succesfully');
                   END;
              END;
              Entry_No := Entry_No +1;

              Instreamobj.READTEXT(B,1);
              Outstreamobj.WRITETEXT();
              ResetAll();

            END;

            F1.CLOSE;

            IF NOT Flag THEN BEGIN
              //Master_Setup.UploadData(FileName,Sales_interface."Sales Type"::Imacs); //31072013/VK/CR#018-Code Commented
              Master_Setup.UploadData(FileName,Sales_interface."Sales Type"::" "); //31072013/VK/CR#018
              ImacsReport.RUN;
            END;
          END;

  }
  CODE
  {
    VAR
      Purchsetup@1000000008 : Record 312;
      Instreamobj@1000000001 : InStream;
      Outstreamobj@1000000034 : OutStream;
      B@1000000004 : Text[250];
      Pages@1000000005 : Integer;
      Flag@1000000006 : Boolean;
      B1@1000000007 : Text[5];
      Qty@1000000015 : Decimal;
      FileName@1102201000 : Text[250];
      text006@1102201002 : TextConst 'ENU=Import Text File';
      OrderDate@1000000003 : Date;
      F@1000000000 : File;
      F1@1000000033 : File;
      ItemNo@1000000011 : Code[20];
      OrdDate@1000000012 : Date;
      NoSeries@1102201001 : Codeunit 396;
      Error_Doc@1000000002 : Boolean;
      Sales_interface@1000000010 : Record 50009;
      Entry_No@1000000013 : Integer;
      Error_Cust@1000000014 : Boolean;
      Error_Npwp@1000000016 : Boolean;
      Error_TransDate@1000000017 : Boolean;
      Error_InvDate@1000000018 : Boolean;
      Error_DueDate@1000000019 : Boolean;
      Error_Dim1@1000000020 : Boolean;
      Error_Dim2@1000000021 : Boolean;
      Error_Curr@1000000022 : Boolean;
      Error_CurrBlank@1000000040 : Boolean;
      Error_TaxDate@1000000023 : Boolean;
      "Error_G/L"@1000000024 : Boolean;
      Error_Amount@1000000025 : Boolean;
      Error_Vat@1000000026 : Boolean;
      Error_BL@1000000027 : Boolean;
      Error_Exno@1000000028 : Boolean;
      Error_Conver@1000000029 : Boolean;
      Master_Setup@1000000030 : Record 50008;
      LogFile@1000000031 : Text[250];
      Ch@1000000032 : Char;
      SalesHeader@1000000036 : Record 36;
      "SalesInv Header"@1000000037 : Record 112;
      Error_Doc1@1000000038 : Boolean;
      Error_Doc2@1000000039 : Boolean;
      ImacsReport@1000000041 : Report 50014;
      "LineNo."@1000000035 : Integer;
      Error_WHT@1000000042 : Boolean;
      Error_WHT_BLANK@1000000043 : Boolean;
      DateformatCheck@1000000044 : DotNet "'DateTimeFun, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.DateTimeFun.DateTimeFormatCheck";
      Ok@1000000045 : Boolean;
      Error_Cust_Setup@1000000046 : Boolean;
      Error_Dim3@1102159001 : Boolean;
      Result@1102159002 : Integer;
      Result1@1102159003 : Integer;
      Error_PPH_Npwp@1102159004 : Boolean;

    PROCEDURE ResetAll@1000000000();
    BEGIN
      Error_Doc := FALSE;
      Error_Cust := FALSE;
      Error_Npwp := FALSE;
      Error_PPH_Npwp := FALSE; //PPNPPHDEV
      Error_TransDate := FALSE;
      Error_InvDate := FALSE;
      Error_DueDate := FALSE;
      Error_Dim1 := FALSE;
      Error_Dim2 := FALSE;
      Error_Curr := FALSE;
      Error_CurrBlank := FALSE;
      Error_TaxDate := FALSE;
      "Error_G/L" := FALSE;
      Error_Amount := FALSE;
      Error_Vat := FALSE;
      Error_BL := FALSE;
      Error_Exno := FALSE;
      Error_Conver := FALSE;
      Error_Doc1 := FALSE;
      Error_Doc2 := FALSE;
      Error_Cust_Setup:= FALSE;
      Error_Dim3 := FALSE; //02122013/VK/CR#022
      //PPNPPHDEV.begin
      Result := 0;
      Result1 := 0;
      //PPNPPHDEV.end
    END;

    PROCEDURE DateTrim@1102159001(ADate@1102159001 : Text) : Text[250];
    BEGIN
      EXIT(DELSTR(ADate,STRLEN(ADate),1));
    END;

    PROCEDURE GetPPNNpwpNumber@1102159002("Customer code"@1102159001 : Code[30];vat@1102159005 : Boolean) return : Integer;
    VAR
      ConvMasterCust@1102159002 : Record 50004;
      Cust_Master1@1102159003 : Record 18;
      ShipAdd@1102159004 : Record 222;
    BEGIN

        //new funtion for ppnpph npwp validation  //PPNPPHDEV
      IF vat THEN BEGIN
        ConvMasterCust.RESET;
        ConvMasterCust.SETRANGE("Imacs Code","Customer code");
        IF ConvMasterCust.FINDFIRST THEN BEGIN
          IF Cust_Master1.GET(ConvMasterCust.NAV) THEN BEGIN
            ShipAdd.RESET;
            ShipAdd.SETRANGE("Customer No.",Cust_Master1."No.");
            ShipAdd.SETRANGE(ShipAdd.PPN,TRUE);
            ShipAdd.SETRANGE(ShipAdd."PPN M/C",TRUE);
            IF NOT ShipAdd.FINDFIRST THEN
              return := 3;
          END ELSE
            return := 1
        END ELSE
          return := 2;
      END ELSE BEGIN
        ConvMasterCust.RESET;
        ConvMasterCust.SETRANGE(ConvMasterCust."Imacs Code","Customer code");
        IF ConvMasterCust.FINDFIRST THEN BEGIN
          IF NOT Cust_Master1.GET(ConvMasterCust.NAV) THEN
            return := 1
        END ELSE
            return := 2;
      END;
    END;

    PROCEDURE GetPPHNpwpNumber@1102159004("Customer code"@1102159001 : Text[30]) return : Integer;
    VAR
      ConvMasterCust1@1102159002 : Record 50004;
      Cust_Master2@1102159003 : Record 18;
      ShipAdd1@1102159004 : Record 222;
    BEGIN

       //new funtion for ppnpph npwp validation  //PPNPPHDEV
      ConvMasterCust1.RESET;
      ConvMasterCust1.SETRANGE("Imacs Code","Customer code");
      IF ConvMasterCust1.FINDFIRST THEN BEGIN
        IF Cust_Master2.GET(ConvMasterCust1.NAV) THEN BEGIN
          ShipAdd1.RESET;
          ShipAdd1.SETRANGE("Customer No.",Cust_Master2."No.");
          ShipAdd1.SETRANGE(PPH,TRUE);
          ShipAdd1.SETRANGE("PPH M/C",TRUE);
          IF NOT ShipAdd1.FINDFIRST THEN
            return := 3;
        END ELSE
          return := 1
      END ELSE
          return := 2;
    END;

    PROCEDURE GetDim1Value@1000000002(Dimension1@1000000000 : Code[20]) Result : Integer;
    VAR
      LocalRecIfDimMapp@1000000001 : Record 60065;
      LocalIntReturnRes@1000000002 : Integer;
    BEGIN

      LocalRecIfDimMapp.RESET;
      LocalRecIfDimMapp.SETRANGE("Dimension Name",LocalRecIfDimMapp."Dimension Name"::"SHOP CODE");
      LocalRecIfDimMapp.SETRANGE("Old YIMM Code",Dimension1);
      IF NOT LocalRecIfDimMapp.FINDSET THEN
        LocalIntReturnRes := 1
      ELSE
        LocalIntReturnRes := 0;
    END;

    PROCEDURE GetDim3Value@1000000001(Dimension3@1000000000 : Code[20]) LocalIntReturnRes : Integer;
    VAR
      LocalRecIFDimMap@1000000001 : Record 60065;
    BEGIN
      LocalRecIFDimMap.RESET;
      LocalRecIFDimMap.SETRANGE("Dimension Name",LocalRecIFDimMap."Dimension Name"::"SELLING EXPENSES");
      LocalRecIFDimMap.SETRANGE("Old YIMM Code",Dimension3);
      IF NOT LocalRecIFDimMap.FINDFIRST THEN
        LocalIntReturnRes := 1
      ELSE
        LocalIntReturnRes := 0;
    END;

    BEGIN
    {
      Date               Sign                 Ref_ID                 Description
      31072013            VK                  CR#018                 Imacs IF Modification
      02122013            VK                  CR#022                 2nd Imacs IF Modification
      //YIMMIAFP
      1) Insert Date Check (Automation for date Check is included)
      2) INSERT CUSTOMER MASTER CHECK IN LOG FILE
      3) CHANGE SELECTION OF DIMMENSION FROM CODE TO NAME
      4) MAKE PROVISION FOR CAPTURING WHT ARED CODE IN INTERFACE FILE
      5) MAKE PROVISION FOR CAPTURING NARRATION IN INTERFACE FILE
      //UPG13R2DEV
      Modifications for 2013R2DB. Dotnet variable "DateFormatCheck" is modified. Also "DateTrim" function is created to remove a space in Date fields in interface files.
      //PPNPPHDEV  SV
      Development of ppn/pph concept

      [UPG13R2DEV]
      [SIGN]  : SV
      [REF]   : Dimension value new concept
      [DESC]  : Dimension value new concept.New mapping table introduced and will be used(based on setup) untill all other systems are updated to use new dimension values.
                After all other system updated mapping will be obsolate
    }
    END.
  }
}

