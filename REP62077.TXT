OBJECT Report 62077 Actual Data Sheet for A1-Steer
{
  OBJECT-PROPERTIES
  {
    Date=01/22/16;
    Time=15:33:23;
    Modified=Yes;
    Version List=Bud1.0,UPG13R2DEV,CR002;
  }
  PROPERTIES
  {
    ShowPrintStatus=Yes;
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  BudSysSetup.GET;
                  BudSysSetup.TESTFIELD("Actaul Data Sheet Path");
                  BudSysSetup.TESTFIELD("Actaul Data Sheet Name Prefix");
                  BudSysSetup.TESTFIELD("Month Run Day");

                  IF RunDate <> 0D THEN
                    BEGIN
                      D1 := RunDate;
                      D1 := CALCDATE('CM-1M-CM',D1);
                      //d3:=CALCDATE('CM',d1);

                      D2 := D1;
                      D2 := CALCDATE('CM',D1);
                    END
                  ELSE
                    BEGIN
                      D1 := TODAY;
                      D1 := CALCDATE('CM-1M-CM',D1);

                      D2 := D1;
                      D2 := CALCDATE('CM',D1);
                    END;

                  GetYearMonth(D1);
                  CreateFile;
                  //WriteHeader;
                END;

    OnPostReport=BEGIN

                   CreateActDataSheetLog;
                   CloseFile;

                   IF GUIALLOWED THEN
                     MESSAGE('Done');
                 END;

    UseRequestPage=Yes;
  }
  DATASET
  {
    { 6363;    ;DataItem;                    ;
               DataItemTable=Table349;
               DataItemTableView=SORTING(Dimension Code,Code)
                                 ORDER(Ascending)
                                 WHERE(Global Dimension No.=FILTER(1),
                                       Dimension Code=FILTER(SHOP CODE),
                                       Dimension Value Type=FILTER(Standard)) }

    { 7069;1   ;DataItem;                    ;
               DataItemTable=Table17;
               DataItemTableView=SORTING(G/L Account No.,Posting Date,Global Dimension 1 Code,Global Dimension 2 Code)
                                 ORDER(Ascending)
                                 WHERE(Amount=FILTER(<>0));
               OnPreDataItem=BEGIN
                               "G/L Entry".SETRANGE("G/L Entry"."Posting Date",D1,D2);
                               IF "G/L Entry".FINDFIRST THEN;
                             END;

               OnAfterGetRecord=BEGIN
                                  WriteFile;
                                END;

               DataItemLink=Global Dimension 1 Code=FIELD(Code) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1000000000;;Container;
                  Name=Options;
                  ContainerType=ContentArea }

      { 1000000001;1;Field  ;
                  Name=Run Date;
                  SourceExpr=RunDate;
                  OnValidate=BEGIN
                               GetMonthTxt();
                             END;
                              }

      { 1000000002;1;Field  ;
                  Name=Actual Data Sheet Month - Year;
                  SourceExpr=MonthTxt;
                  Editable=FALSE }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      BudSysSetup@1102159006 : Record 60037;
      GLAcc@1102159012 : Record 15;
      RowNo@1102159005 : Integer;
      FileName@1102159007 : Text[250];
      D1@1102159008 : Date;
      D2@1102159009 : Date;
      RunDate@1102159011 : Date;
      Text000@1102159013 : TextConst 'ENU=Excel can not create !!!';
      MonthTxt@1102159010 : Text[30];
      Text001@1102159016 : TextConst 'ENU=Actual Data Sheet';
      Text002@1102159017 : TextConst 'ENU=Actual Data';
      Text003@1000000002 : TextConst 'ENU=.txt';
      Tab@1000000003 : Text[1];
      Text004@1000000005 : TextConst 'ENU=YEAR';
      Text005@1000000006 : TextConst 'ENU=MONTH';
      Text006@1000000007 : TextConst 'ENU=SHOP CODE';
      Text007@1000000008 : TextConst 'ENU=ACCOUNT CODE';
      Text008@1000000009 : TextConst 'ENU=ACCOUNT NAME';
      Text009@1000000010 : TextConst 'ENU=AMOUNT';
      Month@1000000011 : Integer;
      Year@1000000012 : Integer;
      MonthText@1000000013 : Text[2];
      Outstreamobj@1000000014 : OutStream;
      F1@1000000015 : File;

    PROCEDURE CreateActDataSheetLog@1102159009();
    VAR
      ActualDataSheetLog@1102159001 : Record 60038;
    BEGIN
      //For Header Entry
      ActualDataSheetLog.INIT;
      ActualDataSheetLog."Run Data and Time" := CREATEDATETIME(DMY2DATE(1,DATE2DMY(TODAY,2),DATE2DMY(TODAY,3)),000000T);
      IF NOT GUIALLOWED THEN
        ActualDataSheetLog."System Generated" := TRUE;
      ActualDataSheetLog."User Id" := USERID;
      ActualDataSheetLog."Header Entry" := TRUE;
      IF ActualDataSheetLog.INSERT THEN;
      //For Line
      ActualDataSheetLog.INIT;
      ActualDataSheetLog."Run Data and Time" := CURRENTDATETIME;
      ActualDataSheetLog."File Name" := FileName;
      IF NOT GUIALLOWED THEN
        ActualDataSheetLog."System Generated" := TRUE;
      ActualDataSheetLog."User Id" := USERID;
      ActualDataSheetLog.INSERT;
    END;

    PROCEDURE GetMonthTxt@1102159002();
    BEGIN
      MonthTxt := FORMAT(CALCDATE('-CM -1D',RunDate),0,'<Month Text> - <YEAR4>');
    END;

    PROCEDURE CreateFile@1000000001();
    BEGIN

      GetFileName;
      F1.CREATE(FileName);
      F1.CREATEOUTSTREAM(Outstreamobj);
      F1.TEXTMODE(TRUE);

      Tab := '|';
    END;

    PROCEDURE WriteFile@1000000002();
    BEGIN
      IF NOT GLAcc.GET("G/L Entry"."G/L Account No.") THEN CLEAR(GLAcc);

      Outstreamobj.WRITETEXT(FORMAT(Year));
      Outstreamobj.WRITETEXT(FORMAT(Tab));
      Outstreamobj.WRITETEXT(FORMAT(MonthText));
      Outstreamobj.WRITETEXT(FORMAT(Tab));
      Outstreamobj.WRITETEXT(FORMAT("Dimension Value".Name));
      Outstreamobj.WRITETEXT(FORMAT(Tab));
      Outstreamobj.WRITETEXT(FORMAT("G/L Entry"."G/L Account No."));
      Outstreamobj.WRITETEXT(FORMAT(Tab));
      Outstreamobj.WRITETEXT(FORMAT(GLAcc.Name));
      Outstreamobj.WRITETEXT(FORMAT(Tab));
      Outstreamobj.WRITETEXT(FORMAT(FormatDecimal("G/L Entry".Amount)));
      Outstreamobj.WRITETEXT();
    END;

    PROCEDURE GetFileName@1000000003();
    BEGIN
      BudSysSetup.GET;
      BudSysSetup.TESTFIELD("Actaul Data Sheet Path");
      BudSysSetup.TESTFIELD("Actaul Data Sheet Name Prefix");

      //FileName := (BudSysSetup."Actaul Data Sheet Path" +
      //               BudSysSetup."Actaul Data Sheet Name Prefix" + FORMAT(D1,0,'<YEAR4><Month,2>') + Text003); //CR002

      FileName := (BudSysSetup."Actaul Data Sheet Path" +
                     BudSysSetup."Actaul Data Sheet Name Prefix" + Text003); //CR002
    END;

    PROCEDURE WriteHeader@1000000015();
    BEGIN
      //WSHTextStream.Write(Text004 + Tab + Text005 + Tab + Text006 + Tab + Text007 + Tab + Text008 + Tab + Text009 + FORMAT(CRLF));
    END;

    PROCEDURE CloseFile@1000000000();
    BEGIN
      F1.CLOSE;
    END;

    PROCEDURE GetYearMonth@1000000004(LocDate@1000000000 : Date);
    BEGIN

      Month := DATE2DMY(LocDate,2);
      IF Month < 10 THEN
        MonthText := FORMAT('0' + FORMAT(Month))
      ELSE
        MonthText := FORMAT(Month);
      Year := DATE2DMY(LocDate,3);
    END;

    PROCEDURE FormatDecimal@1000000008(Amount@1000000000 : Decimal) : Text[50];
    BEGIN
      EXIT(FORMAT(Amount,0,'<Precision,2><Standard Format,9>'));
    END;

    BEGIN
    {
      Date      Sign    Ref        Description
      18112012  NTN      Bud1.0  New Object Created.
      16122012  AY       New Function added and rectify the code.
      //UPG13R2DEV
      Excel Bufffer used in 2013 R2.New function created in Table-370 Excel Buffer.

      //CR002/VK/23-Dec-15/New Format & additional Information required by A1-Steer for Actual Data File.
    }
    END.
  }
  RDLDATA
  {
  }
}

