OBJECT Page 50052 Tax Invoice Generation
{
  OBJECT-PROPERTIES
  {
    Date=11/24/14;
    Time=18:40:38;
    Modified=Yes;
    Version List=YIMMRVATO,PPNPPHDEV;
  }
  PROPERTIES
  {
    Editable=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table50030;
    SourceTableView=SORTING(Tax Invoice Date,Source Type,Source No.)
                    ORDER(Ascending)
                    WHERE(TaxDocGen=CONST(No));
    PageType=Worksheet;
    OnOpenPage=BEGIN
                 //Update;

                 TaxDate:=GETFILTER("Tax Invoice Date");



                 //FILTERGROUP(2);
               END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000037;1 ;ActionGroup;
                      CaptionML=ENU=&Tax Invoice }
      { 1000000041;2 ;Action    ;
                      CaptionML=ENU=&Generate Tax Invoice;
                      Promoted=No;
                      Image=TaxDetail;
                      OnAction=BEGIN
                                 VATOUTDetails.RESET;
                                 VATOUTDetails.SETCURRENTKEY("Tax Invoice Date","Source Type","Source No.");
                                 VATOUTDetails:=Rec;
                                 VATOUTDetails.COPYFILTERS(Rec);



                                 IF VATOUTDetails.FIND('-') THEN
                                 REPEAT

                                    VatOut.RESET;
                                    VatOut.SETCURRENTKEY("Tax Invoice Date","Source Type","Source No.");
                                    VatOut.SETRANGE(VatOut.TaxDocGen,FALSE);

                                    VatOut.SETFILTER(VatOut."Tax Invoice Date",'<%1',VATOUTDetails."Tax Invoice Date");

                                           IF VatOut.FINDSET THEN
                                                  ERROR(Text001,"Tax Invoice Date",VatOut."Document No.",VatOut."Entry Type")
                                           ELSE
                                                BEGIN
                                                  IF (VATOUTDetails."Entry Type"="Entry Type"::Sale) THEN
                                                     BEGIN
                                                         IF SalesInvHeader.GET(VATOUTDetails."Document No.") THEN
                                                            TaxInvMgmt.GroupSalesTaxInvPosted(SalesInvHeader,FALSE,VATOUTDetails."Tax Invoice Date");
                                                              VATOUTDetails.TaxDocGen:=TRUE;
                                                     END;


                                                  IF (VATOUTDetails."Entry Type"="Entry Type"::Purchase) THEN
                                                     BEGIN
                                                         IF PurchCrMemoHeader.GET(VATOUTDetails."Document No.") THEN
                                                             TaxInvMgmt.GroupSalesTaxInvPostedCr(PurchCrMemoHeader,VATOUTDetails."Tax Invoice Date");
                                                              VATOUTDetails.TaxDocGen:=TRUE;
                                                     END;

                                                VATOUTDetails.MODIFY;
                                                END;

                                 UNTIL(VATOUTDetails.NEXT=0);

                                 //Update;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1000000035;1;Field  ;
                CaptionML=ENU=Tax Date;
                SourceExpr=TaxDate;
                OnValidate=BEGIN
                             IF AppMgmt.MakeDateFilter(TaxDate) = 0 THEN;
                             SETFILTER("Tax Invoice Date",TaxDate);
                             TaxDate := GETFILTER("Tax Invoice Date");
                               TaxDateOnAfterValidate;
                           END;
                            }

    { 1000000036;1;Field  ;
                CaptionML=ENU=Show Posted Tax Document;
                SourceExpr=TaxDocumentPosted }

    { 1000000038;1;Field  ;
                CaptionML=ENU=Show UnPosted Tax Document;
                SourceExpr=TaxDocumentUnposted }

    { 1000000000;1;Group  ;
                Editable=TRUE;
                GroupType=Repeater }

    { 1000000005;2;Field  ;
                SourceExpr="Posting Date";
                Editable=FALSE }

    { 1000000003;2;Field  ;
                SourceExpr="Document No.";
                Editable=FALSE }

    { 1000000013;2;Field  ;
                SourceExpr="Pre Assigned No.";
                Editable=FALSE }

    { 1000000009;2;Field  ;
                SourceExpr="Source No.";
                Editable=FALSE }

    { 1000000021;2;Field  ;
                SourceExpr="Tax Invoice Date" }

    { 1000000017;2;Field  ;
                SourceExpr=NPWP;
                Editable=TRUE }

    { 1102159001;2;Field  ;
                SourceExpr="PPH NPWP No." }

    { 1000000042;2;Field  ;
                SourceExpr="NPWP Name";
                Enabled=TRUE;
                Editable=TRUE }

    { 1000000044;2;Field  ;
                SourceExpr="NPWP Address";
                Editable=TRUE }

    { 1000000046;2;Field  ;
                SourceExpr="NPWP Address 2";
                Editable=TRUE }

    { 1000000048;2;Field  ;
                SourceExpr="NPWP City";
                Editable=TRUE }

    { 1000000023;2;Field  ;
                SourceExpr=Amount;
                Editable=FALSE }

    { 1000000025;2;Field  ;
                CaptionML=ENU=<Amount -VAT>;
                SourceExpr="Amount Incl VAT";
                Editable=FALSE }

    { 1000000001;2;Field  ;
                SourceExpr="Entry Type";
                Editable=FALSE }

    { 1000000007;2;Field  ;
                SourceExpr="Source Type";
                Editable=FALSE }

    { 1000000015;2;Field  ;
                SourceExpr="Reson Code";
                Editable=FALSE }

    { 1000000019;2;Field  ;
                Width=20;
                SourceExpr="Tax Invoice No.";
                Editable=FALSE }

    { 1000000011;2;Field  ;
                SourceExpr="Document Type";
                Editable=FALSE }

    { 1000000029;2;Field  ;
                SourceExpr="Currency Code";
                Editable=FALSE }

    { 1000000027;2;Field  ;
                SourceExpr=TaxDocGen;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      TaxDate@1000000000 : Text[30];
      TaxDocumentPosted@1000000001 : Boolean;
      TaxDocumentUnposted@1000000002 : Boolean;
      AppMgmt@1000000003 : Codeunit 1;
      VatOut@1000000004 : Record 50030;
      Text001@1000000005 : TextConst 'ENU=There is already a Entry before date %1 , With Document No %2 of %3';
      SalesInvHeader@1000000006 : Record 112;
      PurchCrMemoHeader@1000000007 : Record 124;
      TaxInvMgmt@1000000008 : Codeunit 28070;
      VATOUTDetails@1000000009 : Record 50030;

    PROCEDURE Update@1000000000();
    BEGIN
      IF TaxDate = '' THEN
        SETRANGE("Tax Invoice Date")
      ELSE
        SETFILTER("Tax Invoice Date",TaxDate);

      //FILTERGROUP(2);

      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE TaxDateOnAfterValidate@19006323();
    BEGIN
      Update;
    END;

    BEGIN
    {
      //YIMMAVATO
      1) NEW FORM IS DESIGNED TO MAP THE VAT OUT PROCESS
    }
    END.
  }
}

