OBJECT Table 50008 Master Setup
{
  OBJECT-PROPERTIES
  {
    Date=02/03/16;
    Time=17:48:25;
    Modified=Yes;
    Version List=YIMM-CONSOL,YEID1.0,Mel1.0,YNSPIRE1.2,CR#014,CR#018,CR#019,CR#022 ,CR#023,UPG13R2DEV,CR#003,CR001;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10         }
    { 2   ;   ;Interface File Path ;Code40         }
    { 3   ;   ;FA Sales Invoice    ;Code20         }
    { 4   ;   ;FA Disposal         ;Code20         }
    { 5   ;   ;FA Movement         ;Code20         }
    { 6   ;   ;FA Depreication     ;Code20         }
    { 7   ;   ;TMS Invoice         ;Code20         }
    { 8   ;   ;Imacs Sales Invoice ;Code20         }
    { 9   ;   ;Imacs Collection    ;Code20         }
    { 10  ;   ;Propac Sales Inv Dom;Code30         }
    { 11  ;   ;Propac Collection   ;Code20         }
    { 12  ;   ;Propac Sales Inv Exp;Code30         }
    { 13  ;   ;Propac Sales Ret    ;Code30         }
    { 14  ;   ;Eproc               ;Code20         }
    { 15  ;   ;HR Salary           ;Code20         }
    { 16  ;   ;HR Otm              ;Code20         }
    { 17  ;   ;HR Astek            ;Code20         }
    { 18  ;   ;HR Bonus            ;Code20         }
    { 19  ;   ;G-port Export       ;Code20         }
    { 20  ;   ;G-port Import       ;Code20         }
    { 21  ;   ;Imacs Selling IN    ;Code20         }
    { 22  ;   ;Imacs Collection Batch;Code10       }
    { 23  ;   ;Propac Collection Batch;Code10      }
    { 24  ;   ;Propac Tax Period   ;DateFormula    }
    { 25  ;   ;FA Template Name    ;Code10        ;TableRelation="Gen. Journal Template";
                                                   CaptionML=ENU=FA Template Name }
    { 26  ;   ;FA Batch Disposal   ;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(FA Template Name));
                                                   CaptionML=ENU=FA Batch Disposal }
    { 27  ;   ;FA Batch Depreication;Code10       ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(FA Template Name));
                                                   CaptionML=ENU=FA Batch Depreication }
    { 28  ;   ;FA Batch Movement   ;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(FA Template Name));
                                                   CaptionML=ENU=FA Batch Movement }
    { 29  ;   ;FA Batch Sales      ;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(FA Template Name));
                                                   CaptionML=ENU=FA Batch Sales }
    { 30  ;   ;HR Template Name    ;Code10        ;TableRelation="Gen. Journal Template";
                                                   CaptionML=ENU=HR Template Name }
    { 31  ;   ;HR Batch Salary     ;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(HR Template Name));
                                                   CaptionML=ENU=HR Batch Salary }
    { 32  ;   ;HR Batch Bonus      ;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(HR Template Name));
                                                   CaptionML=ENU=HR Batch Bonus }
    { 33  ;   ;HR Batch Astek      ;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(HR Template Name));
                                                   CaptionML=ENU=HR Batch Astek }
    { 34  ;   ;HR Batch Otm        ;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(HR Template Name));
                                                   CaptionML=ENU=HR Batch Otm }
    { 35  ;   ;Eproc Nos.          ;Code20        ;TableRelation="No. Series".Code }
    { 36  ;   ;Eproc Template Name ;Code10        ;TableRelation="Gen. Journal Template" }
    { 37  ;   ;Eproc Batch Name    ;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(Eproc Template Name)) }
    { 38  ;   ;Source Code         ;Code10        ;TableRelation="Source Code".Code }
    { 39  ;   ;FA Sales GJNL       ;Code20         }
    { 40  ;   ;Selling In Nos      ;Code20        ;TableRelation="No. Series".Code }
    { 41  ;   ;VAT Prod. Posting Gr;Code10        ;TableRelation="VAT Product Posting Group".Code }
    { 42  ;   ;Reason (Purchase as Sale);Code10   ;TableRelation="Reason Code".Code }
    { 43  ;   ;Reason (Sale as Purchase);Code10   ;TableRelation="Reason Code".Code }
    { 44  ;   ;IMACS_Intrest_Deposit;Code20        }
    { 45  ;   ;Slip Nos.           ;Code20        ;TableRelation="No. Series".Code;
                                                   Description=YIMMASL }
    { 46  ;   ;Gjnl Template       ;Code10        ;TableRelation="Gen. Journal Template".Name;
                                                   Description=YIMMASL }
    { 47  ;   ;Gjnl Batch          ;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(Gjnl Template));
                                                   Description=YIMMASL }
    { 48  ;   ;Payment Template    ;Code10        ;TableRelation="Gen. Journal Template".Name;
                                                   Description=YIMMASL }
    { 49  ;   ;Receipt Template    ;Code10        ;TableRelation="Gen. Journal Template".Name;
                                                   Description=YIMMASL }
    { 50  ;   ;Payment Batch       ;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(Payment Template));
                                                   Description=YIMMASL }
    { 51  ;   ;Receipt Batch       ;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(Receipt Template));
                                                   Description=YIMMASL }
    { 52  ;   ;Domestic_Bus_Posting_Group;Code10  ;TableRelation="Gen. Business Posting Group".Code;
                                                   Description=YIMMRBRTR }
    { 53  ;   ;Foreign_Bus_Posting_Group;Code10   ;TableRelation="Gen. Business Posting Group".Code;
                                                   Description=YIMMRBRTR }
    { 54  ;   ;Reason (Normal)     ;Code10        ;TableRelation="Reason Code".Code }
    { 55  ;   ;Default GPPG        ;Code10        ;TableRelation="Gen. Product Posting Group".Code }
    { 56  ;   ;G-Port Batch In-Transit;Code10     ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(G-Port Template Name));
                                                   Description=GInv1.0 }
    { 57  ;   ;G-Port No. Series Export;Code10    ;TableRelation="No. Series";
                                                   Description=GExp1.0 }
    { 58  ;   ;G-Port No. Series Import;Code10    ;TableRelation="No. Series";
                                                   Description=GImp1.0 }
    { 59  ;   ;G-Port In-Transit   ;Code20        ;Description=GInv1.0 }
    { 60  ;   ;G-Port Template Name;Code10        ;TableRelation="Gen. Journal Template";
                                                   Description=GInv1.0 }
    { 61  ;   ;Imacs Selling Out   ;Code20        ;Description=SIIO }
    { 62  ;   ;Slip Nos. HR        ;Code20        ;TableRelation="No. Series".Code;
                                                   Description=YIMMACH }
    { 63  ;   ;Slip Nos. FA        ;Code20        ;TableRelation="No. Series".Code;
                                                   Description=YIMMACH }
    { 64  ;   ;Slip Nos. Eproc     ;Code20        ;TableRelation="No. Series".Code;
                                                   Description=YIMMACH }
    { 65  ;   ;Slip Nos. Payment   ;Code20        ;TableRelation="No. Series".Code;
                                                   Description=YIMMACH }
    { 66  ;   ;Slip Nos. Receipt   ;Code20        ;TableRelation="No. Series".Code;
                                                   Description=YIMMACH }
    { 67  ;   ;WHT Prod. MC(%)     ;Decimal       ;Description=YIMMACH }
    { 68  ;   ;WHT Prod. MC Npwp(%);Decimal       ;Description=YIMMACH }
    { 69  ;   ;WHT Prod. SI        ;Code10        ;TableRelation="WHT Product Posting Group".Code;
                                                   Description=YIMMACH For Corporate local }
    { 70  ;   ;WHT Prod. SI Npwp   ;Code10        ;TableRelation="WHT Product Posting Group".Code;
                                                   Description=YIMMACH For Corporate local }
    { 71  ;   ;WHT Prod. SO        ;Code10        ;TableRelation="WHT Product Posting Group".Code;
                                                   Description=YIMMACH For Corporate local }
    { 72  ;   ;WHT Prod. SO Npwp   ;Code10        ;TableRelation="WHT Product Posting Group".Code;
                                                   Description=YIMMACH For Corporate local }
    { 73  ;   ;WHT Prod. Int       ;Code10        ;TableRelation="WHT Product Posting Group".Code;
                                                   Description=YIMMACH }
    { 74  ;   ;WHT Prod. Int Npwp  ;Code10        ;TableRelation="WHT Product Posting Group".Code;
                                                   Description=YIMMACH }
    { 75  ;   ;Selling In Dim      ;Code10        ;TableRelation="Dimension Value".Code WHERE (Dimension Code=CONST(SELLING EXPENSES));
                                                   Description=YIMMACH }
    { 76  ;   ;Selling Out Dim     ;Code10        ;TableRelation="Dimension Value".Code WHERE (Dimension Code=CONST(SELLING EXPENSES));
                                                   Description=YIMMACH }
    { 77  ;   ;WHT Buss. for Selling Inc;Code10   ;TableRelation="WHT Business Posting Group".Code;
                                                   Description=YIMMACH }
    { 78  ;   ;C&B Nos.            ;Code20        ;TableRelation="No. Series".Code;
                                                   Description=YIMMACH }
    { 79  ;   ;CB Template         ;Code10        ;TableRelation="Gen. Journal Template".Name;
                                                   Description=YIMMACH }
    { 80  ;   ;CB Batch            ;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(CB Template));
                                                   Description=YIMMACH }
    { 81  ;   ;WHT Account For MC  ;Code20        ;TableRelation="G/L Account".No.;
                                                   Description=YIMMACH }
    { 82  ;   ;Current Forecast I  ;Code10        ;TableRelation="G/L Budget Name";
                                                   OnValidate=BEGIN
                                                                BudgetName.RESET;
                                                                IF BudgetName.GET("Current Forecast I") THEN
                                                                  BEGIN
                                                                  BudgetName.VALIDATE(BudgetName."Currently Used Budget",TRUE);
                                                                  BudgetName.MODIFY;
                                                                  END;
                                                              END;

                                                   Description=YIMMBudget }
    { 83  ;   ;Current Revised     ;Code10        ;TableRelation="G/L Budget Name";
                                                   OnValidate=BEGIN
                                                                BudgetName.RESET;
                                                                IF BudgetName.GET("Current Revised") THEN
                                                                  BEGIN
                                                                  BudgetName.VALIDATE(BudgetName."Currently Used Budget",TRUE);
                                                                  BudgetName.MODIFY;
                                                                  END;
                                                              END;

                                                   Description=YIMMBudget }
    { 84  ;   ;Current Forecast II ;Code10        ;TableRelation="G/L Budget Name";
                                                   OnValidate=BEGIN
                                                                BudgetName.RESET;
                                                                IF BudgetName.GET("Current Forecast II") THEN
                                                                  BEGIN
                                                                  BudgetName.VALIDATE(BudgetName."Currently Used Budget",TRUE);
                                                                  BudgetName.MODIFY;
                                                                  END;
                                                              END;

                                                   Description=YIMMBudget }
    { 85  ;   ;Current Original Budget;Code10     ;TableRelation="G/L Budget Name";
                                                   OnValidate=BEGIN
                                                                BudgetName.RESET;
                                                                IF BudgetName.GET("Current Original Budget") THEN
                                                                  BEGIN
                                                                  BudgetName.VALIDATE(BudgetName."Currently Used Budget",TRUE);
                                                                  BudgetName.MODIFY;
                                                                  END;
                                                              END;

                                                   Description=YIMMBudget }
    { 86  ;   ;Budget Import File Name;Code10     ;Description=YIMMBudget }
    { 87  ;   ;Grace Period for WHT Closing;Integer;
                                                   Description=YIMMWHT Expiry Date Grace Period }
    { 88  ;   ;TMS Model Dimension ;Code10        ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2)) }
    { 89  ;   ;TMS Selling Ex Dimension;Code10    ;TableRelation="Dimension Value".Code WHERE (Dimension Code=CONST(SELLING EXPENSES)) }
    { 90  ;   ;Budget Closing Grace Days;Integer   }
    { 91  ;   ;Company Name YMKI   ;Code250       ;TableRelation=Company.Name;
                                                   Description=For Company name of YMKI for field visibility on forms }
    { 92  ;   ;Company Name YMMWJ  ;Code250       ;TableRelation=Company.Name;
                                                   Description=For Company name of YMMWJ for field visibility on forms }
    { 93  ;   ;FA Template         ;Code10        ;TableRelation="Gen. Journal Template".Name;
                                                   Description=added for FA at YMKI }
    { 94  ;   ;FA Batch            ;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(FA Template));
                                                   Description=added for FA at YMKI }
    { 95  ;   ;Office EqExp Account;Code20        ;Description=Office Equipment Account }
    { 96  ;   ;Closing template    ;Code20        ;TableRelation="Gen. Journal Template".Name;
                                                   Description=Template for closing Entries }
    { 97  ;   ;Closing Batch       ;Code20        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(Closing template));
                                                   Description=Batch For Closing Entries }
    { 98  ;   ;ForCust             ;Code20        ;TableRelation="No. Series".Code;
                                                   Description=For Foreign Customer Global No Series }
    { 99  ;   ;LocalCust           ;Code20        ;TableRelation="No. Series".Code;
                                                   Description=For Local Customer Global No Series }
    { 100 ;   ;ForVend             ;Code20        ;TableRelation="No. Series".Code;
                                                   Description=For Foreign Vendor Global No Series }
    { 101 ;   ;LocalVend           ;Code20        ;TableRelation="No. Series".Code;
                                                   Description=For Local Vendor Global No Series }
    { 102 ;   ;DefaultDimForAdmExp ;Code20        ;Description=For YMKI HR I/F }
    { 103 ;   ;G-Port Import UID   ;Code50        ;TableRelation="User Setup"."User ID";
                                                   Description=GInv1.0,UPG13R2DEV }
    { 104 ;   ;PIC of PROPAC Export;Code50        ;TableRelation="User Setup"."User ID";
                                                   Description=UPG13R2DEV }
    { 1001;   ;Company Name TBI    ;Code250       ;TableRelation=Company.Name;
                                                   Description=For Company name of TBI for field visibility on forms }
    { 1002;   ;HR Medical          ;Code20        ;Description=TBI HR interface }
    { 1003;   ;HR THR              ;Code20        ;Description=TBI HR interface }
    { 1004;   ;HR Batch Medical    ;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(HR Template Name));
                                                   Description=TBI HR interface }
    { 1005;   ;HR Batch THR        ;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE (Journal Template Name=FIELD(HR Template Name));
                                                   Description=TBI HR interface }
    { 1006;   ;AccPac Purchase     ;Code20        ;Description=TBI AccPac interface }
    { 1007;   ;AccPac Purch. Return;Code20        ;Description=TBI AccPac interface }
    { 1011;   ;AccPac Interface UID;Code10        ;TableRelation=User.State;
                                                   Description=TBI AccPac interface }
    { 1012;   ;Elimination Template;Code20        ;TableRelation="Gen. Journal Template".Name;
                                                   Description=YIMM-Consol-SM }
    { 1013;   ;Elimination Batch   ;Code20        ;TableRelation="Gen. Journal Batch".Name;
                                                   Description=YIMM-Consol-SM }
    { 1014;   ;YMKI Code           ;Code20        ;TableRelation=Vendor.No.;
                                                   Description=YIMM-Consol-SM }
    { 1015;   ;YMWJ Code           ;Code20        ;TableRelation=Vendor.No.;
                                                   Description=YIMM-Consol-SM }
    { 1016;   ;YIMM Code           ;Code20        ;TableRelation=Customer.No.;
                                                   Description=YIMM-Consol-SM }
    { 1017;   ;Company Name YIMM   ;Code250       ;TableRelation=Company.Name;
                                                   Description=YIMM-Consol-SM }
    { 1018;   ;Consol Diff AMT     ;Decimal        }
    { 1019;   ;BudgetSellDimFilter-1;Code50       ;Description=For Budget Data Elimination }
    { 1020;   ;BudgetSellDimFilter-2;Code50       ;Description=For Budget Data Elimination }
    { 1021;   ;Company Name YIMM Consol;Code30    ;TableRelation=Company.Name;
                                                   Description=For YIMM Consol }
    { 1022;   ;Rev Template        ;Code20        ;TableRelation="Gen. Journal Template".Name;
                                                   Description=YIMM-Consol-SM }
    { 1023;   ;Rev Batch           ;Code20        ;TableRelation="Gen. Journal Batch".Name;
                                                   Description=YIMM-Consol-SM }
    { 1024;   ;Check               ;Boolean        }
    { 1025;   ;Company Name YEID   ;Code150       ;TableRelation=Company.Name;
                                                   Description=For Company name of YEID for field visibility on forms }
    { 1026;   ;Company Name MELCO  ;Code150       ;TableRelation=Company.Name;
                                                   Description=For Company name of MELCO for field visibility on forms }
    { 1027;   ;DIAS Indirect       ;Code200       ;Description=FOR YEID COMPANY_ INTERFACE WITH DIAS FOR INDIRECT }
    { 1028;   ;DIAS INDR BATCH     ;Code20        ;Description=FOR YEID COMPANY_ INTERFACE WITH DIAS FOR INDIRECT }
    { 1029;   ;Slip Nos. DIAS      ;Code20        ;TableRelation="No. Series".Code;
                                                   Description=FOR YEID COMPANY_ INTERFACE WITH DIAS FOR INDIRECT }
    { 1030;   ;YNSPIRE Input File  ;Code20        ;Description=YNSPIRE }
    { 1031;   ;YNSPIRE User ID     ;Code50        ;TableRelation="User Setup"."User ID";
                                                   Description=YNSPIRE,UPG13R2DEV }
    { 1032;   ;YNSPIRE Area Code   ;Code20        ;TableRelation="AREA CODE".No;
                                                   Description=YNSPIRE }
    { 1036;   ;YNSPIRE Posting Group;Code10       ;TableRelation="Customer Posting Group".Code WHERE (Reason Code=CONST(SALRT));
                                                   Description=YNSPIRE }
    { 1037;   ;Slip Nos YNSPIRE    ;Code20        ;TableRelation="No. Series".Code;
                                                   Description=YNSPIRE1.1 }
    { 1039;   ;WHT Prod. YNSPIRE   ;Code10        ;TableRelation="WHT Product Posting Group".Code;
                                                   Description=YNSPIRE1.2 }
    { 1040;   ;WHT Prod. YNSPIRE Npwp;Code10      ;TableRelation="WHT Product Posting Group".Code;
                                                   Description=YNSPIRE1.2 }
    { 1041;   ;Company Name YMNI   ;Code80         }
    { 1101;   ;Enable New Tax Inv. No. Rule;Boolean;
                                                   Description=Enable New Tax Invoice No. Series Rule CR#014 }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Doc_No@1000000014 : Code[20];
      Doc_No1@1000000020 : Code[20];
      Doc_No2@1000000027 : Code[20];
      Cust_id@1000000013 : Code[20];
      Trans_date@1000000012 : Date;
      Trans_date1@1000000024 : Date;
      Trans_date2@1000000029 : Date;
      Inv_date@1000000011 : Date;
      Ext_No@1000000010 : Code[20];
      NPWP_No@1000000009 : Code[20];
      Due_date@1000000008 : Date;
      dim1@1000000007 : Code[10];
      dim2@1000000006 : Code[10];
      Curr_Code@1000000005 : Code[10];
      Curr_Code1@1000000023 : Code[10];
      Curr_Code2@1000000031 : Code[10];
      Tax_date@1000000004 : Date;
      "G/L_Account"@1000000003 : Code[20];
      "G/L_Account1"@1000000021 : Code[20];
      Amount@1000000002 : Decimal;
      Amount1@1000000022 : Decimal;
      Amount2@1000000033 : Decimal;
      Vat@1000000001 : Boolean;
      Bl_date@1000000000 : Date;
      Bl_date1@1000000025 : Date;
      Line_No@1000000015 : Integer;
      Account_Type@1000000016 : 'G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner';
      Dr_Amt@1000000017 : Decimal;
      Cr_Amt@1000000018 : Decimal;
      Dim3@1000000019 : Code[30];
      Line_No1@1000000026 : Integer;
      Account_No@1000000028 : Code[20];
      Cheno@1000000030 : Code[20];
      RecDate@1000000032 : Date;
      Bank@1000000034 : Code[20];
      Description@1000000035 : Code[50];
      Narration@1000000036 : Code[250];
      wht_areacode@1000000037 : Code[10];
      Applies_To@1000000040 : Code[20];
      VAT_Prod_Check@1000000039 : Boolean;
      VAT_Buss@1000000038 : Code[10];
      BudgetName@1000000041 : Record 95;
      YNSPIRE_interface@1000000042 : Record 50043;
      YNSPIREaccount@1000000043 : Record 50058;

    PROCEDURE Lastdate@1000000000(Month@1000000000 : Integer;Year@1000000001 : Integer) "Final Date" : Date;
    VAR
      NextMon@1000000005 : Integer;
    BEGIN
      NextMon := Month + 1;
      IF NextMon > 12 THEN BEGIN
        NextMon := 1;
        Year := Year+1;
      END;
      "Final Date" := CALCDATE('CM',DMY2DATE(1,NextMon,Year));
      EXIT("Final Date");
    END;

    PROCEDURE UploadData@1000000001(FilePathNAme@1000000000 : Text[1024];SalesType@1000000001 : ' ,Selling In,Selling Out,Direct,Indirect,Warranty,Free Service,Claim,Intrest,Sharing,Import,FA,Others,Imacs,Propac,Gport,TMS,Prtn,Prppac Ex.,Imacs-ATV,Imacs-Generator,Imacs-CBU');
    VAR
      F@1000000002 : File;
      Instreamobj@1000000003 : InStream;
      Sales_interface@1000000004 : Record 50009;
      Entry_No@1000000005 : Integer;
      B@1000000006 : Text[50];
      GenLed_Setup@1000000007 : Record 98;
      Dim_Value@1000000008 : Record 349;
      Master_Setup@1000000009 : Record 50008;
      Sales_interface2@1102159002 : Record 50009;
      RecNo@1102159001 : Integer;
      LocalRecIFDimMapSetup@1000000010 : Record 60066;
      LocalRecIFDimMap@1000000011 : Record 60065;
    BEGIN

      F.OPEN(FilePathNAme);
      F.CREATEINSTREAM(Instreamobj);

      Sales_interface.RESET;
      IF Sales_interface.FINDLAST THEN
        Entry_No := Sales_interface."Entry No." + 1
      ELSE
        Entry_No := 1;

      CLEAR(Sales_interface);

      WHILE NOT Instreamobj.EOS DO BEGIN
        //Sales_interface.RESET; //02122013/VK/CR#022
        Sales_interface.INIT; //02122013/VK/CR#022
        Sales_interface."Entry No." := Entry_No;
        Sales_interface.INSERT;

        Instreamobj.READTEXT(B,20);
        EVALUATE(Doc_No,B);
        Sales_interface."No." := Doc_No;

        //Sales_interface."Sales Type" := SalesType; //31072013/VK/CR#018-Code Commented

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,20);
        EVALUATE(Cust_id,B);
        Sales_interface."Dealer Code" := Cust_id;

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,11);
        EVALUATE(Trans_date,B);
        Sales_interface."Transaction Date" := Trans_date;

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,11);
        EVALUATE(Inv_date,B);
        Sales_interface."Invoice Date" := Inv_date;

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,20);
        EVALUATE(Ext_No,B);
        Sales_interface."Ext.Doc.No." := Ext_No;

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,20);
        EVALUATE(NPWP_No,B);
        Sales_interface."Npwp no." := NPWP_No;

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,11);
        EVALUATE(Due_date,B);
        Sales_interface."Due Date" := Due_date;
        //Dimension value new concept.start>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        // Dimension new concept. previous code blocked
        {
        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,10);
        EVALUATE(dim1,B);
        IF dim1 <> '' THEN
         BEGIN
          GenLed_Setup.GET;
          Dim_Value.RESET;
          Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Global Dimension 1 Code");
          Dim_Value.SETRANGE(Dim_Value.Name,dim1);
          IF Dim_Value.FINDFIRST THEN
          Sales_interface."Shortcut Dimension 1 Code" :=Dim_Value.Code ;
         END;
        } // Dimension new concept. previous code blocked
        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,10);
        EVALUATE(dim1,B);
        IF dim1 <> '' THEN BEGIN
          LocalRecIFDimMapSetup.GET;
          IF LocalRecIFDimMapSetup.IMACS THEN BEGIN
            Sales_interface."Shortcut Dimension 1 Code" := GetDim1Value(dim1);
          END ELSE BEGIN
            GenLed_Setup.GET;
            Dim_Value.RESET;
            Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Global Dimension 1 Code");
            Dim_Value.SETRANGE(Dim_Value.Name,dim1);
            IF Dim_Value.FINDFIRST THEN
              Sales_interface."Shortcut Dimension 1 Code" :=Dim_Value.Code ;
          END;
        END;

        //Dimension value new concept.end<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,10);
        EVALUATE(dim2,B);

      //Code Dump Due to Not Require the Model Code in TMS Interface\

      IF (FilePathNAme<>Master_Setup."Interface File Path" + '\' + Master_Setup."TMS Invoice") THEN
      BEGIN

        IF dim2 <> '' THEN
         BEGIN
          GenLed_Setup.GET;
          Dim_Value.RESET;
          Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Global Dimension 2 Code");
          Dim_Value.SETRANGE(Dim_Value.Name,dim2);
          IF Dim_Value.FINDFIRST THEN
          Sales_interface."Shortcut Dimension 2 Code" :=Dim_Value.Code ;
         END;

      END;


      //Code Dump Due to Not Require the Model Code in TMS Interface

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,10);
        EVALUATE(Curr_Code,B);
        Sales_interface.Currency := Curr_Code;

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,11);
        EVALUATE(Tax_date,B);
        Sales_interface."Tax Invoice Date" := Tax_date;

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,20);
        EVALUATE("G/L_Account",B);
        Sales_interface."Account No." := "G/L_Account";

        //>>31072013/VK/CR#018
        Master_Setup.GET;
        IF (FilePathNAme=Master_Setup."Interface File Path" + '\' + Master_Setup."Imacs Sales Invoice") THEN
        BEGIN
          IF "G/L_Account"='4111000001' THEN
              Sales_interface."Sales Type":=Sales_interface."Sales Type"::Imacs
          ELSE IF "G/L_Account"='4411000001' THEN
              Sales_interface."Sales Type":=Sales_interface."Sales Type"::"Imacs-ATV"
          ELSE IF "G/L_Account"='4411000002' THEN
              Sales_interface."Sales Type":=Sales_interface."Sales Type"::"Imacs-Generator"
          ELSE IF "G/L_Account"='4111000002' THEN                         //14012014/VK/CR#023
              Sales_interface."Sales Type":=Sales_interface."Sales Type"::"Imacs-CBU"
          //>>02122013/VK/CR#022
          ELSE
              BEGIN
                Sales_interface2.RESET;
                CLEAR(RecNo);
                RecNo := Sales_interface."Entry No." -1;
                Sales_interface2.SETRANGE(Sales_interface2."Entry No.",RecNo);
                IF Sales_interface2.FINDFIRST THEN
                  Sales_interface."Sales Type":= Sales_interface2."Sales Type";
              END;
          //<<02122013/VK/CR#022
        END
        ELSE
          Sales_interface."Sales Type":=SalesType;
        //<<31072013/VK/CR#018

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,20);
        EVALUATE(Amount,B);
        Sales_interface.Amount := Amount;

      //Insert Narration

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,50);
        EVALUATE(Narration,B);
        Sales_interface.Narration := Narration;


        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,3);
        EVALUATE(Vat,B);
        Sales_interface."VAT Required" := Vat;

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,11);
        EVALUATE(Bl_date,B);
        Sales_interface."B/L Date" := Bl_date;

        //>> 01122014/SV/CR#003
        IF (SalesType = SalesType::TMS)  THEN BEGIN
          Instreamobj.READTEXT(B,1);
          Instreamobj.READTEXT(B,4);
          EVALUATE(wht_areacode,B);
          Sales_interface."WHT Area Code" := wht_areacode;
        END ELSE BEGIN
          Instreamobj.READTEXT(B,1);
          Instreamobj.READTEXT(B,10);
          EVALUATE(wht_areacode,B);
          Sales_interface."WHT Area Code" := wht_areacode;
        END;
        //<< 01122014/SV/CR#003

      //dimension value new concept.start>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
      {
      //>>02122013/VK/CR#022
        Master_Setup.GET;
        IF (FilePathNAme=Master_Setup."Interface File Path" + '\' + Master_Setup."Imacs Sales Invoice") THEN BEGIN
          Instreamobj.READTEXT(B,1);
          Instreamobj.READTEXT(B,20);
          EVALUATE(Dim3,B);
          IF Dim3 <> '' THEN BEGIN
            GenLed_Setup.GET;
            Dim_Value.RESET;
            Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Shortcut Dimension 3 Code");
            Dim_Value.SETRANGE(Dim_Value.Name,Dim3);
            IF Dim_Value.FINDFIRST THEN
              Sales_interface."Shortcut Dimension 3 Code" := Dim_Value.Code;
          END;
        END;
      //<<02122013/VK/CR#022
      }//dimension value new concept.previous code blocked
        Master_Setup.GET;
        IF (FilePathNAme=Master_Setup."Interface File Path" + '\' + Master_Setup."Imacs Sales Invoice") THEN BEGIN
          Instreamobj.READTEXT(B,1);
          Instreamobj.READTEXT(B,20);
          EVALUATE(Dim3,B);
          IF Dim3 <> '' THEN BEGIN
            LocalRecIFDimMapSetup.GET;
            IF LocalRecIFDimMapSetup.IMACS THEN
              Sales_interface."Shortcut Dimension 3 Code" := GetDim3Value(Dim3)
            ELSE BEGIN
              GenLed_Setup.GET;
              Dim_Value.RESET;
              Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Shortcut Dimension 3 Code");
              Dim_Value.SETRANGE(Dim_Value.Name,Dim3);
              IF Dim_Value.FINDFIRST THEN
                Sales_interface."Shortcut Dimension 3 Code" := Dim_Value.Code;
            END;
          END;
        END;


      //dimension value new concept.end<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        Sales_interface."Interface Date" := WORKDATE;


        Entry_No := Entry_No +1;
        Sales_interface.MODIFY;
        Instreamobj.READTEXT(B,1);
      END;
    END;

    PROCEDURE UploadDataGl@1000000002(FilePathNAme1@1000000006 : Text[1024];Template@1000000005 : Code[10];Batch@1000000007 : Code[10]);
    VAR
      F1@1000000004 : File;
      Instreamobj1@1000000003 : InStream;
      Gl_Interface@1000000002 : Record 50010;
      Entry_No1@1000000001 : Integer;
      B1@1000000000 : Text[250];
      GenLed_Setup@1000000008 : Record 98;
      Dim_Value@1000000009 : Record 349;
      LocalRecIFDimMapSetup@1000000010 : Record 60066;
      LocalRecIFDimMap@1000000011 : Record 60065;
      LocalRecMasterSetup@1000000012 : Record 50008;
      Master_Setup@1000000013 : Record 50008;
      LocalRecMasterSetupII@1000000014 : Record 60053;
    BEGIN
      Master_Setup.GET;
      LocalRecMasterSetupII.GET;
      F1.OPEN(FilePathNAme1);
      F1.CREATEINSTREAM(Instreamobj1);

      Gl_Interface.RESET;
      IF Gl_Interface.FINDLAST THEN
        Entry_No1 := Gl_Interface."Entry No." + 1
      ELSE
        Entry_No1 := 1;

      CLEAR(Gl_Interface);

      WHILE NOT Instreamobj1.EOS DO BEGIN
        Gl_Interface.RESET;
        Gl_Interface."Entry No." := Entry_No1;
        Gl_Interface.INSERT;

        Instreamobj1.READTEXT(B1,20);
        EVALUATE(Doc_No1,B1);
        Gl_Interface.No := Doc_No1;

        Gl_Interface."Template Name" := Template;
        Gl_Interface."Batch Name" := Batch;

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,10);
        EVALUATE(Line_No,B1);
        Gl_Interface."Line No." := Line_No;

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,20);
        IF B1 = 'BANK                ' THEN      //UPG13R2DEV
          B1 := 'Bank Account        ';  //UPG13R2DEV
        EVALUATE(Account_Type,B1);
        Gl_Interface."Account Type" := Account_Type;

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,20);
        EVALUATE("G/L_Account1",B1);
        Gl_Interface."Account No." := "G/L_Account1";

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,20);
        EVALUATE(Dr_Amt,B1);
        Gl_Interface.VALIDATE(Gl_Interface."Debit Amount",Dr_Amt);

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,20);
        EVALUATE(Cr_Amt,B1);
        Gl_Interface.VALIDATE(Gl_Interface."Credit Amount",Cr_Amt);
        //Dimension value new concept.start>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        {
        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,10);
        EVALUATE(dim1,B1);
        IF dim1 <> '' THEN
         BEGIN
          GenLed_Setup.GET;
          Dim_Value.RESET;
          Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Global Dimension 1 Code");
          Dim_Value.SETRANGE(Dim_Value.Name,dim1);
          IF Dim_Value.FINDFIRST THEN
          Gl_Interface."Shortcut Dimension 1" :=Dim_Value.Code ;
          Dim_Value.RESET;
         END
        ELSE
          Gl_Interface."Shortcut Dimension 1" :='';
        }//Dimension value new concept. previous code blocked
        LocalRecMasterSetup.GET;
        IF (FilePathNAme1 IN
            [Master_Setup."Interface File Path" + '\' + LocalRecMasterSetup."HR Salary",
             Master_Setup."Interface File Path" + '\' + LocalRecMasterSetup."HR Otm",
             {Master_Setup."Interface File Path" + '\' + LocalRecMasterSetup."HR Medical",}
             Master_Setup."Interface File Path" + '\' + LocalRecMasterSetup."HR Astek",
             Master_Setup."Interface File Path" + '\' + LocalRecMasterSetup."HR Bonus",
             Master_Setup."Interface File Path" + '\' + LocalRecMasterSetupII."HR Salary WJ",     //CR001
             Master_Setup."Interface File Path" + '\' + LocalRecMasterSetupII."HR Over Time WJ",  //CR001
             Master_Setup."Interface File Path" + '\' + LocalRecMasterSetupII."HR Astek WJ",      //CR001
             Master_Setup."Interface File Path" + '\' + LocalRecMasterSetupII."HR Bonus WJ",      //CR001
             Master_Setup."Interface File Path" + '\' + LocalRecMasterSetupII."HR Medical WJ",    //CR001
             Master_Setup."Interface File Path" + '\' + LocalRecMasterSetupII."HR Medical YIMM"   //CR001
            ])
        THEN BEGIN
          Instreamobj1.READTEXT(B1,1);
          Instreamobj1.READTEXT(B1,10);
          EVALUATE(dim1,B1);
          IF dim1 <> '' THEN BEGIN
            LocalRecIFDimMapSetup.GET;
            IF LocalRecIFDimMapSetup."A1 SMART(HR)" THEN
              Gl_Interface."Shortcut Dimension 1" := GetDim1Value(dim1)
            ELSE BEGIN
              GenLed_Setup.GET;
              Dim_Value.RESET;
              Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Global Dimension 1 Code");
              Dim_Value.SETRANGE(Dim_Value.Name,dim1);
              IF Dim_Value.FINDFIRST THEN
                Gl_Interface."Shortcut Dimension 1" :=Dim_Value.Code ;
              Dim_Value.RESET;
            END;
          END ELSE
            Gl_Interface."Shortcut Dimension 1" :='';
        END;

        IF (FilePathNAme1 IN [Master_Setup."Interface File Path" + '\' + LocalRecMasterSetup."FA Disposal", Master_Setup."Interface File Path" + '\' +
          LocalRecMasterSetup."FA Movement", Master_Setup."Interface File Path" + '\' + LocalRecMasterSetup."FA Depreication"] )
        THEN BEGIN
          Instreamobj1.READTEXT(B1,1);
          Instreamobj1.READTEXT(B1,10);
          EVALUATE(dim1,B1);
          IF dim1 <> '' THEN BEGIN
            IF LocalRecIFDimMapSetup.GET THEN;
            IF LocalRecIFDimMapSetup.FA THEN
              Gl_Interface."Shortcut Dimension 1" := GetDim1Value(dim1)
            ELSE BEGIN
              GenLed_Setup.GET;
              Dim_Value.RESET;
              Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Global Dimension 1 Code");
              Dim_Value.SETRANGE(Dim_Value.Name,dim1);
              IF Dim_Value.FINDFIRST THEN
                Gl_Interface."Shortcut Dimension 1" :=Dim_Value.Code ;
              Dim_Value.RESET;
            END;
          END ELSE
            Gl_Interface."Shortcut Dimension 1" :='';
        END;
        //Dimension value new concept.end<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,10);
        EVALUATE(dim2,B1);
        IF dim2 <> '' THEN
         BEGIN
          GenLed_Setup.GET;
          Dim_Value.RESET;
          Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Global Dimension 2 Code");
          Dim_Value.SETRANGE(Dim_Value.Name,dim2);
          IF Dim_Value.FINDFIRST THEN
          Gl_Interface."Shortcut Dimension 2" :=Dim_Value.Code ;
          Dim_Value.RESET;
         END;


        //Dimension value new concept.start>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        {
        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,10);
        EVALUATE(Dim3,B1);
        IF Dim3 <> '' THEN
         BEGIN
          GenLed_Setup.GET;
          Dim_Value.RESET;
          Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Shortcut Dimension 3 Code");
          Dim_Value.SETRANGE(Dim_Value.Name,Dim3);
          IF Dim_Value.FINDFIRST THEN
          Gl_Interface."Shortcut Dimension 3" :=Dim_Value.Code ;
         END;
        }
        IF (FilePathNAme1 IN
           [Master_Setup."Interface File Path" + '\' + LocalRecMasterSetup."HR Salary",
            Master_Setup."Interface File Path" + '\' + LocalRecMasterSetup."HR Otm",
            Master_Setup."Interface File Path" + '\' + LocalRecMasterSetup."HR Astek",
            Master_Setup."Interface File Path" + '\' + LocalRecMasterSetup."HR Bonus",
            Master_Setup."Interface File Path" + '\' + LocalRecMasterSetupII."HR Salary WJ",      //CR001
            Master_Setup."Interface File Path" + '\' + LocalRecMasterSetupII."HR Over Time WJ",   //CR001
            Master_Setup."Interface File Path" + '\' + LocalRecMasterSetupII."HR Astek WJ",       //CR001
            Master_Setup."Interface File Path" + '\' + LocalRecMasterSetupII."HR Bonus WJ",       //CR001
            Master_Setup."Interface File Path" + '\' + LocalRecMasterSetupII."HR Medical WJ",     //CR001
            Master_Setup."Interface File Path" + '\' + LocalRecMasterSetupII."HR Medical YIMM"    //CR001
            ])
        THEN BEGIN
          Instreamobj1.READTEXT(B1,1);
          Instreamobj1.READTEXT(B1,10);
          EVALUATE(Dim3,B1);
          IF Dim3 <> '' THEN BEGIN
            LocalRecIFDimMapSetup.GET;
            IF LocalRecIFDimMapSetup."A1 SMART(HR)"  THEN
              Gl_Interface."Shortcut Dimension 3" := GetDim3Value(Dim3)
            ELSE BEGIN
              GenLed_Setup.GET;
              Dim_Value.RESET;
              Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Shortcut Dimension 3 Code");
              Dim_Value.SETRANGE(Dim_Value.Name,Dim3);
              IF Dim_Value.FINDFIRST THEN
              Gl_Interface."Shortcut Dimension 3" :=Dim_Value.Code ;
            END;
          END;
        END;
        IF (FilePathNAme1 IN [Master_Setup."Interface File Path" + '\' + LocalRecMasterSetup."FA Disposal", Master_Setup."Interface File Path" + '\' +
            LocalRecMasterSetup."FA Movement", Master_Setup."Interface File Path" + '\' + LocalRecMasterSetup."FA Depreication"] )
        THEN BEGIN
          Instreamobj1.READTEXT(B1,1);
          Instreamobj1.READTEXT(B1,10);
          EVALUATE(Dim3,B1);
          IF Dim3 <> '' THEN BEGIN
            LocalRecIFDimMapSetup.GET;
            IF LocalRecIFDimMapSetup.FA THEN
              Gl_Interface."Shortcut Dimension 3" := GetDim3Value(Dim3)
            ELSE BEGIN
              GenLed_Setup.GET;
              Dim_Value.RESET;
              Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Shortcut Dimension 3 Code");
              Dim_Value.SETRANGE(Dim_Value.Name,Dim3);
              IF Dim_Value.FINDFIRST THEN
              Gl_Interface."Shortcut Dimension 3" :=Dim_Value.Code ;
            END;
          END;
        END;
         //Dimension value new concept.end<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,10);
        EVALUATE(Curr_Code1,B1);
        Gl_Interface."Currency code" := Curr_Code1;

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,11);
        EVALUATE(Trans_date1,B1);
        Gl_Interface."Transaction Date" := Trans_date1;

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,11);
        EVALUATE(Bl_date1,B1);
        Gl_Interface."B/L  Date" := Bl_date1;

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,250);
        EVALUATE(Narration,B1);
        Gl_Interface.Narration := Narration;


        Gl_Interface."Interface Date" := WORKDATE;

        Entry_No1 := Entry_No1 +1;
        Gl_Interface.MODIFY;
        Instreamobj1.READTEXT(B1,1);
      END;
    END;

    PROCEDURE UploadDataColl@1000000003(FilePathNAme2@1000000007 : Text[1024];Batch@1000000005 : Code[10]);
    VAR
      F2@1000000004 : File;
      Instreamobj2@1000000003 : InStream;
      Coll_Interface@1000000002 : Record 50011;
      Entry_No2@1000000001 : Integer;
      B2@1000000000 : Text[50];
      CustBankAcc@1000000006 : Record 287;
    BEGIN

      F2.OPEN(FilePathNAme2);
      F2.CREATEINSTREAM(Instreamobj2);

      Coll_Interface.RESET;
      IF Coll_Interface.FINDLAST THEN
        Entry_No2 := Coll_Interface."Entry No." + 1
      ELSE
        Entry_No2 := 1;

      CLEAR(Coll_Interface);

      WHILE NOT Instreamobj2.EOS DO BEGIN
        Coll_Interface.RESET;
        Coll_Interface."Entry No." := Entry_No2;
        Coll_Interface.INSERT;

        Instreamobj2.READTEXT(B2,10);
        EVALUATE(Line_No1,B2);
        Coll_Interface."Line No." := Line_No1;

        Instreamobj2.READTEXT(B2,1);
        Instreamobj2.READTEXT(B2,20);
        EVALUATE(Doc_No2,B2);
        Coll_Interface."Document No." := Doc_No2;

        Coll_Interface."Account Type" := Coll_Interface."Account Type"::Customer;

        Instreamobj2.READTEXT(B2,1);
        Instreamobj2.READTEXT(B2,20);
        EVALUATE(Account_No,B2);
        Coll_Interface."Account No." := Account_No;

        Instreamobj2.READTEXT(B2,1);
        Instreamobj2.READTEXT(B2,11);
        EVALUATE(Trans_date2,B2);
        Coll_Interface."Cheque Date" := Trans_date2;

        Instreamobj2.READTEXT(B2,1);
        Instreamobj2.READTEXT(B2,20);
        EVALUATE(Cheno,B2);
        Coll_Interface."Cheque No." := Cheno;

        Instreamobj2.READTEXT(B2,1);
        Instreamobj2.READTEXT(B2,10);
        EVALUATE(Curr_Code2,B2);
        Coll_Interface."Currency Code" := Curr_Code2;

        Instreamobj2.READTEXT(B2,1);
        Instreamobj2.READTEXT(B2,11);
        EVALUATE(RecDate,B2);
        Coll_Interface."Date Received" := RecDate;

        Instreamobj2.READTEXT(B2,1);
        Instreamobj2.READTEXT(B2,20);
        EVALUATE(Amount2,B2);
        Coll_Interface.Amount := Amount2;

        Instreamobj2.READTEXT(B2,1);
        Instreamobj2.READTEXT(B2,20);
        EVALUATE(Bank,B2);
        Coll_Interface."Bank Account" := Bank;

        Instreamobj2.READTEXT(B2,1);
        Instreamobj2.READTEXT(B2,50);
        EVALUATE(Description,B2);
        Coll_Interface.Description := Description;

        //>>09092013/VK/CR#019
        Instreamobj2.READTEXT(B2,1);
        Instreamobj2.READTEXT(B2,20);
        EVALUATE("G/L_Account",B2);
        Coll_Interface."GL Account No." := "G/L_Account";
        //<<09092013/VK/CR#019

        Coll_Interface."Interface Date" := WORKDATE;
        Coll_Interface."Batch Name" := Batch;


        CustBankAcc.SETRANGE(CustBankAcc."Customer No.",Account_No);
         IF CustBankAcc.FINDFIRST THEN
            CustBankAcc.SETFILTER(CustBankAcc."Default Account",'yes');
              IF CustBankAcc.FINDFIRST THEN
               Coll_Interface.Bank:=CustBankAcc.Code;

        Entry_No2 := Entry_No2 +1;
        Coll_Interface.MODIFY;
        Instreamobj2.READTEXT(B2,1);
      END;
    END;

    PROCEDURE UploadDataGlTBI@1000000005(FilePathNAme1@1000000006 : Text[1024];Template@1000000005 : Code[10];Batch@1000000007 : Code[10]);
    VAR
      F1@1000000004 : File;
      Instreamobj1@1000000003 : InStream;
      Gl_Interface@1000000002 : Record 50010;
      Entry_No1@1000000001 : Integer;
      B1@1000000000 : Text[250];
      GenLed_Setup@1000000008 : Record 98;
      Dim_Value@1000000009 : Record 349;
    BEGIN

      F1.OPEN(FilePathNAme1);
      F1.CREATEINSTREAM(Instreamobj1);

      Gl_Interface.RESET;
      IF Gl_Interface.FINDLAST THEN
        Entry_No1 := Gl_Interface."Entry No." + 1
      ELSE
        Entry_No1 := 1;

      CLEAR(Gl_Interface);

      WHILE NOT Instreamobj1.EOS DO BEGIN
        Gl_Interface.RESET;
        Gl_Interface."Entry No." := Entry_No1;
        Gl_Interface.INSERT;

        Instreamobj1.READTEXT(B1,20);
        EVALUATE(Doc_No1,B1);
        Gl_Interface.No := Doc_No1;

        Gl_Interface."Template Name" := Template;
        Gl_Interface."Batch Name" := Batch;

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,10);
        EVALUATE(Line_No,B1);
        Gl_Interface."Line No." := Line_No;

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,20);
        EVALUATE(Account_Type,B1);
        Gl_Interface."Account Type" := Account_Type;

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,20);
        EVALUATE("G/L_Account1",B1);
        Gl_Interface."Account No." := "G/L_Account1";

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,20);
        EVALUATE(Dr_Amt,B1);
        Gl_Interface.VALIDATE(Gl_Interface."Debit Amount",Dr_Amt);

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,20);
        EVALUATE(Cr_Amt,B1);
        Gl_Interface.VALIDATE(Gl_Interface."Credit Amount",Cr_Amt);

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,10);
        EVALUATE(dim1,B1);
        IF dim1 <> '' THEN
         BEGIN
          GenLed_Setup.GET;
          Dim_Value.RESET;
          Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Global Dimension 1 Code");
          Dim_Value.SETRANGE(Dim_Value.Code,dim1);
          IF Dim_Value.FINDFIRST THEN
          Gl_Interface."Shortcut Dimension 1" :=Dim_Value.Code ;
          Dim_Value.RESET;
         END
        ELSE
          Gl_Interface."Shortcut Dimension 1" :='';

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,10);
        EVALUATE(dim2,B1);
        IF dim2 <> '' THEN
         BEGIN
          GenLed_Setup.GET;
          Dim_Value.RESET;
          Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Global Dimension 2 Code");
          Dim_Value.SETRANGE(Dim_Value.Code,dim2);
          IF Dim_Value.FINDFIRST THEN
          Gl_Interface."Shortcut Dimension 2" :=Dim_Value.Code ;
          Dim_Value.RESET;
         END;



        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,10);
        EVALUATE(Dim3,B1);
        IF Dim3 <> '' THEN
         BEGIN
          GenLed_Setup.GET;
          Dim_Value.RESET;
          Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Shortcut Dimension 3 Code");
          Dim_Value.SETRANGE(Dim_Value.Code,Dim3);
          IF Dim_Value.FINDFIRST THEN
          Gl_Interface."Shortcut Dimension 3" :=Dim_Value.Code ;
         END;

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,10);
        EVALUATE(Curr_Code1,B1);
        Gl_Interface."Currency code" := Curr_Code1;

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,11);
        EVALUATE(Trans_date1,B1);
        Gl_Interface."Transaction Date" := Trans_date1;

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,11);
        EVALUATE(Bl_date1,B1);
        Gl_Interface."B/L  Date" := Bl_date1;

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,250);
        EVALUATE(Narration,B1);
        Gl_Interface.Narration := Narration;


        Gl_Interface."Interface Date" := WORKDATE;

        Entry_No1 := Entry_No1 +1;
        Gl_Interface.MODIFY;
        Instreamobj1.READTEXT(B1,1);
      END;
    END;

    PROCEDURE UploadYNSPIREdata@1000000004(FileName@1000000000 : Text[1024]);
    VAR
      F@1000000001 : File;
      Instreamobj@1000000002 : InStream;
      Entry_No@1000000003 : Integer;
      B@1000000004 : Text[100];
      WHT_Type@1102159001 : Code[10];
    BEGIN
      F.OPEN(FileName);
      F.CREATEINSTREAM(Instreamobj);

      YNSPIRE_interface.RESET;
      IF YNSPIRE_interface.FINDLAST THEN
        Entry_No := YNSPIRE_interface."Entry No." + 1
      ELSE
        Entry_No := 1;
      CLEAR(YNSPIRE_interface);
      WHILE NOT Instreamobj.EOS DO BEGIN
          YNSPIRE_interface.RESET;
          YNSPIRE_interface."Entry No." := Entry_No;
          YNSPIRE_interface.INSERT;
        Instreamobj.READTEXT(B,20);
          EVALUATE(Doc_No,B);
          YNSPIRE_interface."No." := Doc_No;
        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,20);
          EVALUATE(Cust_id,B);
          YNSPIRE_interface."Dealer Code" := Cust_id;
        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,11);
           YNSPIRE_interface."Transaction Date" := FindDate(B);
        Instreamobj.READTEXT(B,11);
          YNSPIRE_interface."Invoice Date" := FindDate(B);
        Instreamobj.READTEXT(B,11);
        Instreamobj.READTEXT(B,20);
          EVALUATE(NPWP_No,B);
          YNSPIRE_interface."Npwp no." := NPWP_No;
        Instreamobj.READTEXT(B,45);
        Instreamobj.READTEXT(B,11);
          YNSPIRE_interface."Tax Invoice Date":=FindDate(B);
        Instreamobj.READTEXT(B,10);
          IF YNSPIREaccount.GET(B)THEN
           YNSPIRE_interface."Account No.":=YNSPIREaccount."Account No.";
           YNSPIRE_interface."Sales Type":=YNSPIREaccount."Transaction Type";
           YNSPIRE_interface."Shortcut Dimension 1 Code":=YNSPIREaccount."YNSPIRE Shop Code";
           YNSPIRE_interface."Shortcut Dimension 2 Code":=YNSPIREaccount."YNSPIRE Model Code";
           YNSPIRE_interface."Shortcut Dimension 3 Code":=YNSPIREaccount."YNSPIRE Selling Expense";
        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,20);
          IF EVALUATE(Amount,B) THEN YNSPIRE_interface.Amount:=Amount;
        Instreamobj.READTEXT(B,12);
        Instreamobj.READTEXT(B,1);
          IF B='1' THEN YNSPIRE_interface."VAT Required":=TRUE
          ELSE IF B='0' THEN YNSPIRE_interface."VAT Required":=FALSE;
        Instreamobj.READTEXT(B,22);
        Instreamobj.READTEXT(B,1);//RT
        Instreamobj.READTEXT(B,20);
          YNSPIRE_interface."Kwitansi No.":=B;
        Instreamobj.READTEXT(B,6);
        Instreamobj.READTEXT(B,20);
          YNSPIRE_interface."Commercial Invoice No.":=B;
        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,11);
          YNSPIRE_interface."Commercial Invoice Date":=FindDate(B);
        Instreamobj.READTEXT(B,30);
          YNSPIRE_interface."Tax Invoice No.":=B;
        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,10);
        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,10);
        EVALUATE(WHT_Type,B);
        IF WHT_Type = '0' THEN YNSPIRE_interface."WHT Required":=FALSE
        ELSE IF WHT_Type = '1' THEN YNSPIRE_interface."WHT Required":=TRUE;
        Instreamobj.READTEXT(B,27);
        //Instreamobj.READTEXT(B,39);
         Entry_No := Entry_No +1;
         YNSPIRE_interface.MODIFY;
         CLEAR(Amount);
      END;
    END;

    PROCEDURE FindDate@1000000006(DateText@1000000000 : Text[30]) ActualDate : Date;
    VAR
      day@1000000001 : Text[30];
      month@1000000002 : Text[30];
      year@1000000003 : Text[30];
      ExtractedDate@1000000004 : Text[30];
    BEGIN
      day:=COPYSTR(DateText,4,2);
      month:=COPYSTR(DateText,1,2);
      year:=COPYSTR(DateText,7,2);
      ExtractedDate:=month+day+year;
      EVALUATE(ActualDate,ExtractedDate);
      EXIT(ActualDate);
    END;

    PROCEDURE GetDim1Value@1000000007(Dimension1@1000000000 : Code[20]) LocalCodeReturnRes : Code[10];
    VAR
      LocalRecIFDimMap@1000000001 : Record 60065;
    BEGIN
      LocalRecIFDimMap.RESET;
      LocalRecIFDimMap.SETRANGE("Dimension Name",LocalRecIFDimMap."Dimension Name"::"SHOP CODE");
      LocalRecIFDimMap.SETRANGE("Old YIMM Code",dim1);
      IF LocalRecIFDimMap.FINDFIRST THEN
        LocalCodeReturnRes := LocalRecIFDimMap."New NAV Code";
    END;

    PROCEDURE GetDim3Value@1000000009(Dimension3@1000000000 : Code[20]) LocalCodeReturnRes : Code[10];
    VAR
      LocalRecIFDimMap@1000000001 : Record 60065;
    BEGIN
      LocalRecIFDimMap.RESET;
      LocalRecIFDimMap.SETRANGE("Dimension Name",LocalRecIFDimMap."Dimension Name"::"SELLING EXPENSES");
      LocalRecIFDimMap.SETRANGE("Old YIMM Code",Dimension3);
      IF LocalRecIFDimMap.FINDFIRST THEN
        LocalCodeReturnRes := LocalRecIFDimMap."New NAV Code"
    END;

    BEGIN
    {
      Date               Sign                 Ref_ID                 Description
      31072013            VK                  CR#018                 Imacs IF Modification
      09092013            VK                  CR#019                 Imacs IF Modification(Coll IF)
      02122013            VK                  CR#022                 2nd Imacs IF Modification
      14012014            VK                  CR#023                 Imacs-CBU Modification
      //YIMMASL
      1) Fields Added For Slip No., G/l (Approver) - Template and Batch Name,
         Payment(Approver) - Template and Batch Name, Receipt(Approver) - template and batch name

      //YIMMRBRTR
      1) This Field is for the Identification of Domestic and Foreign Posting Group

      //SIIO
      1) NEW FIELD IS ADDED.


      //TBI- fields added for TBI specific Customizations and interface purpose.

      //YEID1.0 Field added for YEID - For Company specific Customization ( ID 105 ).
      //Mel1.0 Field added for Melco - For Company specific Customization ( ID 106 ).
      //YNSPIRE1.0 New Fields Added for YNSPIRE interface(ID 1027 to 1033 ) Dated 04-May-2011.
      //YNSPIRE1.1 New Function created for YNSPIRE interface. UploadYNSPIREdata(FileName : Text[1024]) Dated 04-May-2011
      //YNSPIRE1.2 Length of the field "Company Name YEID" and "Company Name MELCO" changed from 200 to 150--RT 30Nov2011
      //YNSPIRE1.2 New Fields "WHT Buss. for YNSPIRE","WHT Prod. YNSPIRE" and "WHT Prod. YNSPIRE Npwp" added--RT 30Nov2011
      //UPG13R2DEV
      Modifications for 2013R2 DB. Function "UploadDataGL" modified. If Account Type is "BANK" in interface file, then it is converted to "Bank Account".
      Length of  field "YNSPIRE User ID" changed to 50.


      01122014            SV                  CR#003                 WHT area code Length

      [UPG13R2DEV]
      [SIGN]  : SV
      [REF]   : Dimension value new concept
      [DESC]  : Dimension value new concept.New mapping table introduced and will be used(based on setup) untill all other systems are updated to use new dimension values.
                After all other system updated mapping will be obsolate

      [Ref]       CR001
      [SIGN]      SV
      [DESC]      Developed to interface HR Astek WJ file wj mergerd to YIMM
    }
    END.
  }
}

