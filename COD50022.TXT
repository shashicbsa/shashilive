OBJECT Codeunit 50022 CheckValidation
{
  OBJECT-PROPERTIES
  {
    Date=10/19/15;
    Time=10:16:54;
    Modified=Yes;
    Version List=YIMMCH.TBI1.0,YIMM1.0,CR#021,CR#022,YIMMDEVIP1.0,SMDEV1.0;
  }
  PROPERTIES
  {
    Permissions=TableData 15=r;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1000000000 : TextConst 'ENU=Please Specify the Exchange Rate On %1';
      Text002@1000000001 : TextConst 'ENU=Please Specify The Bank Rate On %1';
      Text003@1000000002 : TextConst 'ENU=Please Specify The Tax Rate On %1';
      Text004@1000000003 : TextConst 'ENU=Please Specify Apply to Doc Type and No. On Header of %1';
      Text005@1000000004 : TextConst 'ENU=Please Specify the A/c no in %1.';
      Text006@1000000005 : TextConst 'ENU=Please Correct The Exch Rate on %1';
      Currfect@1000000006 : Decimal;
      Text007@1000000007 : TextConst 'ENU=Due Date should Not be Less than the Document  Date and Posting Date';
      Text008@1000000008 : TextConst 'ENU="Please Fill the amount in Direct Unit Cost on Line No=%1"';
      Text009@1000000009 : TextConst 'ENU=Please Correct The %1 on Line No %2';
      TextClosing@1000000010 : TextConst 'ENU=CLOSING';
      MasterSetup@1000000011 : Record 50008;
      DimVal@1000000012 : Record 349;
      Text010@1000000013 : TextConst 'ENU=Customer is Different Please Choose the Correct project Code';
      Text011@1000000014 : TextConst 'ENU=Vendor is Different Please Choose the Correct project Code';
      Text012@1000000015 : TextConst 'ENU=Please Choose the Correct Code';
      Text013@1000000016 : TextConst 'ENU=Please Choose the Type of Transaction';
      MasterCustomerPostingSetup@1102159001 : Record 50012;
      Text014@1102159002 : TextConst 'ENU=Discount Must be Negative';
      Text015@1102159003 : TextConst 'ENU=Due Date should Not be Less than the Order Date,Document  Date and Posting Date';
      MasterSetup2@1102159004 : Record 60053;
      Text016@1102159005 : TextConst 'ENU="Amount should be negative for Discount Account on Line No=%1"';
      Date3MonthsAgo@1102159006 : Date;
      CurrentMonthLastDate@1102159007 : Date;
      Text017@1102159008 : TextConst 'ENU=Tax Invoice Date should Not be Less Than Three Months Before Posting Date';
      Text018@1102159009 : TextConst 'ENU=Tax Invoice Date  should Not be Greater Than Current Month';
      orderAddress@1102159010 : Record 224;
      SalesLine@1102159011 : Record 37;
      Text200@1102159012 : TextConst 'ENU=Entity Posting Group must have a value in Document No. %1. It cannot be zero or empty.';
      Text201@1102159013 : TextConst 'ENU=Please Specify Entity Posting Group in Document No - %1';
      Text019@1102159014 : TextConst 'ENU=Entity is Non PKP ,So Vat should not be applied.';
      Shiptoaddress@1102159015 : Record 222;
      VKCurrEx@1102159016 : Text;
      Text020@1102159017 : TextConst 'ENU=Vat is applied, so please fill NPWP No. in the document';
      Text021@1102159018 : TextConst 'ENU=Wht is applied, so please fill PPH NPWP No. in the document';
      GLSetup@1000000017 : Record 98;
      DimSetEntry@1000000018 : Record 480;

    PROCEDURE CheckPurchaseValidation@1000000000(PurchaseHeader@1000000000 : Record 38;FLAG@1000000009 : Boolean);
    VAR
      MasterSetup@1000000001 : Record 50008;
      PurchaseLine@1000000002 : Record 39;
      CurrencyExRate@1000000003 : Record 330;
      PurchLine@1000000004 : Record 39;
      VatPostingSetup@1000000005 : Record 325;
      WhtPostingSetup@1000000006 : Record 28043;
      PurchCreditMemo@1000000007 : Record 124;
      Text010@1000000008 : TextConst 'ENU="The Amount in the Correction Should Be Equal to the Slip No=%1"';
      VendPostingGroup@1000000010 : Record 93;
      Text002@1000000011 : TextConst 'ENU=Please Apply The Correct AP Posting Group';
      GLSETUP@1000000013 : Record 98;
      GLAcc@1000000014 : Record 15;
      FetchValue@1000000015 : ARRAY [5] OF Code[10];
      Counter@1000000016 : Integer;
      DimKeyFromDimVAl@1000000017 : Code[10];
      I@1000000012 : Integer;
      PurchInvHeader@1000000018 : Record 122;
      Vend@1000000019 : Record 23;
      Orderadd@1000000020 : Record 224;
      PurchHeader@1000000021 : Record 38;
      VendLedgEntry@1000000022 : Record 25;
      Text103@1000000023 : TextConst 'ENU=Purchase %1 %2 already exists for this vendor.';
      Text104@1000000024 : TextConst 'ENU=Posted Purchase %1 %2 already exists for this vendor.';
      DefaultDim@1000000026 : Record 352;
      TableID@1000000027 : Integer;
    BEGIN
      MasterSetup.GET;

      PurchaseHeader.TESTFIELD(PurchaseHeader."Posting Date");
      PurchaseHeader.TESTFIELD(PurchaseHeader."Document Date");//YIMMA Cannot Post if Document date is blank So that's why testfield
      PurchaseHeader.TESTFIELD(PurchaseHeader."Reason Code");
      PurchaseHeader.TESTFIELD(PurchaseHeader."Vendor Posting Group");
      PurchaseHeader.TESTFIELD(PurchaseHeader."Pay-to Vendor No.",PurchaseHeader."Buy-from Vendor No.");


      //YIMMDEVIP1.0-Not Applicaple
      orderAddress.RESET;
      orderAddress.SETRANGE(orderAddress."Vendor No.",PurchaseHeader."Buy-from Vendor No.");
      IF orderAddress.FINDSET THEN
        BEGIN
            IF (orderAddress."NpPkp No."=TRUE)   THEN
              BEGIN
                PurchaseLine.RESET;
                PurchaseLine.SETRANGE(PurchaseLine."Document Type",PurchaseHeader."Document Type");
                PurchaseLine.SETRANGE(PurchaseLine."Document No.",PurchaseHeader."No.");
                 IF PurchaseLine.FINDSET THEN
                    REPEAT
                         IF (PurchaseLine."VAT Prod. Posting Group" <> '') THEN
                            BEGIN
                                    ERROR(Text019);
                            END;
                    UNTIL PurchaseLine.NEXT = 0;
             END;
       END;

      //YIMMDEVIP1.0


      VendPostingGroup.RESET;
      IF VendPostingGroup.GET(PurchaseHeader."Vendor Posting Group") THEN
         IF (VendPostingGroup."Reason Code"<>PurchaseHeader."Reason Code") THEN
            ERROR(Text002);


      IF (FLAG) THEN BEGIN

         IF (PurchaseHeader."Document Type"=PurchaseHeader."Document Type"::"Credit Memo") AND
          (PurchaseHeader."Reason Code"=MasterSetup."Reason (Normal)") AND
           (PurchaseHeader.ActualCreditMemo=FALSE) THEN
         BEGIN
            PurchaseHeader.TESTFIELD(PurchaseHeader."Applies-to Doc. Type");
            PurchaseHeader.TESTFIELD(PurchaseHeader."Applies-to Doc. No.");

            IF (PurchaseHeader."No. Printed">0) THEN
               IF PurchInvHeader.GET(PurchaseHeader."Applies-to Doc. No.") THEN
               BEGIN
                  {
                  IF (PurchaseHeader."Slip Amount (LCY)"<>PurchInvHeader."Slip Amount (LCY)") THEN
                     ERROR(Text010,PurchInvHeader."Pre-Assigned No.");
                   //YIMMG1.0 orignal code commented

                  //YIMMG1.0 Begin
                  IF ((ROUND(PurchaseHeader."Slip Amount (LCY)",0.01,'=')) <> (ROUND(PurchInvHeader."Slip Amount (LCY)",0.01,'='))) THEN
                     ERROR(Text010,PurchInvHeader."Pre-Assigned No.");
                  //YIMMG1.0 End
                   }
                  PurchaseHeader.TESTFIELD(PurchaseHeader."Vendor Posting Group",PurchInvHeader."Vendor Posting Group");
               END;
         END;


         IF (PurchaseHeader."Document Type"=PurchaseHeader."Document Type"::Invoice) AND
          (PurchaseHeader."Reason Code"=MasterSetup."Reason (Purchase as Sale)") AND
           (PurchaseHeader.ActualCreditMemo=FALSE) THEN
         BEGIN
            PurchaseHeader.TESTFIELD(PurchaseHeader."Applies-to Doc. Type");
            PurchaseHeader.TESTFIELD(PurchaseHeader."Applies-to Doc. No.");

            IF (PurchaseHeader."No. Printed">0) THEN
               IF PurchCreditMemo.GET(PurchaseHeader."Applies-to Doc. No.") THEN
               BEGIN
                  {
                  IF (PurchaseHeader."Slip Amount (LCY)"<>PurchCreditMemo."Slip Amount (LCY)") THEN
                     ERROR(Text010,PurchCreditMemo."Pre-Assigned No.");
                    //YIMMG1.0 original code commented

                  //YIMMG1.0 Begin
                      IF ((ROUND(PurchaseHeader."Slip Amount (LCY)",0.01,'=')) <> (ROUND(PurchCreditMemo."Slip Amount (LCY)",0.01,'='))) THEN
                     ERROR(Text010,PurchCreditMemo."Pre-Assigned No.");
                  //YIMMG1.0 End
                   }
                  PurchaseHeader.TESTFIELD(PurchaseHeader."Vendor Posting Group",PurchCreditMemo."Vendor Posting Group");
               END;
         END;

      END; // End Of -->IF FLAG THEN


      Vend.RESET;
      IF Vend.GET(PurchaseHeader."Buy-from Vendor No.") THEN
         IF (Vend.Name<>'') THEN
         BEGIN
            PurchaseLine.RESET;
            PurchaseLine.SETRANGE(PurchaseLine."Document Type",PurchaseHeader."Document Type");
            PurchaseLine.SETRANGE(PurchaseLine."Document No.",PurchaseHeader."No.");

            IF PurchaseLine.FINDSET THEN
            REPEAT

               IF (PurchaseLine."New NPWP"<>'') THEN
                  IF NOT (Orderadd.GET(PurchaseHeader."Buy-from Vendor No.",PurchaseLine."New NPWP")) THEN
                     ERROR('PLEASE REGISTER NPWP %1 For That Vendor %2',PurchaseLine."New NPWP",PurchaseHeader."Buy-from Vendor No.");

       //YIMM1.0-START
       { //UPG13C
       DocDim1.RESET;
       DefaultDim.RESET;
            IF (PurchaseLine.Type=PurchaseLine.Type::"G/L Account") THEN
                TableID:=15;

            DefaultDim.SETRANGE(DefaultDim."Table ID",TableID);
            DefaultDim.SETRANGE(DefaultDim."No.",PurchaseLine."No.");
            IF DefaultDim.FINDSET THEN
              REPEAT
                 DocDim1.SETRANGE(DocDim1."Document Type",PurchaseLine."Document Type");
                 DocDim1.SETRANGE(DocDim1."Document No.",PurchaseLine."Document No.");
                 DocDim1.SETRANGE(DocDim1."Line No.",PurchaseLine."Line No.");
                 DocDim1.SETRANGE(DocDim1."Dimension Code",DefaultDim."Dimension Code");
                  IF NOT DocDim1.FINDFIRST THEN
                    ERROR('!!!  Please Fill The Dimension Value In Line No. %1 & Account No. %2 For Dimension %3',PurchaseLine.
      "Line No.",
                         PurchaseLine."No.",DefaultDim."Dimension Code");
              UNTIL(DefaultDim.NEXT=0);
      }//UPG13C
      //YIMM1.0 -END



            UNTIL(PurchaseLine.NEXT=0);

         END;



      IF (PurchaseHeader."Type Of Transaction"=PurchaseHeader."Type Of Transaction"::Gport) AND (PurchaseHeader.Interfaced) THEN
         IF (PurchaseHeader."Document Type"=PurchaseHeader."Document Type"::Invoice) AND
            (PurchaseHeader."Reason Code"=MasterSetup."Reason (Normal)") THEN
            PurchaseHeader.TESTFIELD(PurchaseHeader."New Or Cancel",PurchaseHeader."New Or Cancel"::New);


      IF (PurchaseHeader."Type Of Transaction"=PurchaseHeader."Type Of Transaction"::Gport) AND (PurchaseHeader.Interfaced) THEN
         IF (PurchaseHeader."Document Type"=PurchaseHeader."Document Type"::"Credit Memo") AND
            (PurchaseHeader."Reason Code"=MasterSetup."Reason (Purchase as Sale)") THEN
            PurchaseHeader.TESTFIELD(PurchaseHeader."New Or Cancel",PurchaseHeader."New Or Cancel"::New);

      //>>09102013/VK/CR#021-Code Commented
      {IF (PurchaseHeader."Reason Code"=MasterSetup."Reason (Normal)") THEN
         IF ((PurchaseHeader."Due Date")<(PurchaseHeader."Document Date")) THEN
            ERROR(Text007);
      }//<<09102013/VK/CR#021-Code Commented

      CheckDueDatePurchase(PurchaseHeader); //09102013/VK/CR#021


      PurchaseLine.RESET;
      PurchaseLine.SETRANGE(PurchaseLine."Document Type",PurchaseHeader."Document Type");
      PurchaseLine.SETRANGE(PurchaseLine."Document No.",PurchaseHeader."No.");
      PurchaseLine.SETFILTER(PurchaseLine."VAT %",'<>%1',0);

      IF PurchaseLine.FINDSET THEN
      REPEAT

         IF (PurchaseHeader."Reason Code"=MasterSetup."Reason (Normal)") THEN
            PurchaseLine.TESTFIELD(PurchaseLine."Tax Invoice No.");

         PurchaseLine.TESTFIELD(PurchaseLine."Tax Invoice Date");

         IF (PurchaseHeader."Reason Code"=MasterSetup."Reason (Purchase as Sale)") AND
            (PurchaseHeader."Document Type"=PurchaseHeader."Document Type"::"Credit Memo")
            AND (PurchaseHeader."Type Of Transaction"=PurchaseHeader."Type Of Transaction"::Others) THEN
            PurchaseHeader.TESTFIELD(PurchaseHeader."Transaction Type");

      UNTIL (PurchaseLine.NEXT=0);



      //Check for WHT AREA CODE

      PurchaseLine.RESET;
      PurchaseLine.SETRANGE(PurchaseLine."Document Type",PurchaseHeader."Document Type");
      PurchaseLine.SETRANGE(PurchaseLine."Document No.",PurchaseHeader."No.");

      IF PurchaseLine.FINDSET THEN
      REPEAT

         IF (PurchaseLine."WHT Product Posting Group"<>'') THEN
            PurchaseLine.TESTFIELD(PurchaseLine.AreaCode);

      UNTIL(PurchaseLine.NEXT=0);

      //Check for WHT AREA CODE



      IF (PurchaseHeader."FA Maintainance") THEN
      BEGIN
         PurchaseLine.RESET;
         PurchaseLine.SETRANGE(PurchaseLine."Document Type",PurchaseHeader."Document Type");
         PurchaseLine.SETRANGE(PurchaseLine."Document No.",PurchaseHeader."No.");

         IF PurchaseLine.FINDSET THEN
         REPEAT
            PurchaseLine.TESTFIELD(PurchaseLine."FA NO");
         UNTIL(PurchaseLine.NEXT=0);
      END;


      IF (PurchaseHeader."Currency Code"<>'') THEN
      BEGIN

         CurrencyExRate.RESET;
         CurrencyExRate.SETRANGE(CurrencyExRate."Starting Date",PurchaseHeader."Document Date");
         CurrencyExRate.SETRANGE(CurrencyExRate."Currency Code",PurchaseHeader."Currency Code");

         IF NOT (CurrencyExRate.FIND('-')) THEN
            ERROR(Text001,PurchaseHeader."Document Date")

         ELSE
         BEGIN

            IF (FORMAT(CurrencyExRate."Rel Tax Rate Amount")='') OR (CurrencyExRate."Rel Tax Rate Amount"=0) THEN
               ERROR(Text003,PurchaseHeader."Document Date");

            IF (FORMAT(CurrencyExRate."Relational Exch. Rate Amount")='') OR (CurrencyExRate."Relational Exch. Rate Amount"=0) THEN
               ERROR(Text002,PurchaseHeader."Document Date");

         END;

         IF ((FORMAT(PurchaseHeader."Currency Factor")<>
            COPYSTR(FORMAT(ROUND(1/CurrencyExRate."Relational Exch. Rate Amount",0.000000000000001,'=')),1,17))) THEN
            ERROR(Text006,PurchaseHeader."No.");  //Check


         // Validation For Local Vendor-Start
         IF (PurchaseHeader."Gen. Bus. Posting Group"=MasterSetup.Domestic_Bus_Posting_Group) THEN
         BEGIN
            PurchaseLine.RESET;
            PurchaseLine.SETRANGE(PurchaseLine."Document Type",PurchaseHeader."Document Type");
            PurchaseLine.SETRANGE(PurchaseLine."Document No.",PurchaseHeader."No.");
            PurchaseLine.SETFILTER(PurchaseLine."VAT %",'<>%1',0);

            IF PurchaseLine.FINDSET THEN
            REPEAT
               CurrencyExRate.RESET;
               CurrencyExRate.SETRANGE(CurrencyExRate."Starting Date",PurchaseLine."Tax Invoice Date");
               CurrencyExRate.SETRANGE(CurrencyExRate."Currency Code",PurchaseHeader."Currency Code");

               IF NOT (CurrencyExRate.FIND('-')) THEN
                  ERROR(Text001,PurchaseLine."Tax Invoice Date")
               ELSE
               BEGIN
                  IF (FORMAT(CurrencyExRate."Rel Tax Rate Amount")='') OR (CurrencyExRate."Rel Tax Rate Amount"=0) THEN
                     ERROR(Text003,PurchaseLine."Tax Invoice Date");
               END;

            UNTIL(PurchaseLine.NEXT=0);

         END;
         // Validation For Local Vendor-End


         // Validation For Overseas Vendor-Start
         IF (PurchaseHeader."Gen. Bus. Posting Group"=MasterSetup.Foreign_Bus_Posting_Group) THEN
         BEGIN
            PurchaseLine.RESET;
            PurchaseLine.SETRANGE(PurchaseLine."Document Type",PurchaseHeader."Document Type");
            PurchaseLine.SETRANGE(PurchaseLine."Document No.",PurchaseHeader."No.");
            PurchaseLine.SETFILTER(PurchaseLine."VAT %",'<>%1',0);

            IF PurchaseLine.FINDSET THEN
            REPEAT
               CurrencyExRate.RESET;
               CurrencyExRate.SETRANGE(CurrencyExRate."Starting Date",PurchaseHeader."Document Date");
               CurrencyExRate.SETRANGE(CurrencyExRate."Currency Code",PurchaseHeader."Currency Code");

               IF NOT (CurrencyExRate.FIND('-')) THEN
                  ERROR(Text001,PurchaseHeader."Document Date")
               ELSE
               BEGIN
                  IF (FORMAT(CurrencyExRate."Rel Tax Rate Amount")='') OR (CurrencyExRate."Rel Tax Rate Amount"=0) THEN
                     ERROR(Text003,PurchaseHeader."Document Date");
               END;

            UNTIL(PurchaseLine.NEXT=0);

         END;
         // Validation For Overseas Vendor-End

      END;




      PurchaseLine.RESET;
      PurchaseLine.SETRANGE(PurchaseLine."Document Type",PurchaseHeader."Document Type");
      PurchaseLine.SETRANGE(PurchaseLine."Document No.",PurchaseHeader."No.");

      IF PurchaseLine.FINDSET THEN
       REPEAT

       PurchaseLine.TESTFIELD(PurchaseLine."Gen. Bus. Posting Group");
       PurchaseLine.TESTFIELD(PurchaseLine."Gen. Prod. Posting Group");
       IF NOT (PurchaseLine."Line Amount" >0 ) THEN

      // YMNI1.0begin
       //ERROR(Text008,PurchaseLine."Line No.");

      IF COMPANYNAME <> MasterSetup."Company Name YMNI" THEN BEGIN
        ERROR(Text008,PurchaseLine."Line No.");
      END ELSE BEGIN
        MasterCustomerPostingSetup.GET;
        IF (PurchaseLine."No." <> MasterCustomerPostingSetup."YMNI Sales Discount") THEN
          ERROR(Text008,PurchaseLine."Line No.")
      END
      // YMNI1.0end
      UNTIL (PurchaseLine.NEXT=0);

      PurchLine.RESET;
      PurchLine.SETRANGE(PurchLine."Document Type",PurchaseHeader."Document Type");
      PurchLine.SETRANGE(PurchLine."Document No.",PurchaseHeader."No.");
      PurchLine.SETFILTER(PurchLine."VAT Prod. Posting Group",'<>%1','');
      IF PurchLine.FINDSET THEN
      REPEAT
            VatPostingSetup.RESET;
            VatPostingSetup.SETRANGE(VatPostingSetup."VAT Bus. Posting Group",PurchLine."VAT Bus. Posting Group");
            VatPostingSetup.SETRANGE(VatPostingSetup."VAT Prod. Posting Group",PurchLine."VAT Prod. Posting Group");
            IF VatPostingSetup.FINDFIRST THEN
                    VatPostingSetup.TESTFIELD(VatPostingSetup."Purchase VAT Account");

                 IF (PurchaseHeader."Currency Code"<>'') THEN
                 BEGIN
                  CurrencyExRate.RESET;
                  CurrencyExRate.SETRANGE(CurrencyExRate."Starting Date",PurchaseHeader."Document Date");
                  CurrencyExRate.SETRANGE(CurrencyExRate."Currency Code",PurchaseHeader."Currency Code");

                  IF NOT (CurrencyExRate.FIND('-')) THEN
                    ERROR(Text001,PurchaseHeader."Document Date")
                  ELSE

                  BEGIN

                  IF (FORMAT(CurrencyExRate."Rel Tax Rate Amount")='') OR (CurrencyExRate."Rel Tax Rate Amount"=0) THEN
                  ERROR(Text003,PurchaseHeader."Document Date");

                  END;

                 END; // End of Currency Code Loop








      UNTIL(PurchLine.NEXT=0);

      PurchLine.RESET;
      PurchLine.SETRANGE(PurchLine."Document Type",PurchaseHeader."Document Type");
      PurchLine.SETRANGE(PurchLine."Document No.",PurchaseHeader."No.");
      PurchLine.SETFILTER(PurchLine."WHT Product Posting Group",'<>%1','');
      IF PurchLine.FINDSET THEN REPEAT
            WhtPostingSetup.RESET;
            WhtPostingSetup.SETRANGE(WhtPostingSetup."WHT Business Posting Group",PurchLine."WHT Business Posting Group");
            WhtPostingSetup.SETRANGE(WhtPostingSetup."WHT Product Posting Group",PurchLine."WHT Product Posting Group");
            IF WhtPostingSetup.FINDFIRST THEN

            WhtPostingSetup.TESTFIELD("Payable WHT Account Code");

            IF (PurchaseHeader."Currency Code"<>'') THEN
                 BEGIN
                  CurrencyExRate.RESET;
                  CurrencyExRate.SETRANGE(CurrencyExRate."Starting Date",PurchaseHeader."Document Date");
                  CurrencyExRate.SETRANGE(CurrencyExRate."Currency Code",PurchaseHeader."Currency Code");

                  IF NOT (CurrencyExRate.FIND('-')) THEN
                    ERROR(Text001,PurchaseHeader."Document Date")
                  ELSE

                  BEGIN

                  IF (FORMAT(CurrencyExRate."Rel Tax Rate Amount")='') OR (CurrencyExRate."Rel Tax Rate Amount"=0) THEN
                  ERROR(Text003,PurchaseHeader."Document Date");

                  END;

                END;



         UNTIL (PurchLine.NEXT=0);


      PurchaseLine.RESET;
      PurchaseLine.SETRANGE(PurchaseLine."Document Type",PurchaseHeader."Document Type");
      PurchaseLine.SETRANGE(PurchaseLine."Document No.",PurchaseHeader."No.");


      IF (NOT (MasterSetup."Company Name YMKI"=COMPANYNAME))
      THEN

       BEGIN


      GLSETUP.GET;

      IF PurchaseLine.FINDSET THEN
         REPEAT

            IF (PurchaseLine."Shortcut Dimension 1 Code"<>'') THEN
            BEGIN

            FOR I:=1 TO 5 DO
             FetchValue[I]:='';

            PurchaseLine.TESTFIELD(PurchaseLine."No.");

            //TBI1.0 BEGIN
            IF (
            ( COMPANYNAME = MasterSetup."Company Name TBI") OR
            (COMPANYNAME = MasterSetup."Company Name YEID") OR
            (COMPANYNAME = MasterSetup."Company Name YMNI")      // YMNI 1.0
            ) THEN
             BEGIN
               DimVal.RESET;
               DimVal.SETFILTER(DimVal."Global Dimension No.",'1');
               DimVal.SETFILTER(DimVal.Code,PurchaseLine."Shortcut Dimension 1 Code");
               IF DimVal.FINDFIRST THEN
                  DimKeyFromDimVAl:=DimVal.DimKey
             END
            ELSE
            //TBI1.0 END
            DimKeyFromDimVAl:=COPYSTR(PurchaseLine."Shortcut Dimension 1 Code",1,1);

            GLAcc.RESET;
            IF GLAcc.GET(PurchaseLine."No.") THEN;

           IF (GLAcc.DimKey<>'') THEN
            BEGIN
            Counter:=1;

            REPEAT

              FetchValue[Counter]:=COPYSTR(GLAcc.DimKey,Counter,1);
              Counter:=Counter+1;

            UNTIL(Counter>STRLEN(GLAcc.DimKey));


           IF NOT ((DimKeyFromDimVAl) IN [FetchValue[1],FetchValue[2],FetchValue[3],FetchValue[4]]) THEN
              ERROR(Text009,GLSETUP."Global Dimension 1 Code",PurchaseLine."Line No.");

           END;




           END;

         UNTIL(PurchaseLine.NEXT=0);

      END;


      {

      IF (PurchaseHeader."Document Type"=PurchaseHeader."Document Type"::Invoice)
            AND
         (PurchaseHeader."Reason Code"=MasterSetup."Reason (Purchase as Sale)") THEN

      IF (FORMAT(PurchaseHeader."Applies-to Doc. Type")='')
      OR (PurchaseHeader."Applies-to Doc. No."='') THEN

      ERROR(Text004,PurchaseHeader."No.");


      IF (PurchaseHeader."Document Type"=PurchaseHeader."Document Type"::"Credit Memo")
            AND
         (NOT (PurchaseHeader."Reason Code"=MasterSetup."Reason (Purchase as Sale)")) THEN

      IF (FORMAT(PurchaseHeader."Applies-to Doc. Type")='') OR (PurchaseHeader."Applies-to Doc. No."='') THEN

      ERROR(Text004,PurchaseHeader."No.");

      }


      {
      IF (PurchaseHeader."Document Type"=PurchaseHeader."Document Type"::Invoice) THEN
       IF REPORT.SAVEASHTML(50045,APPLICATIONPATH+'Slip.html',FALSE,PurchaseHeader) THEN;

      IF (PurchaseHeader."Document Type"=PurchaseHeader."Document Type"::"Credit Memo") THEN
       IF REPORT.SAVEASHTML(50047,APPLICATIONPATH+'Slip.html',FALSE,PurchaseHeader) THEN;
      }


      //TBI1.1 START
      IF (COMPANYNAME = MasterSetup."Company Name TBI") THEN BEGIN

         PurchHeader.RESET;
         PurchHeader.SETCURRENTKEY("Document Type","No.");
         PurchHeader.SETRANGE("Document Type",PurchaseHeader."Document Type");
         PurchHeader.SETFILTER("No.",'<>%1',PurchaseHeader."No.");
         PurchHeader.SETRANGE("Vendor Invoice No.",PurchaseHeader."Vendor Invoice No.");
         PurchHeader.SETRANGE("Vendor Cr. Memo No.",PurchaseHeader."Vendor Cr. Memo No.");
         PurchHeader.SETRANGE("Pay-to Vendor No.",PurchaseHeader."Pay-to Vendor No.");
         IF PurchHeader.FINDFIRST THEN
            ERROR(Text103,PurchaseHeader."Document Type",PurchaseHeader."Vendor Invoice No.");

         VendLedgEntry.RESET;
         VendLedgEntry.SETCURRENTKEY("External Document No.");
         VendLedgEntry.SETRANGE("Document Type",PurchaseHeader."Document Type");
         VendLedgEntry.SETRANGE("External Document No.",PurchaseHeader."Vendor Invoice No.");
         VendLedgEntry.SETRANGE("Vendor No.",PurchaseHeader."Pay-to Vendor No.");
         IF VendLedgEntry.FINDFIRST THEN
            ERROR(Text104,PurchaseHeader."Document Type",PurchaseHeader."Vendor Invoice No.");

      END;
      //TBI1.1 END

      MasterSetup.GET;

      IF (COMPANYNAME=MasterSetup."Company Name MELCO") THEN
           CheckPurValidationMelco(PurchaseHeader);
    END;

    PROCEDURE CheckSalesValidation@1000000001(SalesHeader@1000000000 : Record 36;FLAG@1000000008 : Boolean);
    VAR
      MasterSetup@1000000003 : Record 50008;
      SalesLine@1000000002 : Record 37;
      CurrencyExRate@1000000001 : Record 330;
      Sline@1000000004 : Record 37;
      Vatpostingsetup@1000000005 : Record 325;
      whtpostingsetup@1000000006 : Record 28043;
      SalesCredirMemo@1000000007 : Record 114;
      Text010@1000000009 : TextConst 'ENU="The Amount in the Correction Should Be Equal to the Slip No=%1"';
      CustPostingGroup@1000000010 : Record 92;
      Text002@1000000011 : TextConst 'ENU=Please Apply The Correct AR Posting Group';
      GLSETUP@1000000017 : Record 98;
      GLAcc@1000000016 : Record 15;
      FetchValue@1000000015 : ARRAY [5] OF Code[10];
      Counter@1000000014 : Integer;
      DimKeyFromDimVAl@1000000013 : Code[10];
      I@1000000012 : Integer;
      SalesInvHeader@1000000018 : Record 112;
      SHeader@1000000019 : Record 36;
      Text203@1000000021 : TextConst 'ENU=Customer Purchase %1 %2 already exists for this customer.';
      Text204@1000000020 : TextConst 'ENU=Posted Customer %1 %2 already exists for this customer.';
      CustLedgEntry@1000000022 : Record 21;
      DefaultDim@1000000024 : Record 352;
      TableID@1000000025 : Integer;
      Text205@1102159001 : TextConst 'ENU=Please Apply The Correct AP Posting Group';
    BEGIN
      MasterSetup.GET;
      SalesHeader.TESTFIELD(SalesHeader."Posting Date");
      SalesHeader.TESTFIELD(SalesHeader."Document Date");//YIMMA Cannot Post if Document date is blank So that's why testfield
      SalesHeader.TESTFIELD(SalesHeader."Reason Code");
      //SalesHeader.TESTFIELD(SalesHeader."Customer Posting Group");// SMDEV1.0
      IF SalesHeader."Customer Posting Group" = '' THEN             //SMDEV1.0
       ERROR(Text201,SalesHeader."No.");                            //SMDEV1.0

      //YIMMDEVIP1.0.begin
      IF (SalesHeader."Document Type"= SalesHeader."Document Type"::"Credit Memo") AND (SalesHeader."Reason Code"='SALRT') THEN
      BEGIN
      Shiptoaddress.RESET;
      Shiptoaddress.SETRANGE("Customer No.",SalesHeader."Sell-to Customer No.");
      Shiptoaddress.SETRANGE(Code,SalesHeader."Ship-to Code");
      IF Shiptoaddress.FINDSET THEN
        BEGIN
            IF (Shiptoaddress."NpPkp No."=FALSE)   THEN
              BEGIN
                SalesLine.RESET;
                SalesLine.SETRANGE("Document Type",SalesHeader."Document Type");
                SalesLine.SETRANGE("Document No.",SalesHeader."No.");
                 IF SalesLine.FINDSET THEN
                    REPEAT
                         IF (SalesLine."VAT Prod. Posting Group" <> '') AND (SalesLine."VAT Prod. Posting Group" <> 'SLRT_NOVAT')THEN
                            BEGIN
                                    ERROR(Text019);
                            END;
                    UNTIL SalesLine.NEXT = 0;
             END;
       END;
       END;

      IF (SalesHeader."Document Type"= SalesHeader."Document Type"::"Credit Memo") AND (SalesHeader."Reason Code"='SALRT') THEN
       IF NOT SalesHeader.Interfaced THEN
        IF SalesHeader."Sell-to Customer No." <> 'VDRL-09-01-1182' THEN BEGIN    //Temporary NonDealer,so skip validation.
          IF NOT (SalesHeader.Cash) THEN
            SalesHeader.TESTFIELD(SalesHeader."Bank Code");
        END;


      IF (SalesHeader."Type Of Transaction" <> SalesHeader."Type Of Transaction"::Gport) AND (SalesHeader.Interfaced = FALSE) THEN
        BEGIN
        IF SalesHeader."Sell-to Customer No." <> 'VDRL-09-01-1182' THEN     //Temporary NonDealer,so skip validation.
        BEGIN
          IF (SalesHeader."Document Type"= SalesHeader."Document Type"::"Credit Memo") AND (SalesHeader."Reason Code"='SALRT') THEN
           BEGIN
            IF SalesHeader."Ship-to Code" = '' THEN
              BEGIN
                 SalesLine.RESET;
                 SalesLine.SETRANGE("Document Type",SalesHeader."Document Type");
                 SalesLine.SETRANGE("Document No.",SalesHeader."No.");
                  IF SalesLine.FINDSET THEN
                     REPEAT
                          IF (SalesLine."VAT Prod. Posting Group" <> '') AND (SalesLine."VAT Prod. Posting Group" <> 'SLRT_NOVAT') THEN
                             BEGIN
                                ERROR(Text020);
                             END;
                     UNTIL SalesLine.NEXT = 0;
              END ELSE BEGIN
                   SalesLine.RESET;
                   SalesLine.SETRANGE("Document Type",SalesHeader."Document Type");
                   SalesLine.SETRANGE("Document No.",SalesHeader."No.");
                    IF SalesLine.FINDSET THEN
                       REPEAT
                            IF (SalesLine."VAT Prod. Posting Group" <> '') AND (SalesLine."VAT Prod. Posting Group" <> 'SLRT_NOVAT') THEN
                               BEGIN
                                  IF SalesLine."Ship-to Code" = '' THEN
                                    ERROR(Text020);
                               END;
                       UNTIL SalesLine.NEXT = 0;
                END;

           END;
           END;
      END;

      { //Commented as validation not required for WHT.
      IF (SalesHeader."Document Type"= SalesHeader."Document Type"::"Credit Memo") AND (SalesHeader."Reason Code"='SALRT') THEN
       BEGIN
        IF SalesHeader."Sell-to Customer No." <> 'VDRL-09-01-1182' THEN     //Temporary NonDealer,so skip validation.
        BEGIN
        IF SalesHeader."New NPWP No." = '' THEN
          BEGIN
             SalesLine.RESET;
             SalesLine.SETRANGE("Document Type",SalesHeader."Document Type");
             SalesLine.SETRANGE("Document No.",SalesHeader."No.");
              IF SalesLine.FINDSET THEN
                 REPEAT
                      IF (SalesLine."WHT Product Posting Group" <> '') THEN
                         BEGIN
                                 ERROR(Text021);
                         END;
                 UNTIL SalesLine.NEXT = 0;
          END;
          END;
       END;
      }
      //YIMMDEVIP1.0.end


      CustPostingGroup.RESET;
      IF CustPostingGroup.GET(SalesHeader."Customer Posting Group") THEN
             IF (CustPostingGroup."Reason Code"<>SalesHeader."Reason Code") THEN
              IF SalesHeader."Reason Code" = 'NORMAL' THEN//SMDEV1.0
                ERROR(Text002)
              ELSE            //SMDEV1.0
                ERROR(Text205);//SMDEV1.0

      IF (FLAG) THEN
      BEGIN
       IF (SalesHeader."Document Type"=SalesHeader."Document Type"::"Credit Memo") AND
           (SalesHeader."Reason Code"=MasterSetup."Reason (Normal)") AND
                   (SalesHeader.ActualCreditMemo=FALSE) THEN   //YIMMDEVIP1.0 -original code
      //          (SalesHeader.ActualCreditMemo=TRUE) THEN    //YIMMDEVIP1.0
        BEGIN
        SalesHeader.TESTFIELD(SalesHeader."Applies-to Doc. Type");
        SalesHeader.TESTFIELD(SalesHeader."Applies-to Doc. No.");


        IF (SalesHeader."No. Printed">0) THEN
          IF SalesInvHeader.GET(SalesHeader."Applies-to Doc. No.") THEN
          BEGIN

               {
               IF (SalesHeader."Slip Amount (LCY)"<>SalesInvHeader."Slip Amount (LCY)") THEN
                    ERROR(Text010,SalesInvHeader."Pre-Assigned No.");
               }//YIMMG1.0 original code commented

               //YIMMG1.0 Begin
               IF ((ROUND(SalesHeader."Slip Amount (LCY)",0.01,'=')) <> (ROUND(SalesInvHeader."Slip Amount (LCY)",0.01,'='))) THEN
                  ERROR(Text010,SalesInvHeader."Pre-Assigned No.");
               //YIMMG1.0 End

              SalesHeader.TESTFIELD(SalesHeader."Customer Posting Group",SalesInvHeader."Customer Posting Group");
          END;

        END;

       IF (SalesHeader."Document Type"=SalesHeader."Document Type"::Invoice) AND
           (SalesHeader."Reason Code"=MasterSetup."Reason (Sale as Purchase)") AND
              (SalesHeader.ActualCreditMemo=FALSE) THEN
        BEGIN
        SalesHeader.TESTFIELD(SalesHeader."Applies-to Doc. Type");
        SalesHeader.TESTFIELD(SalesHeader."Applies-to Doc. No.");



        IF (SalesHeader."No. Printed">0) THEN
          IF SalesCredirMemo.GET(SalesHeader."Applies-to Doc. No.") THEN
          BEGIN


               IF ((ROUND(SalesHeader."Slip Amount (LCY)",0.01,'='))<>(ROUND(SalesCredirMemo."Slip Amount (LCY)",0.01,'='))) THEN
                    ERROR(Text010,SalesCredirMemo."Pre-Assigned No.");

              SalesHeader.TESTFIELD(SalesHeader."Customer Posting Group",SalesCredirMemo."Customer Posting Group");


          END;

          END;

      END; // End OF -->IF FLAG THEN


      //Start-ND

      IF (SalesHeader."Type Of Transaction"=SalesHeader."Type Of Transaction"::Gport) AND (SalesHeader.Interfaced) THEN
         IF (SalesHeader."Document Type"=SalesHeader."Document Type"::Invoice) AND
            (SalesHeader."Reason Code"=MasterSetup."Reason (Normal)") THEN
            SalesHeader.TESTFIELD(SalesHeader."New or Cancel",SalesHeader."New or Cancel"::New);


      IF (SalesHeader."Type Of Transaction"=SalesHeader."Type Of Transaction"::Gport) AND (SalesHeader.Interfaced) THEN
         IF (SalesHeader."Document Type"=SalesHeader."Document Type"::"Credit Memo") AND
            (SalesHeader."Reason Code"=MasterSetup."Reason (Sale as Purchase)") THEN
            SalesHeader.TESTFIELD(SalesHeader."New or Cancel",SalesHeader."New or Cancel"::New);

      //End-ND


      {//09102013/VK/CR#021-Code Commented
      IF (SalesHeader."Reason Code"<>MasterSetup."Reason (Normal)") THEN
        IF ((SalesHeader."Due Date") < (SalesHeader."Document Date"))
                    THEN
                      ERROR(Text007);
      }//09102013/VK/CR#021-Code Commented

      CheckDueDateSales(SalesHeader); //09102013/VK/CR#021

      //YIMMDEVIP1.0.begin
      IF SalesHeader."Reason Code" = 'SALRT' THEN
       CheckTaxInvoiceDateSales(SalesHeader);
      //YIMMDEVIP1.0.end

      SalesLine.RESET;
      SalesLine.SETRANGE(SalesLine."Document Type",SalesHeader."Document Type");
      SalesLine.SETRANGE(SalesLine."Document No.",SalesHeader."No.");
      SalesLine.SETFILTER(SalesLine."VAT %",'<>%1',0);
      IF SalesLine.FINDSET THEN
       REPEAT
       //IF NOT (SalesHeader."Type Of Transaction"=SalesHeader."Type Of Transaction"::Others) THEN
           SalesLine.TESTFIELD(SalesLine."Tax Invoice Date");

         IF (SalesHeader."Reason Code"=MasterSetup."Reason (Normal)") AND
           (SalesHeader."Document Type"=SalesHeader."Document Type"::Invoice)
                 AND (SalesHeader."Type Of Transaction"=SalesHeader."Type Of Transaction"::Others)  THEN
                    SalesHeader.TESTFIELD(SalesHeader."Transaction Type");


       UNTIL (SalesLine.NEXT=0);
      //     SalesLine.TESTFIELD(SalesLine."Tax Invoice No.");

      IF (SalesHeader."Currency Code"<>'') THEN
      BEGIN

      // Validation For Local Vendor-Start

                  CurrencyExRate.RESET;
                  CurrencyExRate.SETRANGE(CurrencyExRate."Starting Date",SalesHeader."Document Date");
                  CurrencyExRate.SETRANGE(CurrencyExRate."Currency Code",SalesHeader."Currency Code");

                  IF NOT (CurrencyExRate.FIND('-')) THEN
                    ERROR(Text001,SalesHeader."Document Date")
                  ELSE

                  BEGIN

                  IF (FORMAT(CurrencyExRate."Rel Tax Rate Amount")='') OR (CurrencyExRate."Rel Tax Rate Amount"=0) THEN
                  ERROR(Text003,SalesHeader."Document Date");

                  END;

                  //IF (1/SalesHeader."Currency Factor"<>CurrencyExRate."Relational Exch. Rate Amount") THEN


                  IF ((FORMAT(SalesHeader."Currency Factor")<>

                   COPYSTR(FORMAT(ROUND(1/CurrencyExRate."Relational Exch. Rate Amount",0.000000000000001,'=')),1,17))) THEN


                      ERROR(Text006,SalesHeader."No.");   // check




          IF (SalesHeader."Gen. Bus. Posting Group"=MasterSetup.Domestic_Bus_Posting_Group) THEN
          BEGIN

          SalesLine.RESET;
          SalesLine.SETRANGE(SalesLine."Document Type",SalesHeader."Document Type");
          SalesLine.SETRANGE(SalesLine."Document No.",SalesHeader."No.");
          SalesLine.SETFILTER(SalesLine."VAT %",'<>%1',0);

            IF SalesLine.FINDSET THEN
              REPEAT
                  CurrencyExRate.RESET;
                  CurrencyExRate.SETRANGE(CurrencyExRate."Starting Date",SalesLine."Tax Invoice Date");
                  CurrencyExRate.SETRANGE(CurrencyExRate."Currency Code",SalesHeader."Currency Code");

                  IF NOT (CurrencyExRate.FIND('-')) THEN
                    ERROR(Text001,SalesLine."Tax Invoice Date")
                  ELSE

                  BEGIN

                  IF (FORMAT(CurrencyExRate."Rel Tax Rate Amount")='') OR (CurrencyExRate."Rel Tax Rate Amount"=0) THEN
                  ERROR(Text003,SalesLine."Tax Invoice Date");

                  END;

              UNTIL(SalesLine.NEXT=0);

          END;

      // Validation For Local Vendor-End


      // Validation For Overseas Vendor-Start

          IF (SalesHeader."Gen. Bus. Posting Group"=MasterSetup.Foreign_Bus_Posting_Group) THEN
          BEGIN


          SalesLine.RESET;
          SalesLine.SETRANGE(SalesLine."Document Type",SalesHeader."Document Type");
          SalesLine.SETRANGE(SalesLine."Document No.",SalesHeader."No.");
          SalesLine.SETFILTER(SalesLine."VAT %",'<>%1',0);

            IF SalesLine.FINDSET THEN
              REPEAT
                  CurrencyExRate.RESET;
                  CurrencyExRate.SETRANGE(CurrencyExRate."Starting Date",SalesHeader."Document Date");
                  CurrencyExRate.SETRANGE(CurrencyExRate."Currency Code",SalesHeader."Currency Code");

                  IF NOT (CurrencyExRate.FIND('-')) THEN
                    ERROR(Text001,SalesHeader."Document Date")
                  ELSE

                  BEGIN

                  IF (FORMAT(CurrencyExRate."Rel Tax Rate Amount")='') OR (CurrencyExRate."Rel Tax Rate Amount"=0) THEN
                  ERROR(Text003,SalesHeader."Document Date");

                  END;

              UNTIL(SalesLine.NEXT=0);









          END;

      // Validation For Local Vendor-End

      END;


      //Check for WHT AREA CODE

      SalesLine.RESET;
      SalesLine.SETRANGE(SalesLine."Document Type",SalesHeader."Document Type");
      SalesLine.SETRANGE(SalesLine."Document No.",SalesHeader."No.");


         IF SalesLine.FINDSET THEN
           REPEAT

              IF (SalesLine."WHT Product Posting Group"<>'') THEN
                   SalesLine.TESTFIELD(SalesLine.AreaCode);






       //YIMM1.0-START
       {//UPG13C
       DocDim1.RESET;
       DefaultDim.RESET;
            IF (SalesLine.Type=SalesLine.Type::"G/L Account") THEN
                TableID:=15;

            DefaultDim.SETRANGE(DefaultDim."Table ID",TableID);
            DefaultDim.SETRANGE(DefaultDim."No.",SalesLine."No.");
            IF DefaultDim.FINDSET THEN
              REPEAT
                 DocDim1.SETRANGE(DocDim1."Document Type",SalesLine."Document Type");
                 DocDim1.SETRANGE(DocDim1."Document No.",SalesLine."Document No.");
                 DocDim1.SETRANGE(DocDim1."Line No.",SalesLine."Line No.");
                 DocDim1.SETRANGE(DocDim1."Dimension Code",DefaultDim."Dimension Code");
                  IF NOT DocDim1.FINDFIRST THEN
                    ERROR('!!!  Please Fill The Dimension Value In Line No. %1 & Account no. %2  For Dimension %3 ', SalesLine.
      "Line No.",
                         SalesLine."No.",DefaultDim."Dimension Code");
              UNTIL(DefaultDim.NEXT=0);
      }//UPG13C
      //YIMM1.0 -END

      //YIMMDEVIP1.0.begin
       DefaultDim.RESET;
       GLSETUP.RESET;
            IF (SalesLine.Type=SalesLine.Type::"G/L Account") THEN
                TableID:=15;

            DefaultDim.SETRANGE(DefaultDim."Table ID",TableID);
            DefaultDim.SETRANGE(DefaultDim."No.",SalesLine."No.");
            IF DefaultDim.FINDSET THEN
              REPEAT
                DimSetEntry.SETRANGE(DimSetEntry."Dimension Set ID",SalesLine."Dimension Set ID");
                DimSetEntry.SETRANGE(DimSetEntry."Dimension Code",DefaultDim."Dimension Code");
                 IF NOT DimSetEntry.FINDFIRST THEN
                   ERROR('!!!  Please Fill The Dimension Value In Line No. %1 & Account no. %2  For Dimension %3 ', SalesLine."Line No.",
                         SalesLine."No.",DefaultDim."Dimension Code");
              UNTIL(DefaultDim.NEXT=0);

      //YIMMDEVIP1.0.end


           UNTIL(SalesLine.NEXT=0);

      //Check for WHT AREA CODE


      IF (((SalesHeader."Document Type"= SalesHeader."Document Type"::Invoice) OR (SalesHeader."Document Type"= SalesHeader."Document Type"::"Credit Memo"))
          AND (SalesHeader."Reason Code"='NORMAL')) THEN   //YIMMDEVIP1.0
      BEGIN

        SalesLine.RESET;
        SalesLine.SETRANGE(SalesLine."Document Type",SalesHeader."Document Type");
        SalesLine.SETRANGE(SalesLine."Document No.",SalesHeader."No.");
        SalesLine.SETFILTER(SalesLine."VAT %",'<>%1',0);
        IF SalesLine.FINDSET THEN
         REPEAT

         SalesLine.TESTFIELD(SalesLine."Gen. Bus. Posting Group");
         SalesLine.TESTFIELD(SalesLine."Gen. Prod. Posting Group");
         IF NOT (SalesLine."Line Amount" >0 ) THEN

        // YMNI1.0begin
         //ERROR(Text008,SalesLine."Line No.")
        {//02122013/VK/CR#022-Code Commented
        IF COMPANYNAME <> MasterSetup."Company Name YMNI" THEN BEGIN
        //IF (COMPANYNAME <> MasterSetup."Company Name YMNI") OR (COMPANYNAME = MasterSetup."Company Name YIMM") THEN BEGIN  //
          ERROR(Text008,SalesLine."Line No.");
        END ELSE BEGIN
          MasterCustomerPostingSetup.GET;
          IF (SalesLine."No." <> MasterCustomerPostingSetup."YMNI Sales Discount") THEN
            ERROR(Text008,SalesLine."Line No.")
        END
        // YMNI1.0end
        } //02122013/VK/CR#022

        //>>02122013/VK/CR#022-New Code
        IF COMPANYNAME = MasterSetup."Company Name YMNI" THEN BEGIN
          MasterCustomerPostingSetup.GET;
          IF (SalesLine."No." <> MasterCustomerPostingSetup."YMNI Sales Discount") THEN
            ERROR(Text008,SalesLine."Line No.");
        END ELSE IF COMPANYNAME = MasterSetup."Company Name YIMM" THEN BEGIN
          MasterSetup2.GET;
          IF (SalesLine."No." <> MasterSetup2."YIMM Sales Discount") AND (SalesLine."No." <> MasterSetup2."YIMM Instancy Discount") AND
           (SalesLine."No." <> MasterSetup2."YIMM Campaign Discount") AND (SalesLine."No." <> MasterSetup2."YIMM Selling In Discount")AND
           (SalesLine."No." <> MasterSetup2."YIMM Selling Out Discount") AND (SalesLine."No." <> MasterSetup2."YIMM Others") THEN
              ERROR(Text008,SalesLine."Line No.");
        END ELSE
         ERROR(Text008,SalesLine."Line No.");
        //<<02122013/VK/CR#022
        UNTIL (SalesLine.NEXT=0);

      //YIMMDEVIP1.0.begin
      END ELSE IF (((SalesHeader."Document Type"= SalesHeader."Document Type"::Invoice) OR (SalesHeader."Document Type"= SalesHeader."Document Type"::"Credit Memo"))
                      AND (SalesHeader."Reason Code"='SALRT')) THEN   //YIMMDEVIP1.0
      BEGIN
        SalesLine.RESET;
        SalesLine.SETRANGE(SalesLine."Document Type",SalesHeader."Document Type");
        SalesLine.SETRANGE(SalesLine."Document No.",SalesHeader."No.");
        IF SalesLine.FINDSET THEN
         REPEAT

         SalesLine.TESTFIELD(SalesLine."Gen. Bus. Posting Group");
         SalesLine.TESTFIELD(SalesLine."Gen. Prod. Posting Group");
         IF NOT (SalesLine."Line Amount" >0 ) THEN

        // YMNI1.0begin
        IF COMPANYNAME <> MasterSetup."Company Name YMNI" THEN BEGIN
        //IF (COMPANYNAME <> MasterSetup."Company Name YMNI") OR (COMPANYNAME = MasterSetup."Company Name YIMM") THEN BEGIN  //
          ERROR(Text008,SalesLine."Line No.");
        END ELSE BEGIN
          MasterCustomerPostingSetup.GET;
          IF (SalesLine."No." <> MasterCustomerPostingSetup."YMNI Sales Discount") THEN
            ERROR(Text008,SalesLine."Line No.")
        END;
        // YMNI1.0end
        UNTIL (SalesLine.NEXT=0);
      END;
      //YIMMDEVIP1.0.end


      //>>02122013/VK/CR#022
      Sline.RESET;
      Sline.SETRANGE(Sline."Document Type",Sline."Document Type"::Invoice);
      Sline.SETRANGE(Sline."Document No.",SalesHeader."No.");
      IF Sline.FINDFIRST THEN
        REPEAT
        IF COMPANYNAME = MasterSetup."Company Name YIMM" THEN BEGIN
        MasterSetup2.GET;
        IF (Sline."No." = MasterSetup2."YIMM Sales Discount") OR (Sline."No." = MasterSetup2."YIMM Instancy Discount") OR
         (Sline."No." = MasterSetup2."YIMM Campaign Discount") OR (Sline."No." = MasterSetup2."YIMM Selling In Discount") OR
         (Sline."No." = MasterSetup2."YIMM Selling Out Discount") OR (Sline."No." = MasterSetup2."YIMM Others") THEN
            IF NOT (Sline."Line Amount" < 0) THEN
              ERROR(Text016,Sline."Line No.");
        END;
        UNTIL Sline.NEXT = 0;
      //>>02122013/VK/CR#022

      Sline.RESET;
      Sline.SETRANGE(Sline."Document Type",SalesHeader."Document Type");
      Sline.SETRANGE(Sline."Document No.",SalesHeader."No.");
      Sline.SETFILTER(Sline."VAT Prod. Posting Group",'<>%1','');
      IF Sline.FINDFIRST THEN
      REPEAT
            Vatpostingsetup.RESET;
            Vatpostingsetup.SETRANGE(Vatpostingsetup."VAT Bus. Posting Group",Sline."VAT Bus. Posting Group");
            Vatpostingsetup.SETRANGE(Vatpostingsetup."VAT Prod. Posting Group",Sline."VAT Prod. Posting Group");
            IF Vatpostingsetup.FINDFIRST THEN
                    Vatpostingsetup.TESTFIELD(Vatpostingsetup."Sales VAT Account");

               IF (SalesHeader."Currency Code"<>'') THEN
               BEGIN
                  CurrencyExRate.RESET;
                  CurrencyExRate.SETRANGE(CurrencyExRate."Starting Date",SalesHeader."Document Date");
                  CurrencyExRate.SETRANGE(CurrencyExRate."Currency Code",SalesHeader."Currency Code");

                  IF NOT (CurrencyExRate.FIND('-')) THEN
                    ERROR(Text001,SalesHeader."Document Date")
                  ELSE

                  BEGIN

                  IF (FORMAT(CurrencyExRate."Rel Tax Rate Amount")='') OR (CurrencyExRate."Rel Tax Rate Amount"=0) THEN
                  ERROR(Text003,SalesHeader."Document Date");

                  END;

               END;


      UNTIL(Sline.NEXT=0);

      Sline.RESET;
      Sline.SETRANGE(Sline."Document Type",SalesHeader."Document Type");
      Sline.SETRANGE(Sline."Document No.",SalesHeader."No.");
      Sline.SETFILTER(Sline."WHT Product Posting Group",'<>%1','');
      IF Sline.FINDSET THEN REPEAT
            whtpostingsetup.RESET;
            whtpostingsetup.SETRANGE(whtpostingsetup."WHT Business Posting Group",Sline."WHT Business Posting Group");
            whtpostingsetup.SETRANGE(whtpostingsetup."WHT Product Posting Group",Sline."WHT Product Posting Group");
            IF whtpostingsetup.FINDFIRST THEN
                whtpostingsetup.TESTFIELD("Prepaid WHT Account Code");

               IF (SalesHeader."Currency Code"<>'') THEN
               BEGIN
                  CurrencyExRate.RESET;
                  CurrencyExRate.SETRANGE(CurrencyExRate."Starting Date",SalesHeader."Document Date");
                  CurrencyExRate.SETRANGE(CurrencyExRate."Currency Code",SalesHeader."Currency Code");

                  IF NOT (CurrencyExRate.FIND('-')) THEN
                    ERROR(Text001,SalesHeader."Document Date")
                  ELSE

                  BEGIN

                  IF (FORMAT(CurrencyExRate."Rel Tax Rate Amount")='') OR (CurrencyExRate."Rel Tax Rate Amount"=0) THEN
                  ERROR(Text003,SalesHeader."Document Date");

                  END;


               END;


      UNTIL (Sline.NEXT=0);




      SalesLine.RESET;
      SalesLine.SETRANGE(SalesLine."Document Type",SalesHeader."Document Type");
      SalesLine.SETRANGE(SalesLine."Document No.",SalesHeader."No.");


      IF NOT (MasterSetup."Company Name YMKI"=COMPANYNAME) THEN

       BEGIN




      GLSETUP.GET;

      IF SalesLine.FINDSET THEN
         REPEAT
            IF (SalesLine."Shortcut Dimension 1 Code"<>'') THEN
            BEGIN


            FOR I:=1 TO 5 DO
             FetchValue[I]:='';


            SalesLine.TESTFIELD(SalesLine."No.");

            //TBI1.0
            IF (
            ( COMPANYNAME = MasterSetup."Company Name TBI") OR
            (COMPANYNAME = MasterSetup."Company Name YEID") OR
            (COMPANYNAME = MasterSetup."Company Name YMNI")      // YMNI 1.0
            ) THEN

             BEGIN
               DimVal.RESET;
               DimVal.SETFILTER(DimVal."Global Dimension No.",'1');
               DimVal.SETFILTER(DimVal.Code,SalesLine."Shortcut Dimension 1 Code");
               IF DimVal.FINDFIRST THEN
                  DimKeyFromDimVAl:=DimVal.DimKey
             END
            ELSE
            //TBI1.0 END
             DimKeyFromDimVAl:=COPYSTR(SalesLine."Shortcut Dimension 1 Code",1,1);

            GLAcc.RESET;
            IF GLAcc.GET(SalesLine."No.") THEN;

           IF (GLAcc.DimKey<>'') THEN
            BEGIN
            Counter:=1;

            REPEAT

              FetchValue[Counter]:=COPYSTR(GLAcc.DimKey,Counter,1);
              Counter:=Counter+1;

            UNTIL(Counter>STRLEN(GLAcc.DimKey));






           IF NOT ((DimKeyFromDimVAl) IN [FetchValue[1],FetchValue[2],FetchValue[3],FetchValue[4]]) THEN
             ERROR(Text009,GLSETUP."Global Dimension 1 Code",SalesLine."Line No.");


           END;



            END;

         UNTIL(SalesLine.NEXT=0);

      END; // End Of COMPANY CHECK AND THE DIMension Constraint Check CHECK



      {
      IF (SalesHeader."Document Type"=SalesHeader."Document Type"::Invoice) THEN
       IF REPORT.SAVEASHTML(50046,APPLICATIONPATH+'Slip.html',FALSE,SalesHeader) THEN;

      IF (SalesHeader."Document Type"=SalesHeader."Document Type"::"Credit Memo") THEN
       IF REPORT.SAVEASHTML(50048,APPLICATIONPATH+'Slip.html',FALSE,SalesHeader) THEN;
      }


      {

      IF (SalesHeader."Document Type"=SalesHeader."Document Type"::Invoice)
            AND
         (SalesHeader."Reason Code"=MasterSetup."Reason (Sale as Purchase)") THEN

      IF (FORMAT(SalesHeader."Applies-to Doc. Type")='')
      OR (SalesHeader."Applies-to Doc. No."='') THEN

      ERROR(Text004,SalesHeader."No.");


      IF (SalesHeader."Document Type"=SalesHeader."Document Type"::"Credit Memo")
            AND
         (NOT (SalesHeader."Reason Code"=MasterSetup."Reason (Sale as Purchase)")) THEN

      IF (FORMAT(SalesHeader."Applies-to Doc. Type")='') OR (SalesHeader."Applies-to Doc. No."='') THEN

      ERROR(Text004,SalesHeader."No.");
      }

      //TBI1.1 START
      IF ((COMPANYNAME = MasterSetup."Company Name TBI") AND
      (SalesHeader."Reason Code" = MasterSetup."Reason (Sale as Purchase)")) THEN BEGIN

         SHeader.RESET;
         SHeader.SETCURRENTKEY("Document Type","No.");
         SHeader.SETRANGE("Document Type",SalesHeader."Document Type");
         SHeader.SETFILTER("No.",'<>%1',SalesHeader."No.");
         SHeader.SETRANGE("External Document No.",SalesHeader."External Document No.");
         SHeader.SETRANGE("Sell-to Customer No.",SalesHeader."Sell-to Customer No.");
         IF SHeader.FINDFIRST THEN BEGIN
            IF (SalesHeader."Document Type" = SalesHeader."Document Type"::Invoice) THEN
               ERROR(Text203,'Return',SalesHeader."External Document No.")
            ELSE IF (SalesHeader."Document Type" = SalesHeader."Document Type"::"Credit Memo") THEN
               ERROR(Text203,'Invoice',SalesHeader."External Document No.")
         END;

         CustLedgEntry.RESET;
         CustLedgEntry.SETCURRENTKEY("External Document No.");
         CustLedgEntry.SETRANGE("Document Type",SalesHeader."Document Type");
         CustLedgEntry.SETRANGE("External Document No.",SalesHeader."External Document No.");
         CustLedgEntry.SETRANGE("Customer No.",SalesHeader."Sell-to Customer No.");
         IF CustLedgEntry.FINDFIRST THEN
            ERROR(Text204,CustLedgEntry.DocType,SalesHeader."External Document No.");

      END;
      //TBI1.1 END


      MasterSetup.GET;

      IF (COMPANYNAME=MasterSetup."Company Name MELCO") THEN
           CheckSalesValidationMelco(SalesHeader);
    END;

    PROCEDURE CheckGLValidation@1000000002(GnlJnlLine@1000000000 : Record 81);
    VAR
      MasterSetup@1000000001 : Record 50008;
      Cust@1000000002 : Record 18;
      CustPostSetup@1000000003 : Record 92;
      VendPostSetup@1000000004 : Record 93;
      GJLINE@1000000005 : Record 81;
      GLSETUP@1000000011 : Record 98;
      GLAcc@1000000010 : Record 15;
      FetchValue@1000000009 : ARRAY [5] OF Code[10];
      Counter@1000000008 : Integer;
      DimKeyFromDimVAl@1000000007 : Code[10];
      I@1000000006 : Integer;
      GLAccount@1000000013 : Record 15;
      Cost_Setup@1000000012 : Record 60009;
    BEGIN
      MasterSetup.GET;

      GJLINE.RESET;
      GJLINE.SETRANGE(GJLINE."Journal Template Name",GnlJnlLine."Journal Template Name");
      GJLINE.SETRANGE(GJLINE."Journal Batch Name",GnlJnlLine."Journal Batch Name");
      GJLINE.SETRANGE(GJLINE."Slip No.",GnlJnlLine."Slip No.");//YIMMA
      IF GJLINE.FINDSET THEN REPEAT


            {
        IF (GJLINE."Document Type" IN [GJLINE."Document Type"::Payment,GJLINE."Document Type"::Refund]) THEN
          GJLINE.TESTFIELD(GJLINE."Applies-to Doc. No.");
        }




        CASE GJLINE."Account Type" OF
          GJLINE."Account Type"::Customer: BEGIN
            CustPostSetup.GET(GJLINE."Posting Group");
            CustPostSetup.TESTFIELD(CustPostSetup."Receivables Account");
          END;

          GJLINE."Account Type"::Vendor: BEGIN
            VendPostSetup.GET(GJLINE."Posting Group");
            VendPostSetup.TESTFIELD(VendPostSetup."Payables Account");
          END;
        END;



      GLSETUP.GET;


      IF (MasterSetup."Company Name YMKI"=COMPANYNAME) AND (GJLINE."Journal Template Name"='CB') AND
       (GJLINE."Account No."=MasterSetup."Office EqExp Account" )
       THEN
          BEGIN
          GJLINE.TESTFIELD(GJLINE."Office Eq. Type");
          GJLINE.TESTFIELD(GJLINE."Identity No.");
          GJLINE.TESTFIELD(GJLINE."Assigned USER");
          END;

      IF NOT (MasterSetup."Company Name YMKI"=COMPANYNAME) THEN

       BEGIN



        IF (GJLINE."Shortcut Dimension 1 Code"<>'') AND (GJLINE."Journal Batch Name"<>MasterSetup."Closing Batch") THEN
            BEGIN


            FOR I:=1 TO 5 DO
             FetchValue[I]:='';


            GJLINE.TESTFIELD(GJLINE."Account No.");

            //TBI1.0 BEGIN
            IF (
            ( COMPANYNAME = MasterSetup."Company Name TBI") OR
            (COMPANYNAME = MasterSetup."Company Name YEID") OR
      (COMPANYNAME = MasterSetup."Company Name YMNI")      // YMNI 1.0
            ) THEN
             BEGIN
               DimVal.RESET;
               DimVal.SETFILTER(DimVal."Global Dimension No.",'1');
               DimVal.SETFILTER(DimVal.Code,GJLINE."Shortcut Dimension 1 Code");
               IF DimVal.FINDFIRST THEN
                  DimKeyFromDimVAl:=DimVal.DimKey
             END
            ELSE
            //TBI1.0 END
             DimKeyFromDimVAl:=COPYSTR(GJLINE."Shortcut Dimension 1 Code",1,1);

            GLAcc.RESET;
            IF GLAcc.GET(GJLINE."Account No.") THEN //rss

           IF (GLAcc.DimKey<>'') THEN
            BEGIN
            Counter:=1;

            REPEAT

              FetchValue[Counter]:=COPYSTR(GLAcc.DimKey,Counter,1);
              Counter:=Counter+1;

            UNTIL(Counter>STRLEN(GLAcc.DimKey));






            IF NOT ((DimKeyFromDimVAl) IN [FetchValue[1],FetchValue[2],FetchValue[3],FetchValue[4]]) THEN
              ERROR(Text009,GLSETUP."Global Dimension 1 Code",GJLINE."Line No.");


            END;

            END;

      END; // End of Dimension Constraint Check

      //Validation for Melco

      IF (
      (COMPANYNAME = MasterSetup."Company Name MELCO")
       AND
       ( GJLINE."Account Type"=GJLINE."Account Type"::"G/L Account")
              AND
              (GJLINE."Journal Batch Name"<>MasterSetup."Rev Batch")
              AND
              (GJLINE."Journal Batch Name"<>MasterSetup."Closing Batch")    //MElco.10-NTN Line Added 3Feb12 to post ClosingEntry.
      ) THEN

        BEGIN
          Cost_Setup.GET;
          GLAccount.RESET;
          GLAccount.SETFILTER(GLAccount."No.",Cost_Setup."Import Material");
          IF GLAccount.FINDSET THEN
            REPEAT
               IF (GLAccount."No."=GJLINE."Account No.") THEN
                 BEGIN
                     GJLINE.TESTFIELD(GJLINE."Quote No ( Project No.)");
                     GJLINE.TESTFIELD(GJLINE."Type Of Transaction",GJLINE."Type Of Transaction"::Direct);
                 END;
            UNTIL(GLAccount.NEXT=0);

          GLAccount.RESET;
          GLAccount.SETRANGE(GLAccount.MELCO,TRUE);
          GLAccount.SETFILTER(GLAccount."No.",Cost_Setup."Import Part");
          IF GLAccount.FINDSET THEN
            REPEAT
               IF (GLAccount."No."=GJLINE."Account No.") THEN
                 BEGIN
                     GJLINE.TESTFIELD(GJLINE."Quote No ( Project No.)");
                     GJLINE.TESTFIELD(GJLINE."Type Of Transaction",GJLINE."Type Of Transaction"::Direct);
                 END;
            UNTIL(GLAccount.NEXT=0);

          GLAccount.RESET;
          GLAccount.SETRANGE(GLAccount.MELCO,TRUE);
          GLAccount.SETFILTER(GLAccount."No.",Cost_Setup."Import Other");
          IF GLAccount.FINDSET THEN
            REPEAT
               IF (GLAccount."No."=GJLINE."Account No.") THEN
                 BEGIN
                     GJLINE.TESTFIELD(GJLINE."Quote No ( Project No.)");

                     IF (GJLINE."Type Of Transaction" <> GJLINE."Type Of Transaction"::Direct) THEN
                      IF (GJLINE."Type Of Transaction" <> GJLINE."Type Of Transaction"::Others) THEN
                          GJLINE.TESTFIELD(GJLINE."Type Of Transaction",GJLINE."Type Of Transaction"::Direct);
                 END;
            UNTIL(GLAccount.NEXT=0);

          GLAccount.RESET;
          GLAccount.SETRANGE(GLAccount.MELCO,TRUE);
          GLAccount.SETFILTER(GLAccount."No.",Cost_Setup."Local Material");
          IF GLAccount.FINDSET THEN
            REPEAT
               IF (GLAccount."No."=GJLINE."Account No.") THEN
                 BEGIN
                     GJLINE.TESTFIELD(GJLINE."Quote No ( Project No.)");
                     GJLINE.TESTFIELD(GJLINE."Type Of Transaction",GJLINE."Type Of Transaction"::Direct);
                 END;
            UNTIL(GLAccount.NEXT=0);

          GLAccount.RESET;
          GLAccount.SETRANGE(GLAccount.MELCO,TRUE);
          GLAccount.SETFILTER(GLAccount."No.",Cost_Setup."Local Part");
          IF GLAccount.FINDSET THEN
            REPEAT
               IF (GLAccount."No."=GJLINE."Account No.") THEN
                 BEGIN
                     GJLINE.TESTFIELD(GJLINE."Quote No ( Project No.)");
                     GJLINE.TESTFIELD(GJLINE."Type Of Transaction",GJLINE."Type Of Transaction"::Direct);
                 END;
            UNTIL(GLAccount.NEXT=0);

          GLAccount.RESET;
          GLAccount.SETRANGE(GLAccount.MELCO,TRUE);
          GLAccount.SETFILTER(GLAccount."No.",Cost_Setup."Local Other");
          IF GLAccount.FINDSET THEN
            REPEAT
               IF (GLAccount."No."=GJLINE."Account No.") THEN
                 BEGIN
                     GJLINE.TESTFIELD(GJLINE."Quote No ( Project No.)");
                     GJLINE.TESTFIELD(GJLINE."Type Of Transaction",GJLINE."Type Of Transaction"::Direct);
                 END;
            UNTIL(GLAccount.NEXT=0);

          GLAccount.RESET;
          GLAccount.SETRANGE(GLAccount.MELCO,TRUE);
          GLAccount.SETFILTER(GLAccount."No.",Cost_Setup."Sales Account Range");
          IF GLAccount.FINDSET THEN
            REPEAT
               IF (GLAccount."No."=GJLINE."Account No.") THEN
                 BEGIN
                     GJLINE.TESTFIELD(GJLINE."Quote No ( Project No.)");
                 END;
            UNTIL(GLAccount.NEXT=0);


       END;


      UNTIL GJLINE.NEXT = 0;
    END;

    PROCEDURE CheckValidateforExportSal_Repo@1000000003(SalesHdr@1102159001 : Record 36);
    BEGIN
      {//SMDEV1.0.begin-Old Code Commented
      PurchHdr.TESTFIELD(PurchHdr."Posting Date");
      PurchHdr.TESTFIELD(PurchHdr."Ship-to Name");
      PurchHdr.TESTFIELD(PurchHdr."Shipment Method Code");
      PurchHdr.TESTFIELD(PurchHdr."Vendor Cr. Memo No.");
      PurchHdr.TESTFIELD(PurchHdr.MEASURE);
      PurchHdr.TESTFIELD(PurchHdr."N.WEIGHT");
      PurchHdr.TESTFIELD(PurchHdr."G.WEIGHT");
      PurchHdr.TESTFIELD(PurchHdr."Total Case");
      PurchHdr.TESTFIELD(PurchHdr."Vessel Name / Voyage");
      PurchHdr.TESTFIELD(PurchHdr."G-Port Ref No.");
      PurchHdr.TESTFIELD(PurchHdr."B/L Date");
      PurchHdr.TESTFIELD(PurchHdr.Destination);
      PurchHdr.TESTFIELD(PurchHdr."Ship-to Contact");
      PurchHdr.TESTFIELD(PurchHdr."Document Date");
      PurchHdr.TESTFIELD(PurchHdr."Payment Method Code");
      PurchHdr.TESTFIELD(PurchHdr."Due Date");
      PurchHdr.TESTFIELD(PurchHdr."Case Mark");
      PurchHdr.TESTFIELD(PurchHdr."Attention / Division");
      }//SMDEV1.0.end

      //SMDEV1.0.begin-New Code
      SalesHdr.TESTFIELD(SalesHdr."Posting Date");
      SalesHdr.TESTFIELD(SalesHdr."Ship-to Name");
      SalesHdr.TESTFIELD(SalesHdr."Shipment Method Code");
      //SalesHdr.TESTFIELD(SalesHdr."Vendor Cr. Memo No."); //SMDEV1.0
      SalesHdr.TESTFIELD(SalesHdr."External Document No."); //SMDEV1.0
      SalesHdr.TESTFIELD(SalesHdr.MEASURE);
      SalesHdr.TESTFIELD(SalesHdr."N.WEIGHT");
      SalesHdr.TESTFIELD(SalesHdr."G.WEIGHT");
      SalesHdr.TESTFIELD(SalesHdr."Total Case");
      SalesHdr.TESTFIELD(SalesHdr."Vessel Name / Voyage");
      SalesHdr.TESTFIELD(SalesHdr."G-Port Ref No.");
      SalesHdr.TESTFIELD(SalesHdr."B/L Date");
      SalesHdr.TESTFIELD(SalesHdr.Destination);
      SalesHdr.TESTFIELD(SalesHdr."Ship-to Contact");
      SalesHdr.TESTFIELD(SalesHdr."Document Date");
      SalesHdr.TESTFIELD(SalesHdr."Payment Method Code");
      SalesHdr.TESTFIELD(SalesHdr."Due Date");
      SalesHdr.TESTFIELD(SalesHdr."Case Mark");
      SalesHdr.TESTFIELD(SalesHdr."Attention / Division");
      //SMDEV1.0.end
    END;

    PROCEDURE CheckValidation_Melco@1000000004();
    BEGIN
    END;

    PROCEDURE CheckPurValidationMelco@1000000006(PurchHead@1000000000 : Record 38);
    VAR
      PurHead@1000000001 : Record 38;
      AllQuote@1000000002 : Record 50024;
      SalesH@1000000003 : Record 36;
      PurchaseLine@1000000004 : Record 39;
      PurLine@1000000005 : Record 39;
      GLAccount@1000000007 : Record 15;
      Cost_Setup@1000000006 : Record 60009;
    BEGIN
      MasterSetup.GET;

      CheckDueDatePurchase(PurchHead); //09102013/VK/CR#021

      //***********************************************************************************************************************

      IF (PurchHead."Document Type"=PurchHead."Document Type"::Quote) THEN
           IF (PurchHead."Type Of Transaction"=PurchHead."Type Of Transaction"::Claim) THEN
                    PurchHead.TESTFIELD(PurchHead."Quote No ( Project No.)")
              ELSE
                    PurchHead.TESTFIELD(PurchHead."Quote No ( Project No.)",'');


      //********************The Above Code Means Only Claim Type of Quote Can Have Project No Else BLANK***********************



      IF (PurchHead."Document Type"=PurchHead."Document Type"::Order) THEN
      BEGIN
           IF (PurchHead."Type Of Transaction"=PurchHead."Type Of Transaction"::Indirect) THEN
                     PurchHead.TESTFIELD(PurchHead.ExpansesCode);

           IF (PurchHead."Type Of Transaction"=PurchHead."Type Of Transaction"::Direct) THEN
                     PurchHead.TESTFIELD(PurchHead."Quote No ( Project No.)");

      END;
      //********************The Above Code Means Only Indirect Type of Quote Can Have Expanses Code Else BLANK***********************


      IF (PurchHead."Document Type"=PurchHead."Document Type"::"Credit Memo") AND
              (PurchHead.Deposit) AND (PurchHead."Reason Code"=MasterSetup."Reason (Purchase as Sale)") THEN
                       PurchHead.TESTFIELD(PurchHead."Quote No ( Project No.)");

      //******************************************************************************************

      AllQuote.RESET;
      AllQuote.SETRANGE(AllQuote."Quote No.",PurchHead."Quote No ( Project No.)");
      IF AllQuote.FINDFIRST THEN;


      IF (PurchHead."Document Type"=PurchHead."Document Type"::Quote) AND
      (PurchHead."Quote No ( Project No.)"<>'') AND
      (NOT (AllQuote.InitialEntry)) THEN
      BEGIN
      PurHead.RESET;
      PurHead.SETRANGE(PurHead."No.",PurchHead."Quote No ( Project No.)");
               IF NOT (PurHead.FINDFIRST) THEN
                    ERROR(Text012)
                    ELSE
                   IF (PurHead."Buy-from Vendor No."<>PurchHead."Buy-from Vendor No.") THEN
                       ERROR(Text011);

      END;


      IF (PurchHead."Document Type"=PurchHead."Document Type"::"Credit Memo") AND
      (PurchHead."Quote No ( Project No.)"<>'') AND (PurchHead.Deposit) AND ((NOT (AllQuote.InitialEntry))) THEN
      BEGIN
      PurHead.RESET;
      PurHead.SETRANGE(PurHead."No.",PurchHead."Quote No ( Project No.)");
               IF NOT (PurHead.FINDFIRST) THEN
                    ERROR(Text012)
                    ELSE
                   IF (PurHead."Buy-from Vendor No."<>PurchHead."Buy-from Vendor No.") THEN
                       ERROR(Text011);



      END;

      //*****************************************************************************************

      IF (PurchHead."Document Type"=PurchHead."Document Type"::Order) AND
      (PurchHead."Quote No ( Project No.)"<>'')  THEN
      BEGIN
       AllQuote.RESET;
       AllQuote.SETRANGE(AllQuote."Quote No.",PurchHead."Quote No ( Project No.)");

       IF (AllQuote.FINDFIRST) AND (NOT (AllQuote.InitialEntry)) THEN

        BEGIN

          IF (AllQuote."Source Type"=AllQuote."Source Type"::Customer) THEN
              BEGIN
              SalesH.RESET;
              SalesH.SETRANGE(SalesH."No.",PurchHead."Quote No ( Project No.)");
                  IF SalesH.FINDFIRST THEN
                      SalesH.TESTFIELD(SalesH.Blocked,FALSE);
              END;


         IF (AllQuote."Source Type"=AllQuote."Source Type"::Vendor) THEN
             BEGIN
             PurHead.RESET;
             PurHead.SETRANGE(PurHead."Document Type",PurHead."Document Type"::Quote);
             PurHead.SETRANGE(PurHead."No.",PurchHead."Quote No ( Project No.)");

               IF NOT (PurHead.FINDFIRST) THEN
                    ERROR(Text012)
                    ELSE
                    PurHead.TESTFIELD(PurHead.Blocked,FALSE);

             END;

        END;

      END;

      //*******************************************************************************************


      IF (PurchHead."Document Type"=PurchHead."Document Type"::Invoice) AND
      (PurchHead."Reason Code"=MasterSetup."Reason (Normal)") THEN

      BEGIN

          IF (PurchHead."Type Of Transaction"=PurchHead."Type Of Transaction"::" ") THEN
             ERROR(Text013);

           IF (PurchHead."Type Of Transaction"=PurchHead."Type Of Transaction"::Indirect) THEN
                     PurchHead.TESTFIELD(PurchHead.ExpansesCode);

           IF (PurchHead."Type Of Transaction"=PurchHead."Type Of Transaction"::Direct) THEN
                     PurchHead.TESTFIELD(PurchHead."Quote No ( Project No.)");

      END;


      //***********************************************************************************************



      IF (PurchHead."Document Type"=PurchHead."Document Type"::"Credit Memo") AND
      (PurchHead."Reason Code"=MasterSetup."Reason (Normal)") THEN

      BEGIN

          IF (PurchHead."Type Of Transaction"=PurchHead."Type Of Transaction"::" ") THEN
             ERROR(Text013);

           IF (PurchHead."Type Of Transaction"=PurchHead."Type Of Transaction"::Indirect) THEN
                     PurchHead.TESTFIELD(PurchHead.ExpansesCode);

           IF (PurchHead."Type Of Transaction"=PurchHead."Type Of Transaction"::Direct) THEN
                     PurchHead.TESTFIELD(PurchHead."Quote No ( Project No.)");

      END;

      //*********************************************************************************************



      IF ((PurchHead."Reason Code"=MasterSetup."Reason (Purchase as Sale)")) AND
         ((PurchHead."Document Type"=PurchHead."Document Type"::"Credit Memo") OR
         (PurchHead."Document Type"=PurchHead."Document Type"::Invoice))
       THEN

      BEGIN


          IF (PurchHead."Type Of Transaction"=PurchHead."Type Of Transaction"::" ") THEN
             ERROR(Text013);


           IF (PurchHead."Type Of Transaction"=PurchHead."Type Of Transaction"::Direct) THEN
                     PurchHead.TESTFIELD(PurchHead."Quote No ( Project No.)");

      END;


      //************************************************************************************************


      IF ((PurchHead."Reason Code"=MasterSetup."Reason (Purchase as Sale)")) AND
         ((PurchHead."Document Type"=PurchHead."Document Type"::"Credit Memo") OR
         (PurchHead."Document Type"=PurchHead."Document Type"::Invoice)) AND
         (PurchHead."Type Of Transaction"=PurchHead."Type Of Transaction"::Direct)
       THEN

      BEGIN

         PurchaseLine.RESET;
         PurchaseLine.SETRANGE(PurchaseLine."Document Type",PurchHead."Document Type");
         PurchaseLine.SETRANGE(PurchaseLine."Document No.",PurchHead."No.");

        IF (PurchaseLine.FINDSET) THEN
           REPEAT

              PurchaseLine.TESTFIELD(PurchaseLine."Quote No ( Project No.)");
          UNTIL(PurchaseLine.NEXT=0);

      END;

      //***********************************************************************************************



      //***********************TO CHECK QUOTE NO ON PURCHASE LINE***********************
      IF ((PurchHead."Reason Code"=MasterSetup."Reason (Normal)")) THEN
         IF  (
         (PurchHead."Document Type"=PurchHead."Document Type"::"Credit Memo") OR
         (PurchHead."Document Type"=PurchHead."Document Type"::Invoice)
         )
          AND
         (PurchHead."Type Of Transaction"=PurchHead."Type Of Transaction"::Direct)
       THEN

      BEGIN

         PurchaseLine.RESET;
         PurchaseLine.SETRANGE(PurchaseLine."Document Type",PurchHead."Document Type");
         PurchaseLine.SETRANGE(PurchaseLine."Document No.",PurchHead."No.");

        IF (PurchaseLine.FINDSET) THEN
           REPEAT

              PurchaseLine.TESTFIELD(PurchaseLine."Quote No ( Project No.)");
          UNTIL(PurchaseLine.NEXT=0);

      END;

      //***************************************************************************************

      PurLine.RESET;
      PurLine.SETRANGE(PurLine."Document Type",PurchHead."Document Type");
      PurLine.SETRANGE(PurLine."Document No.",PurchHead."No.");

       IF PurLine.FINDSET THEN
        REPEAT
          Cost_Setup.GET;
          GLAccount.RESET;
          GLAccount.SETRANGE(GLAccount.MELCO,TRUE);
          GLAccount.SETFILTER(GLAccount."No.",Cost_Setup."Import Material");
          IF GLAccount.FINDSET THEN
            REPEAT
               IF (GLAccount."No."=PurLine."No.") THEN
                 BEGIN
                     PurLine.TESTFIELD(PurLine."Quote No ( Project No.)");
                 END;
            UNTIL(GLAccount.NEXT=0);


          GLAccount.RESET;
          GLAccount.SETRANGE(GLAccount.MELCO,TRUE);
          GLAccount.SETFILTER(GLAccount."No.",Cost_Setup."Import Part");
          IF GLAccount.FINDSET THEN
            REPEAT
               IF (GLAccount."No."=PurLine."No.") THEN
                 BEGIN
                     PurLine.TESTFIELD(PurLine."Quote No ( Project No.)");
                 END;
            UNTIL(GLAccount.NEXT=0);


          GLAccount.RESET;
          GLAccount.SETRANGE(GLAccount.MELCO,TRUE);
          GLAccount.SETFILTER(GLAccount."No.",Cost_Setup."Import Other");
          IF GLAccount.FINDSET THEN
            REPEAT
               IF (GLAccount."No."=PurLine."No.") THEN
                 BEGIN
                     PurLine.TESTFIELD(PurLine."Quote No ( Project No.)");
                 END;
            UNTIL(GLAccount.NEXT=0);

          GLAccount.RESET;
          GLAccount.SETRANGE(GLAccount.MELCO,TRUE);
          GLAccount.SETFILTER(GLAccount."No.",Cost_Setup."Local Material");
          IF GLAccount.FINDSET THEN
            REPEAT
               IF (GLAccount."No."=PurLine."No.") THEN
                 BEGIN
                     PurLine.TESTFIELD(PurLine."Quote No ( Project No.)");
                 END;
            UNTIL(GLAccount.NEXT=0);

          GLAccount.RESET;
          GLAccount.SETRANGE(GLAccount.MELCO,TRUE);
          GLAccount.SETFILTER(GLAccount."No.",Cost_Setup."Local Part");
          IF GLAccount.FINDSET THEN
            REPEAT
               IF (GLAccount."No."=PurLine."No.") THEN
                 BEGIN
                     PurLine.TESTFIELD(PurLine."Quote No ( Project No.)");
                 END;
            UNTIL(GLAccount.NEXT=0);

          GLAccount.RESET;
          GLAccount.SETRANGE(GLAccount.MELCO,TRUE);
          GLAccount.SETFILTER(GLAccount."No.",Cost_Setup."Local Other");
          IF GLAccount.FINDSET THEN
            REPEAT
               IF (GLAccount."No."=PurLine."No.") THEN
                 BEGIN
                     PurLine.TESTFIELD(PurLine."Quote No ( Project No.)");
                 END;
            UNTIL(GLAccount.NEXT=0);


        UNTIL(PurLine.NEXT=0);


      //********************************************************************************************


      IF ((PurchHead."Reason Code"=MasterSetup."Reason (Normal)")) THEN
         IF  (
         (PurchHead."Document Type"=PurchHead."Document Type"::"Credit Memo") OR
         (PurchHead."Document Type"=PurchHead."Document Type"::Invoice)
         )
          AND
         (PurchHead."Type Of Transaction"=PurchHead."Type Of Transaction"::Direct)
       THEN

      BEGIN

         PurchaseLine.RESET;
         PurchaseLine.SETRANGE(PurchaseLine."Document Type",PurchHead."Document Type");
         PurchaseLine.SETRANGE(PurchaseLine."Document No.",PurchHead."No.");

        IF (PurchaseLine.FINDSET) THEN
           REPEAT

              PurchaseLine.TESTFIELD(PurchaseLine."Quote No ( Project No.)",PurchHead."Quote No ( Project No.)");
          UNTIL(PurchaseLine.NEXT=0);

      END;


      //*************************TO CHECK QUOTE NO ON PURCHASE LINE**************************
    END;

    PROCEDURE CheckSalesValidationMelco@1000000007(SaleHeader@1000000000 : Record 36);
    VAR
      SalesHeader@1000000001 : Record 36;
      AllQuote@1000000002 : Record 50024;
      PurH@1000000003 : Record 38;
      SalesLine@1000000004 : Record 37;
      SalLine@1000000005 : Record 37;
      GLAccount@1000000007 : Record 15;
      Cost_Setup@1000000006 : Record 60009;
    BEGIN
      MasterSetup.GET;

      CheckDueDateSales(SaleHeader); //09102013/VK/CR#021

      //***********************************************************************************************************************

      IF (SaleHeader."Document Type"=SaleHeader."Document Type"::Quote) THEN
           IF (SaleHeader."Type Of Transaction"=SaleHeader."Type Of Transaction"::Claim) THEN
                    SaleHeader.TESTFIELD(SaleHeader."Quote No ( Project No.)")
              ELSE
                    SaleHeader.TESTFIELD(SaleHeader."Quote No ( Project No.)",'');


      //********************The Above Code Means Only Claim Type of Quote Can Have Project No Else BLANK***********************


      IF (SaleHeader."Document Type"=SaleHeader."Document Type"::Order) THEN
      BEGIN
           IF (SaleHeader."Type Of Transaction"=SaleHeader."Type Of Transaction"::Indirect) THEN
                     SaleHeader.TESTFIELD(SaleHeader.ExpansesCode);
           IF (SaleHeader."Type Of Transaction"=SaleHeader."Type Of Transaction"::Direct) THEN
                     SaleHeader.TESTFIELD(SaleHeader."Quote No ( Project No.)");

      END;

      //********************The Above Code Means Only Indirect Type of Quote Can Have Expanses Code Else BLANK***********************


      IF (SaleHeader."Document Type"=SaleHeader."Document Type"::Invoice) AND
              (SaleHeader.Deposit) AND (SaleHeader."Reason Code"=MasterSetup."Reason (Normal)") THEN
                       SaleHeader.TESTFIELD(SaleHeader."Quote No ( Project No.)");

      //******************************************************************************************
      AllQuote.RESET;
      AllQuote.SETRANGE(AllQuote."Quote No.",SaleHeader."Quote No ( Project No.)");
        IF AllQuote.FINDFIRST THEN;

      IF (SaleHeader."Document Type"=SaleHeader."Document Type"::Quote) AND
      (SaleHeader."Quote No ( Project No.)"<>'') AND ((NOT (AllQuote.InitialEntry))) THEN
      BEGIN
      SalesHeader.RESET;
      SalesHeader.SETRANGE(SalesHeader."No.",SaleHeader."Quote No ( Project No.)");
               IF NOT (SalesHeader.FINDFIRST) THEN
                  ERROR(Text012)
                  ELSE
                   IF (SaleHeader."Sell-to Customer No."<>SalesHeader."Sell-to Customer No.") THEN
                       ERROR(Text010);



      END;


      //******************************************************************************************

      AllQuote.RESET;
      AllQuote.SETRANGE(AllQuote."Quote No.",SaleHeader."Quote No ( Project No.)");
        IF AllQuote.FINDFIRST THEN;


      IF (SaleHeader."Document Type"=SaleHeader."Document Type"::Invoice) AND
      (SaleHeader."Quote No ( Project No.)"<>'') AND (SaleHeader.Deposit) AND
      (NOT (AllQuote.InitialEntry)) THEN
      BEGIN
      SalesHeader.RESET;
      SalesHeader.SETRANGE(SalesHeader."No.",SaleHeader."Quote No ( Project No.)");


               IF NOT (SalesHeader.FINDFIRST)  THEN
                  ERROR(Text012)
                  ELSE
                   IF (SaleHeader."Sell-to Customer No."<>SalesHeader."Sell-to Customer No.") THEN
                       ERROR(Text010);



      END;

      //*******************************************************************************************

      IF (SaleHeader."Document Type"=SaleHeader."Document Type"::Order) AND
      (SaleHeader."Quote No ( Project No.)"<>'')  THEN
      BEGIN
       AllQuote.RESET;
       AllQuote.SETRANGE(AllQuote."Quote No.",SaleHeader."Quote No ( Project No.)");
       IF ((AllQuote.FINDFIRST) AND (NOT (AllQuote.InitialEntry))) THEN

       BEGIN  //BEGIN-1

          IF (AllQuote."Source Type"=AllQuote."Source Type"::Vendor) THEN
              BEGIN
              PurH.RESET;
              PurH.SETRANGE(PurH."No.",SaleHeader."Quote No ( Project No.)");
                  IF PurH.FINDFIRST THEN
                      PurH.TESTFIELD(PurH.Blocked,FALSE);
              END;

          IF (AllQuote."Source Type"=AllQuote."Source Type"::Customer) THEN
           BEGIN

           SalesHeader.RESET;
           SalesHeader.SETRANGE(SalesHeader."No.",SaleHeader."Quote No ( Project No.)");
                IF NOT (SalesHeader.FINDFIRST) THEN
                   ERROR(Text012)
                ELSE
                  SalesHeader.TESTFIELD(SalesHeader.Blocked,FALSE);
           END;


       END;  //End-1


      END; // End of TOP


      //*****************************************************************************************

      IF (SaleHeader."Document Type"=SaleHeader."Document Type"::"Credit Memo") AND
      (SaleHeader."Reason Code"=MasterSetup."Reason (Sale as Purchase)") THEN
      BEGIN

           IF (SaleHeader."Type Of Transaction"=SaleHeader."Type Of Transaction"::" ") THEN
              ERROR(Text013);


           IF (SaleHeader."Type Of Transaction"=SaleHeader."Type Of Transaction"::Indirect) THEN
               SaleHeader.TESTFIELD(SaleHeader.ExpansesCode);

           IF (SaleHeader."Type Of Transaction"=SaleHeader."Type Of Transaction"::Direct) THEN
                     SaleHeader.TESTFIELD(SaleHeader."Quote No ( Project No.)");



      END;
      //******************************************************************************************


      IF (SaleHeader."Document Type"=SaleHeader."Document Type"::Invoice) AND
      (SaleHeader."Reason Code"=MasterSetup."Reason (Sale as Purchase)") THEN
      BEGIN

           IF (SaleHeader."Type Of Transaction"=SaleHeader."Type Of Transaction"::" ") THEN
              ERROR(Text013);


           IF (SaleHeader."Type Of Transaction"=SaleHeader."Type Of Transaction"::Indirect) THEN
               SaleHeader.TESTFIELD(SaleHeader.ExpansesCode);

           IF (SaleHeader."Type Of Transaction"=SaleHeader."Type Of Transaction"::Direct) THEN
                     SaleHeader.TESTFIELD(SaleHeader."Quote No ( Project No.)");



      END;


      //*******************************************************************************************

      IF (SaleHeader."Reason Code"=MasterSetup."Reason (Normal)") AND
      ((SaleHeader."Document Type"=SaleHeader."Document Type"::Invoice) OR
       (SaleHeader."Document Type"=SaleHeader."Document Type"::"Credit Memo"))

       THEN
      BEGIN

           IF (SaleHeader."Type Of Transaction"=SaleHeader."Type Of Transaction"::" ") THEN
              ERROR(Text013);



           IF (SaleHeader."Type Of Transaction"=SaleHeader."Type Of Transaction"::Direct) THEN
                     SaleHeader.TESTFIELD(SaleHeader."Quote No ( Project No.)");



      END;

      //*********************************************************************************************


      IF (SaleHeader."Reason Code"=MasterSetup."Reason (Normal)") AND
      ((SaleHeader."Document Type"=SaleHeader."Document Type"::Invoice) OR
       (SaleHeader."Document Type"=SaleHeader."Document Type"::"Credit Memo")) AND
       ((SaleHeader."Type Of Transaction"=SaleHeader."Type Of Transaction"::Direct)) THEN
      BEGIN

      SalesLine.RESET;
      SalesLine.SETRANGE(SalesLine."Document Type",SaleHeader."Document Type");
      SalesLine.SETRANGE(SalesLine."Document No.",SaleHeader."No.");

       IF SalesLine.FINDSET THEN
        REPEAT

        SalesLine.TESTFIELD(SalesLine."Quote No ( Project No.)");

        UNTIL(SalesLine.NEXT=0);


      END;



      //******************************************************************************************

      SalLine.RESET;
      SalLine.SETRANGE(SalLine."Document Type",SaleHeader."Document Type");
      SalLine.SETRANGE(SalLine."Document No.",SaleHeader."No.");

       IF SalLine.FINDSET THEN
        REPEAT
          Cost_Setup.GET;
          GLAccount.RESET;
          GLAccount.SETRANGE(GLAccount.MELCO,TRUE);
          GLAccount.SETFILTER(GLAccount."No.",Cost_Setup."Import Material");
          IF GLAccount.FINDSET THEN
            REPEAT
               IF (GLAccount."No."=SalLine."No.") THEN
                 BEGIN
                     SalLine.TESTFIELD(SalLine."Quote No ( Project No.)");
                 END;
            UNTIL(GLAccount.NEXT=0);


          GLAccount.RESET;
          GLAccount.SETRANGE(GLAccount.MELCO,TRUE);
          GLAccount.SETFILTER(GLAccount."No.",Cost_Setup."Import Part");
          IF GLAccount.FINDSET THEN
            REPEAT
               IF (GLAccount."No."=SalLine."No.") THEN
                 BEGIN
                     SalLine.TESTFIELD(SalLine."Quote No ( Project No.)");
                 END;
            UNTIL(GLAccount.NEXT=0);


          GLAccount.RESET;
          GLAccount.SETRANGE(GLAccount.MELCO,TRUE);
          GLAccount.SETFILTER(GLAccount."No.",Cost_Setup."Import Other");
          IF GLAccount.FINDSET THEN
            REPEAT
               IF (GLAccount."No."=SalLine."No.") THEN
                 BEGIN
                     SalLine.TESTFIELD(SalLine."Quote No ( Project No.)");
                 END;
            UNTIL(GLAccount.NEXT=0);

          GLAccount.RESET;
          GLAccount.SETRANGE(GLAccount.MELCO,TRUE);
          GLAccount.SETFILTER(GLAccount."No.",Cost_Setup."Local Material");
          IF GLAccount.FINDSET THEN
            REPEAT
               IF (GLAccount."No."=SalLine."No.") THEN
                 BEGIN
                     SalLine.TESTFIELD(SalLine."Quote No ( Project No.)");
                 END;
            UNTIL(GLAccount.NEXT=0);

          GLAccount.RESET;
          GLAccount.SETRANGE(GLAccount.MELCO,TRUE);
          GLAccount.SETFILTER(GLAccount."No.",Cost_Setup."Local Part");
          IF GLAccount.FINDSET THEN
            REPEAT
               IF (GLAccount."No."=SalLine."No.") THEN
                 BEGIN
                     SalLine.TESTFIELD(SalLine."Quote No ( Project No.)");
                 END;
            UNTIL(GLAccount.NEXT=0);

          GLAccount.RESET;
          GLAccount.SETRANGE(GLAccount.MELCO,TRUE);
          GLAccount.SETFILTER(GLAccount."No.",Cost_Setup."Local Other");
          IF GLAccount.FINDSET THEN
            REPEAT
               IF (GLAccount."No."=SalLine."No.") THEN
                 BEGIN
                     SalLine.TESTFIELD(SalLine."Quote No ( Project No.)");
                 END;
            UNTIL(GLAccount.NEXT=0);


        UNTIL(SalLine.NEXT=0);



      //********************************************************************************************

      IF (SaleHeader."Reason Code"=MasterSetup."Reason (Normal)") AND
      ((SaleHeader."Document Type"=SaleHeader."Document Type"::Invoice) OR
       (SaleHeader."Document Type"=SaleHeader."Document Type"::"Credit Memo")) AND
       ((SaleHeader."Type Of Transaction"=SaleHeader."Type Of Transaction"::Direct)) THEN
      BEGIN

      SalesLine.RESET;
      SalesLine.SETRANGE(SalesLine."Document Type",SaleHeader."Document Type");
      SalesLine.SETRANGE(SalesLine."Document No.",SaleHeader."No.");

       IF SalesLine.FINDSET THEN
        REPEAT

        SalesLine.TESTFIELD(SalesLine."Quote No ( Project No.)",SaleHeader."Quote No ( Project No.)");

        UNTIL(SalesLine.NEXT=0);


      END;

      //END;
    END;

    PROCEDURE ">>CR#021"@1102159009();
    BEGIN
    END;

    PROCEDURE CheckDueDateSales@1102159001(RecSalesHeader@1102159001 : Record 36);
    BEGIN
      MasterSetup.GET;

      IF (COMPANYNAME=MasterSetup."Company Name MELCO") THEN BEGIN
        IF ((RecSalesHeader."Document Type"=RecSalesHeader."Document Type"::Quote) OR
            (RecSalesHeader."Document Type"=RecSalesHeader."Document Type"::Order))THEN BEGIN
          IF (((RecSalesHeader."Due Date") < (RecSalesHeader."Document Date")) OR
             ((RecSalesHeader."Due Date") < (RecSalesHeader."Order Date")) OR
             ((RecSalesHeader."Due Date") < (RecSalesHeader."Posting Date"))) THEN
                ERROR(Text015);
        END ELSE BEGIN
          IF (((RecSalesHeader."Due Date") < (RecSalesHeader."Document Date")) OR
             ((RecSalesHeader."Due Date") < (RecSalesHeader."Posting Date"))) THEN
                ERROR(Text007);
        END;
      END ELSE BEGIN
        IF (((RecSalesHeader."Due Date") < (RecSalesHeader."Document Date")) OR
             ((RecSalesHeader."Due Date") < (RecSalesHeader."Posting Date"))) THEN
               ERROR(Text007);
      END;
    END;

    PROCEDURE CheckDueDatePurchase@1102159003(RecPurchaseHeader@1102159001 : Record 38);
    BEGIN
      MasterSetup.GET;

      IF (COMPANYNAME=MasterSetup."Company Name MELCO") THEN BEGIN
        IF ((RecPurchaseHeader."Document Type"=RecPurchaseHeader."Document Type"::Quote) OR
            (RecPurchaseHeader."Document Type"=RecPurchaseHeader."Document Type"::Order))THEN BEGIN
          IF (((RecPurchaseHeader."Due Date") < (RecPurchaseHeader."Document Date")) OR
             ((RecPurchaseHeader."Due Date") < (RecPurchaseHeader."Order Date")) OR
             ((RecPurchaseHeader."Due Date") < (RecPurchaseHeader."Posting Date"))) THEN
                ERROR(Text015);
        END ELSE BEGIN
          IF (((RecPurchaseHeader."Due Date") < (RecPurchaseHeader."Document Date")) OR
             ((RecPurchaseHeader."Due Date") < (RecPurchaseHeader."Posting Date"))) THEN
                ERROR(Text007);
        END;
      END ELSE BEGIN
        IF (((RecPurchaseHeader."Due Date") < (RecPurchaseHeader."Document Date")) OR
             ((RecPurchaseHeader."Due Date") < (RecPurchaseHeader."Posting Date"))) THEN
               ERROR(Text007);
      END;
    END;

    PROCEDURE "<<CR#021"@1102159011();
    BEGIN
    END;

    PROCEDURE ">>YIMMDEVIP1.0"@1102159002();
    BEGIN
    END;

    PROCEDURE CheckTaxInvoiceDateSales@1102159004(RecSalesHeader@1102159001 : Record 36);
    BEGIN
        SalesLine.RESET;
        SalesLine.SETRANGE(SalesLine."Document Type",RecSalesHeader."Document Type");
        SalesLine.SETRANGE(SalesLine."Document No.",RecSalesHeader."No.");
        IF SalesLine.FINDSET THEN REPEAT
           IF (SalesLine."Tax Invoice Date" <> 0D) THEN BEGIN

          Date3MonthsAgo := CALCDATE('<-CM>',CALCDATE('<-3M>',RecSalesHeader."Posting Date"));
          CurrentMonthLastDate := CALCDATE('<CM>',RecSalesHeader."Posting Date");

            IF((SalesLine."Tax Invoice Date") < ( Date3MonthsAgo)) THEN
                ERROR(Text017);
            IF((SalesLine."Tax Invoice Date") > (CurrentMonthLastDate)) THEN
                ERROR(Text018);
          END;
      UNTIL SalesLine.NEXT = 0;
    END;

    PROCEDURE "<<YIMMDEVIP1.0"@1102159005();
    BEGIN
    END;

    BEGIN
    {
      //TBI1.0 CODE ADDED FOR DIM KEY AS PER TBI FOR COMPANY NAME TBI

      //YIMMG1.0 Slip Amount rounded to 2 places while comparing slip amount in case of correction

      //TBI1.1 CODE ADDED TO CHECK DUPLICATE EXTERNAL DOC NO.

      //YIMM1.0 FUNCTION ADDED FOR CHECKING THE MANDATORY FIELDS REQUIRED IN THE REPORT OF VENDOR SALES INVOICE FOR EXPORT.
             - Code added for checking default dimension on GL Account. If user forget to fill the dimension value then system
             will give error.


      //YIMM-RY-MELCO - FUNCTION ADDED FOR MELCO SPECIFIC VALIDATION
      //MElco.10-NTN

      Date               Sign              Ref_ID                Description
      09102013            VK               CR#021                New Functions 'CheckDueDateSales' & 'CheckDueDatePurchase' added for
                                                                 Due Date Validations with Document Date,Posting Date and Order Date.
      02122013            VK               CR#022                YIMM Discount Lines check.

      //UPG13C
       Code added or edited to solve complation errors after migrating merged and customized objects to 2013 from 2009 R2
       Commenting code as table 357 does not exist in 2013 .


      //YIMMDEVIP1.0
      1. Issue no.38
      New Functions 'CheckTaxInvoiceDateSales' added for Validation of Tax Invoice date with posting date.
      Variables added:
      Date3MonthsAgo       Date
      CurrentMonthLastDate Date
      SalesLine            Record  Sales Line

      Text Constant:
      Text017
      Text018

      2. Issue no.20/ NPKP Validation for VAT.
      Wrote Code for the issue  and variable created
      orderAddress    Record   order Address
      Shiptoaddress   Record   Ship-To Address
      Text Constant   Text019

      //YIMMDEVIP1.0
      a)Code Commented For "Actual Credit Memo"=False and made True to solve the Copy Document Slip amount error in Sales Credit Memo.
      b)New Code also commented as Copy Doc Functionality will be used now.
      c)Validation added for Bank Code in case of AP.
      d)Validation added for NPWP No. if VAT and WHT is applied in AP.
      e) Code modified for DEfault Dimension Validation
      f)Code modified for Blank Quantity & Negative Amount Validation in function CheckSalesValidation

      //SMDEV1.0
      1.Change made to code to reach a condition where if purchase from customer then error should be for AP and in sales for AR.
      2.Also to change testfield message on Customer Posting group added code so that Text201 message should appear.
      3.Function "CheckValidateforExportSal_Repo" modified for Export Invoices.Purchase Hdr is changed to Sales Hdr.
    }
    END.
  }
}

