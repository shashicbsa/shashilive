OBJECT Codeunit 358 DateFilter-Calc
{
  OBJECT-PROPERTIES
  {
    Date=09/07/12;
    Time=12:00:00;
    Version List=NAVW17.00,NAVAPAC7.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Fiscal Year %1;ENA=Fiscal Year %1';
      AccountingPeriod@1001 : Record 50;
      StartDate@1002 : Date;
      Text28160@1500002 : TextConst 'ENU=The selected date is not a starting period.;ENA=The selected date is not a starting period.';
      Text28161@1500001 : TextConst 'ENU=The starting date must be the first day of a month.;ENA=The starting date must be the first day of a month.';
      Text28162@1500000 : TextConst 'ENU=The ending date must be the last day of a month.;ENA=The ending date must be the last day of a month.';

    PROCEDURE CreateFiscalYearFilter@3(VAR Filter@1000 : Text[30];VAR Name@1001 : Text[30];Date@1002 : Date;NextStep@1003 : Integer);
    BEGIN
      CreateAccountingDateFilter(Filter,Name,TRUE,Date,NextStep);
    END;

    PROCEDURE CreateAccountingPeriodFilter@2(VAR Filter@1000 : Text[30];VAR Name@1001 : Text[30];Date@1002 : Date;NextStep@1003 : Integer);
    BEGIN
      CreateAccountingDateFilter(Filter,Name,FALSE,Date,NextStep);
    END;

    PROCEDURE CreateAccountingDateFilter@1(VAR Filter@1000 : Text[30];VAR Name@1001 : Text[30];FiscalYear@1002 : Boolean;Date@1003 : Date;NextStep@1004 : Integer);
    BEGIN
      AccountingPeriod.RESET;
      IF FiscalYear THEN
        AccountingPeriod.SETRANGE("New Fiscal Year",TRUE);
      AccountingPeriod."Starting Date" := Date;
      AccountingPeriod.FIND('=<>');
      IF AccountingPeriod."Starting Date" > Date THEN
        NextStep := NextStep - 1;
      IF NextStep <> 0 THEN
        IF AccountingPeriod.NEXT(NextStep) <> NextStep THEN BEGIN
          IF NextStep < 0 THEN
            Filter := '..' + FORMAT(AccountingPeriod."Starting Date" - 1)
          ELSE
            Filter := FORMAT(AccountingPeriod."Starting Date") + '..' + FORMAT(12319999D);
          Name := '...';
          EXIT;
        END;
      StartDate := AccountingPeriod."Starting Date";
      IF FiscalYear THEN
        Name := STRSUBSTNO(Text000,FORMAT(DATE2DMY(StartDate,3)))
      ELSE
        Name := AccountingPeriod.Name;
      IF AccountingPeriod.NEXT <> 0 THEN
        Filter := FORMAT(StartDate) + '..' + FORMAT(AccountingPeriod."Starting Date" - 1)
      ELSE BEGIN
        Filter := FORMAT(StartDate) + '..' + FORMAT(12319999D);
        Name := Name + '...';
      END;
    END;

    PROCEDURE VerifiyDateFilter@1500000(Filter@1500000 : Text[30]);
    BEGIN
      IF Filter = ',,,' THEN
        ERROR(Text28160);
    END;

    PROCEDURE VerifMonthPeriod@1500001(Filter@1500000 : Text[30]);
    VAR
      Date@1500007 : Record 2000000007;
      EndingDate@1500006 : Date;
      EndingFilter@1500005 : Text[8];
      EndingMonth@1500004 : Integer;
      EndingYear@1500003 : Integer;
      EndingDay@1500002 : Integer;
      EndingPos@1500001 : Integer;
    BEGIN
      IF COPYSTR(Filter,STRLEN(Filter) - 1,2) = '..' THEN
        EXIT;
      IF COPYSTR(Filter,1,2) <> '01' THEN
        ERROR(Text28161);
      EndingPos := STRPOS(Filter,'..');
      IF EndingPos <> 0 THEN BEGIN
        EndingFilter := COPYSTR(Filter,EndingPos + 2,8);
        EVALUATE(EndingDay,COPYSTR(EndingFilter,1,2));
        EVALUATE(EndingMonth,COPYSTR(EndingFilter,4,2));
        EVALUATE(EndingYear,COPYSTR(EndingFilter,7,2));
        IF EndingYear < 100 THEN
          EndingYear := EndingYear + 2000;
        EndingDate := DMY2DATE(EndingDay,EndingMonth,EndingYear);
        Date.SETRANGE("Period Type",Date."Period Type"::Month);
        Date.SETRANGE(Date."Period End",CLOSINGDATE(EndingDate));
        IF NOT Date.FIND('-') THEN
          ERROR(Text28162);
      END;
    END;

    PROCEDURE ReturnEndingPeriod@1500002(StartPeriod@1500001 : Date;PeriodType@1500000 : 'Date,Week,Month,Quarter,Year') : Date;
    VAR
      PeriodDate@1500002 : Record 2000000007;
    BEGIN
      PeriodDate.SETRANGE("Period Type",PeriodType);
      PeriodDate.SETRANGE("Period Start",StartPeriod);
      IF PeriodDate.FIND('-') THEN
        EXIT(PeriodDate."Period End")
      ELSE
        EXIT(0D);
    END;

    BEGIN
    END.
  }
}

