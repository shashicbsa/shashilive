OBJECT Table 50046 Paragraph Setup
{
  OBJECT-PROPERTIES
  {
    Date=09/28/10;
    Time=13:13:30;
    Version List=YIMMACP,SIIO;
  }
  PROPERTIES
  {
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code10         }
    { 2   ;   ;Para1               ;Text250        }
    { 3   ;   ;Para2               ;Text250        }
    { 4   ;   ;Para3               ;Text250        }
    { 5   ;   ;Para4               ;Text250        }
    { 6   ;   ;Para5               ;Text250        }
    { 7   ;   ;Syarat Pembayaran   ;Text250        }
    { 8   ;   ;Keterangan          ;Text250        }
    { 9   ;   ;Terbilang           ;Text250        }
    { 10  ;   ;Ordering Dept Sign  ;Text250        }
    { 11  ;   ;General Affair Sign ;Text250        }
    { 12  ;   ;Para6               ;Text250        }
    { 13  ;   ;Para7               ;Text250        }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Doc_No@1000000014 : Code[20];
      Doc_No1@1000000020 : Code[20];
      Doc_No2@1000000027 : Code[20];
      Cust_id@1000000013 : Code[20];
      Trans_date@1000000012 : Date;
      Trans_date1@1000000024 : Date;
      Trans_date2@1000000029 : Date;
      Inv_date@1000000011 : Date;
      Ext_No@1000000010 : Code[20];
      NPWP_No@1000000009 : Code[20];
      Due_date@1000000008 : Date;
      dim1@1000000007 : Code[10];
      dim2@1000000006 : Code[10];
      Curr_Code@1000000005 : Code[10];
      Curr_Code1@1000000023 : Code[10];
      Curr_Code2@1000000031 : Code[10];
      Tax_date@1000000004 : Date;
      "G/L_Account"@1000000003 : Code[20];
      "G/L_Account1"@1000000021 : Code[20];
      Amount@1000000002 : Decimal;
      Amount1@1000000022 : Decimal;
      Amount2@1000000033 : Decimal;
      Vat@1000000001 : Boolean;
      Bl_date@1000000000 : Date;
      Bl_date1@1000000025 : Date;
      Line_No@1000000015 : Integer;
      Account_Type@1000000016 : 'G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner';
      Dr_Amt@1000000017 : Decimal;
      Cr_Amt@1000000018 : Decimal;
      Dim3@1000000019 : Code[10];
      Line_No1@1000000026 : Integer;
      Account_No@1000000028 : Code[20];
      Cheno@1000000030 : Code[20];
      RecDate@1000000032 : Date;
      Bank@1000000034 : Code[20];
      Description@1000000035 : Code[50];
      Narration@1000000036 : Code[250];
      wht_areacode@1000000037 : Code[10];
      Applies_To@1000000040 : Code[20];
      VAT_Prod_Check@1000000039 : Boolean;
      VAT_Buss@1000000038 : Code[10];
      BudgetName@1000000041 : Record 95;

    PROCEDURE Lastdate@1000000000(Month@1000000000 : Integer;Year@1000000001 : Integer) "Final Date" : Date;
    VAR
      NextMon@1000000005 : Integer;
    BEGIN
      NextMon := Month + 1;
      IF NextMon > 12 THEN BEGIN
        NextMon := 1;
        Year := Year+1;
      END;
      "Final Date" := CALCDATE('CM',DMY2DATE(1,NextMon,Year));
      EXIT("Final Date");
    END;

    PROCEDURE UploadData@1000000001(FilePathNAme@1000000000 : Text[1024];SalesType@1000000001 : ' ,Selling In,Selling Out,Direct,Indirect,Warranty,Free Service,Claim,Intrest,Sharing,Import,FA,Others,Imacs,Propac,Gport,TMS,Prtn,Prppac Ex.');
    VAR
      F@1000000002 : File;
      Instreamobj@1000000003 : InStream;
      Sales_interface@1000000004 : Record 50009;
      Entry_No@1000000005 : Integer;
      B@1000000006 : Text[50];
      GenLed_Setup@1000000007 : Record 98;
      Dim_Value@1000000008 : Record 349;
      Master_Setup@1000000009 : Record 50008;
    BEGIN

      F.OPEN(FilePathNAme);
      F.CREATEINSTREAM(Instreamobj);

      Sales_interface.RESET;
      IF Sales_interface.FINDLAST THEN
        Entry_No := Sales_interface."Entry No." + 1
      ELSE
        Entry_No := 1;

      CLEAR(Sales_interface);

      WHILE NOT Instreamobj.EOS DO BEGIN
        Sales_interface.RESET;
        Sales_interface."Entry No." := Entry_No;
        Sales_interface.INSERT;

        Instreamobj.READTEXT(B,20);
        EVALUATE(Doc_No,B);
        Sales_interface."No." := Doc_No;

        Sales_interface."Sales Type" := SalesType;

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,20);
        EVALUATE(Cust_id,B);
        Sales_interface."Dealer Code" := Cust_id;

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,11);
        EVALUATE(Trans_date,B);
        Sales_interface."Transaction Date" := Trans_date;

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,11);
        EVALUATE(Inv_date,B);
        Sales_interface."Invoice Date" := Inv_date;

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,20);
        EVALUATE(Ext_No,B);
        Sales_interface."Ext.Doc.No." := Ext_No;

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,20);
        EVALUATE(NPWP_No,B);
        Sales_interface."Npwp no." := NPWP_No;

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,11);
        EVALUATE(Due_date,B);
        Sales_interface."Due Date" := Due_date;

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,10);
        EVALUATE(dim1,B);
        IF dim1 <> '' THEN
         BEGIN
          GenLed_Setup.GET;
          Dim_Value.RESET;
          Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Global Dimension 1 Code");
          Dim_Value.SETRANGE(Dim_Value.Name,dim1);
          IF Dim_Value.FINDFIRST THEN
          Sales_interface."Shortcut Dimension 1 Code" :=Dim_Value.Code ;
         END;

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,10);
        EVALUATE(dim2,B);

      //Code Dump Due to Not Require the Model Code in TMS Interface\

      IF (FilePathNAme<>Master_Setup."Interface File Path" + '\' + Master_Setup."TMS Invoice") THEN
      BEGIN

        IF dim2 <> '' THEN
         BEGIN
          GenLed_Setup.GET;
          Dim_Value.RESET;
          Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Global Dimension 2 Code");
          Dim_Value.SETRANGE(Dim_Value.Name,dim2);
          IF Dim_Value.FINDFIRST THEN
          Sales_interface."Shortcut Dimension 2 Code" :=Dim_Value.Code ;
         END;

      END;


      //Code Dump Due to Not Require the Model Code in TMS Interface

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,10);
        EVALUATE(Curr_Code,B);
        Sales_interface.Currency := Curr_Code;

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,11);
        EVALUATE(Tax_date,B);
        Sales_interface."Tax Invoice Date" := Tax_date;

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,20);
        EVALUATE("G/L_Account",B);
        Sales_interface."Account No." := "G/L_Account";

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,20);
        EVALUATE(Amount,B);
        Sales_interface.Amount := Amount;

      //Insert Narration

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,50);
        EVALUATE(Narration,B);
        Sales_interface.Narration := Narration;


        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,3);
        EVALUATE(Vat,B);
        Sales_interface."VAT Required" := Vat;

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,11);
        EVALUATE(Bl_date,B);
        Sales_interface."B/L Date" := Bl_date;

        Instreamobj.READTEXT(B,1);
        Instreamobj.READTEXT(B,10);
        EVALUATE(wht_areacode,B);
        Sales_interface."WHT Area Code" := wht_areacode;


        Sales_interface."Interface Date" := WORKDATE;


        Entry_No := Entry_No +1;
        Sales_interface.MODIFY;
        Instreamobj.READTEXT(B,1);
      END;
    END;

    PROCEDURE UploadDataGl@1000000002(FilePathNAme1@1000000006 : Text[1024];Template@1000000005 : Code[10];Batch@1000000007 : Code[10]);
    VAR
      F1@1000000004 : File;
      Instreamobj1@1000000003 : InStream;
      Gl_Interface@1000000002 : Record 50010;
      Entry_No1@1000000001 : Integer;
      B1@1000000000 : Text[250];
      GenLed_Setup@1000000008 : Record 98;
      Dim_Value@1000000009 : Record 349;
    BEGIN

      F1.OPEN(FilePathNAme1);
      F1.CREATEINSTREAM(Instreamobj1);

      Gl_Interface.RESET;
      IF Gl_Interface.FINDLAST THEN
        Entry_No1 := Gl_Interface."Entry No." + 1
      ELSE
        Entry_No1 := 1;

      CLEAR(Gl_Interface);

      WHILE NOT Instreamobj1.EOS DO BEGIN
        Gl_Interface.RESET;
        Gl_Interface."Entry No." := Entry_No1;
        Gl_Interface.INSERT;

        Instreamobj1.READTEXT(B1,20);
        EVALUATE(Doc_No1,B1);
        Gl_Interface.No := Doc_No1;

        Gl_Interface."Template Name" := Template;
        Gl_Interface."Batch Name" := Batch;

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,10);
        EVALUATE(Line_No,B1);
        Gl_Interface."Line No." := Line_No;

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,20);
        EVALUATE(Account_Type,B1);
        Gl_Interface."Account Type" := Account_Type;

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,20);
        EVALUATE("G/L_Account1",B1);
        Gl_Interface."Account No." := "G/L_Account1";

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,20);
        EVALUATE(Dr_Amt,B1);
        Gl_Interface.VALIDATE(Gl_Interface."Debit Amount",Dr_Amt);

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,20);
        EVALUATE(Cr_Amt,B1);
        Gl_Interface.VALIDATE(Gl_Interface."Credit Amount",Cr_Amt);

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,10);
        EVALUATE(dim1,B1);
        IF dim1 <> '' THEN
         BEGIN
          GenLed_Setup.GET;
          Dim_Value.RESET;
          Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Global Dimension 1 Code");
          Dim_Value.SETRANGE(Dim_Value.Name,dim1);
          IF Dim_Value.FINDFIRST THEN
          Gl_Interface."Shortcut Dimension 1" :=Dim_Value.Code ;
          Dim_Value.RESET;
         END
        ELSE
          Gl_Interface."Shortcut Dimension 1" :='';

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,10);
        EVALUATE(dim2,B1);
        IF dim2 <> '' THEN
         BEGIN
          GenLed_Setup.GET;
          Dim_Value.RESET;
          Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Global Dimension 2 Code");
          Dim_Value.SETRANGE(Dim_Value.Name,dim2);
          IF Dim_Value.FINDFIRST THEN
          Gl_Interface."Shortcut Dimension 2" :=Dim_Value.Code ;
          Dim_Value.RESET;
         END;



        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,10);
        EVALUATE(Dim3,B1);
        IF Dim3 <> '' THEN
         BEGIN
          GenLed_Setup.GET;
          Dim_Value.RESET;
          Dim_Value.SETRANGE(Dim_Value."Dimension Code",GenLed_Setup."Shortcut Dimension 3 Code");
          Dim_Value.SETRANGE(Dim_Value.Name,Dim3);
          IF Dim_Value.FINDFIRST THEN
          Gl_Interface."Shortcut Dimension 3" :=Dim_Value.Code ;
         END;

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,10);
        EVALUATE(Curr_Code1,B1);
        Gl_Interface."Currency code" := Curr_Code1;

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,11);
        EVALUATE(Trans_date1,B1);
        Gl_Interface."Transaction Date" := Trans_date1;

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,11);
        EVALUATE(Bl_date1,B1);
        Gl_Interface."B/L  Date" := Bl_date1;

        Instreamobj1.READTEXT(B1,1);
        Instreamobj1.READTEXT(B1,250);
        EVALUATE(Narration,B1);
        Gl_Interface.Narration := Narration;


        Gl_Interface."Interface Date" := WORKDATE;

        Entry_No1 := Entry_No1 +1;
        Gl_Interface.MODIFY;
        Instreamobj1.READTEXT(B1,1);
      END;
    END;

    PROCEDURE UploadDataColl@1000000003(FilePathNAme2@1000000007 : Text[1024];Batch@1000000005 : Code[10]);
    VAR
      F2@1000000004 : File;
      Instreamobj2@1000000003 : InStream;
      Coll_Interface@1000000002 : Record 50011;
      Entry_No2@1000000001 : Integer;
      B2@1000000000 : Text[50];
      CustBankAcc@1000000006 : Record 287;
    BEGIN

      F2.OPEN(FilePathNAme2);
      F2.CREATEINSTREAM(Instreamobj2);

      Coll_Interface.RESET;
      IF Coll_Interface.FINDLAST THEN
        Entry_No2 := Coll_Interface."Entry No." + 1
      ELSE
        Entry_No2 := 1;

      CLEAR(Coll_Interface);

      WHILE NOT Instreamobj2.EOS DO BEGIN
        Coll_Interface.RESET;
        Coll_Interface."Entry No." := Entry_No2;
        Coll_Interface.INSERT;

        Instreamobj2.READTEXT(B2,10);
        EVALUATE(Line_No1,B2);
        Coll_Interface."Line No." := Line_No1;

        Instreamobj2.READTEXT(B2,1);
        Instreamobj2.READTEXT(B2,20);
        EVALUATE(Doc_No2,B2);
        Coll_Interface."Document No." := Doc_No2;

        Coll_Interface."Account Type" := Coll_Interface."Account Type"::Customer;

        Instreamobj2.READTEXT(B2,1);
        Instreamobj2.READTEXT(B2,20);
        EVALUATE(Account_No,B2);
        Coll_Interface."Account No." := Account_No;

        Instreamobj2.READTEXT(B2,1);
        Instreamobj2.READTEXT(B2,11);
        EVALUATE(Trans_date2,B2);
        Coll_Interface."Cheque Date" := Trans_date2;

        Instreamobj2.READTEXT(B2,1);
        Instreamobj2.READTEXT(B2,20);
        EVALUATE(Cheno,B2);
        Coll_Interface."Cheque No." := Cheno;

        Instreamobj2.READTEXT(B2,1);
        Instreamobj2.READTEXT(B2,10);
        EVALUATE(Curr_Code2,B2);
        Coll_Interface."Currency Code" := Curr_Code2;

        Instreamobj2.READTEXT(B2,1);
        Instreamobj2.READTEXT(B2,11);
        EVALUATE(RecDate,B2);
        Coll_Interface."Date Received" := RecDate;

        Instreamobj2.READTEXT(B2,1);
        Instreamobj2.READTEXT(B2,20);
        EVALUATE(Amount2,B2);
        Coll_Interface.Amount := Amount2;

        Instreamobj2.READTEXT(B2,1);
        Instreamobj2.READTEXT(B2,20);
        EVALUATE(Bank,B2);
        Coll_Interface."Bank Account" := Bank;

        Instreamobj2.READTEXT(B2,1);
        Instreamobj2.READTEXT(B2,50);
        EVALUATE(Description,B2);
        Coll_Interface.Description := Description;


        Coll_Interface."Interface Date" := WORKDATE;
        Coll_Interface."Batch Name" := Batch;


        CustBankAcc.SETRANGE(CustBankAcc."Customer No.",Account_No);
         IF CustBankAcc.FINDFIRST THEN
            CustBankAcc.SETFILTER(CustBankAcc."Default Account",'yes');
              IF CustBankAcc.FINDFIRST THEN
               Coll_Interface.Bank:=CustBankAcc.Code;

        Entry_No2 := Entry_No2 +1;
        Coll_Interface.MODIFY;
        Instreamobj2.READTEXT(B2,1);
      END;
    END;

    BEGIN
    {
      //YIMMASL
      1) Fields Added For Slip No., G/l (Approver) - Template and Batch Name,
         Payment(Approver) - Template and Batch Name, Receipt(Approver) - template and batch name

      //YIMMRBRTR
      1) This Field is for the Identification of Domestic and Foreign Posting Group

      //SIIO
      1) NEW FIELD IS ADDED.
    }
    END.
  }
}

