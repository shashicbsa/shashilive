OBJECT Table 272 Check Ledger Entry
{
  OBJECT-PROPERTIES
  {
    Date=09/23/13;
    Time=12:00:00;
    Version List=NAVW17.10,NAVAPAC7.10;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Check Ledger Entry;
               ENA=Cheque Ledger Entry];
    LookupPageID=Page374;
    DrillDownPageID=Page374;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              ENA=Entry No.] }
    { 2   ;   ;Bank Account No.    ;Code20        ;TableRelation="Bank Account";
                                                   CaptionML=[ENU=Bank Account No.;
                                                              ENA=Bank Account No.] }
    { 3   ;   ;Bank Account Ledger Entry No.;Integer;
                                                   TableRelation="Bank Account Ledger Entry";
                                                   CaptionML=[ENU=Bank Account Ledger Entry No.;
                                                              ENA=Bank Account Ledger Entry No.] }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ENA=Posting Date] }
    { 5   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ENA=Document Type];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    ENA=" ,Payment,Invoice,CR/Adj Note,Finance Charge Memo,Reminder,Refund"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 6   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ENA=Document No.] }
    { 7   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENA=Description] }
    { 8   ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              ENA=Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCodeFromBank }
    { 9   ;   ;Check Date          ;Date          ;CaptionML=[ENU=Check Date;
                                                              ENA=Cheque Date] }
    { 10  ;   ;Check No.           ;Code20        ;CaptionML=[ENU=Check No.;
                                                              ENA=Cheque No.] }
    { 11  ;   ;Check Type          ;Option        ;CaptionML=[ENU=Check Type;
                                                              ENA=Cheque Type];
                                                   OptionCaptionML=[ENU=Total Check,Partial Check;
                                                                    ENA=Total Cheque,Partial Cheque];
                                                   OptionString=Total Check,Partial Check }
    { 12  ;   ;Bank Payment Type   ;Option        ;CaptionML=[ENU=Bank Payment Type;
                                                              ENA=Bank Payment Type];
                                                   OptionCaptionML=[ENU=" ,Computer Check,Manual Check";
                                                                    ENA=" ,Computer Cheque,Manual Cheque"];
                                                   OptionString=[ ,Computer Check,Manual Check] }
    { 13  ;   ;Entry Status        ;Option        ;CaptionML=[ENU=Entry Status;
                                                              ENA=Entry Status];
                                                   OptionCaptionML=[ENU=,Printed,Voided,Posted,Financially Voided,Test Print;
                                                                    ENA=,Printed,Voided,Posted,Financially Voided,Test Print];
                                                   OptionString=,Printed,Voided,Posted,Financially Voided,Test Print }
    { 14  ;   ;Original Entry Status;Option       ;CaptionML=[ENU=Original Entry Status;
                                                              ENA=Original Entry Status];
                                                   OptionCaptionML=[ENU=" ,Printed,Voided,Posted,Financially Voided";
                                                                    ENA=" ,Printed,Voided,Posted,Financially Voided"];
                                                   OptionString=[ ,Printed,Voided,Posted,Financially Voided] }
    { 15  ;   ;Bal. Account Type   ;Option        ;CaptionML=[ENU=Bal. Account Type;
                                                              ENA=Bal. Account Type];
                                                   OptionCaptionML=[ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset;
                                                                    ENA=G/L Account,Customer,Vendor,Bank Account,Fixed Asset];
                                                   OptionString=G/L Account,Customer,Vendor,Bank Account,Fixed Asset }
    { 16  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Customer)) Customer
                                                                 ELSE IF (Bal. Account Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Fixed Asset)) "Fixed Asset";
                                                   CaptionML=[ENU=Bal. Account No.;
                                                              ENA=Bal. Account No.] }
    { 17  ;   ;Open                ;Boolean       ;CaptionML=[ENU=Open;
                                                              ENA=Open] }
    { 18  ;   ;Statement Status    ;Option        ;CaptionML=[ENU=Statement Status;
                                                              ENA=Statement Status];
                                                   OptionCaptionML=[ENU=Open,Bank Acc. Entry Applied,Check Entry Applied,Closed;
                                                                    ENA=Open,Bank Acc. Entry Applied,Cheque Entry Applied,Closed];
                                                   OptionString=Open,Bank Acc. Entry Applied,Check Entry Applied,Closed }
    { 19  ;   ;Statement No.       ;Code20        ;TableRelation="Bank Acc. Reconciliation Line"."Statement No." WHERE (Bank Account No.=FIELD(Bank Account No.));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Statement No.;
                                                              ENA=Statement No.] }
    { 20  ;   ;Statement Line No.  ;Integer       ;TableRelation="Bank Acc. Reconciliation Line"."Statement Line No." WHERE (Bank Account No.=FIELD(Bank Account No.),
                                                                                                                             Statement No.=FIELD(Statement No.));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Statement Line No.;
                                                              ENA=Statement Line No.] }
    { 21  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              ENA=User ID] }
    { 22  ;   ;External Document No.;Code35       ;CaptionML=[ENU=External Document No.;
                                                              ENA=External Document No.] }
    { 28040;  ;WHT Amount          ;Decimal       ;CaptionML=[ENU=WHT Amount;
                                                              ENA=WHT Amount] }
    { 28090;  ;PDC Check No.       ;Code20        ;CaptionML=[ENU=PDC Check No.;
                                                              ENA=PDC Cheque No.] }
    { 28091;  ;Interest Amount     ;Decimal       ;CaptionML=[ENU=Interest Amount;
                                                              ENA=Interest Amount] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Bank Account No.,Check Date              }
    {    ;Bank Account No.,Entry Status,Check No.  }
    {    ;Bank Account Ledger Entry No.            }
    {    ;Bank Account No.,Open                    }
    {    ;Document No.,Posting Date                }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE GetCurrencyCodeFromBank@1() : Code[10];
    VAR
      BankAcc@1000 : Record 270;
    BEGIN
      IF "Bank Account No." = BankAcc."No." THEN
        EXIT(BankAcc."Currency Code");

      IF BankAcc.GET("Bank Account No.") THEN
        EXIT(BankAcc."Currency Code");

      EXIT('');
    END;

    PROCEDURE CopyFromBankAccLedgEntry@2(BankAccLedgEntry@1000 : Record 271);
    BEGIN
      "Bank Account No." := BankAccLedgEntry."Bank Account No.";
      "Bank Account Ledger Entry No." := BankAccLedgEntry."Entry No.";
      "Posting Date" := BankAccLedgEntry."Posting Date";
      "Document Type" := BankAccLedgEntry."Document Type";
      "Document No." := BankAccLedgEntry."Document No.";
      "External Document No." := BankAccLedgEntry."External Document No.";
      Description := BankAccLedgEntry.Description;
      "Bank Payment Type" := "Bank Payment Type";
      "Bal. Account Type" := BankAccLedgEntry."Bal. Account Type";
      "Bal. Account No." := BankAccLedgEntry."Bal. Account No.";
      "Entry Status" := "Entry Status"::Posted;
      Open := TRUE;
      "User ID" := USERID;
      "Check Date" := BankAccLedgEntry."Posting Date";
      "Check No." := BankAccLedgEntry."Document No.";
    END;

    BEGIN
    END.
  }
}

