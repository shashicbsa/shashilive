OBJECT Table 21 Cust. Ledger Entry
{
  OBJECT-PROPERTIES
  {
    Date=07/03/15;
    Time=12:34:25;
    Modified=Yes;
    Version List=YMINNTT,NNPWP,AEXP,ARM,TCH,Mel1.0,CR#018,CR#023,UPG09R2,UPG13,UPG13R2,YIMMDEVIP1.0,SMDEV1.0,PPNPPHDEV;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Entity Ledger Entry;
               ENA=Cust. Ledger Entry];
    LookupPageID=Page25;
    DrillDownPageID=Page25;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              ENA=Entry No.] }
    { 3   ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Customer No.;
                                                              ENA=Customer No.] }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ENA=Posting Date] }
    { 5   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ENA=Document Type];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    ENA=" ,Payment,Invoice,CR/Adj Note,Finance Charge Memo,Reminder,Refund"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 6   ;   ;Document No.        ;Code20        ;OnLookup=VAR
                                                              IncomingDocument@1000 : Record 130;
                                                            BEGIN
                                                              IncomingDocument.HyperlinkToDocument("Document No.","Posting Date");
                                                            END;

                                                   CaptionML=[ENU=Document No.;
                                                              ENA=Document No.] }
    { 7   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENA=Description] }
    { 11  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              ENA=Currency Code] }
    { 13  ;   ;Amount              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                              Entry Type=FILTER(Initial Entry|Unrealized Loss|Unrealized Gain|Realized Loss|Realized Gain|Payment Discount|'Payment Discount (VAT Excl.)'|'Payment Discount (VAT Adjustment)'|Correction of Remaining Amount|Payment Tolerance|Payment Discount Tolerance|'Payment Tolerance (VAT Excl.)'|'Payment Tolerance (VAT Adjustment)'|'Payment Discount Tolerance (VAT Excl.)'|'Payment Discount Tolerance (VAT Adjustment)'),
                                                                                                              Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Amount;
                                                              ENA=Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 14  ;   ;Remaining Amount    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                              Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Remaining Amount;
                                                              ENA=Remaining Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 15  ;   ;Original Amt. (LCY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                      Entry Type=FILTER(Initial Entry),
                                                                                                                      Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Original Amt. (LCY);
                                                              ENA=Original Amt. (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 16  ;   ;Remaining Amt. (LCY);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                      Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Remaining Amt. (LCY);
                                                              ENA=Remaining Amt. (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 17  ;   ;Amount (LCY)        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                      Entry Type=FILTER(Initial Entry|Unrealized Loss|Unrealized Gain|Realized Loss|Realized Gain|Payment Discount|'Payment Discount (VAT Excl.)'|'Payment Discount (VAT Adjustment)'|Correction of Remaining Amount|Payment Tolerance|Payment Discount Tolerance|'Payment Tolerance (VAT Excl.)'|'Payment Tolerance (VAT Adjustment)'|'Payment Discount Tolerance (VAT Excl.)'|'Payment Discount Tolerance (VAT Adjustment)'),
                                                                                                                      Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Amount (LCY);
                                                              ENA=Amount (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 18  ;   ;Sales (LCY)         ;Decimal       ;CaptionML=[ENU=Sales (LCY);
                                                              ENA=Sales (LCY)];
                                                   AutoFormatType=1 }
    { 19  ;   ;Profit (LCY)        ;Decimal       ;CaptionML=[ENU=Profit (LCY);
                                                              ENA=Profit (LCY)];
                                                   AutoFormatType=1 }
    { 20  ;   ;Inv. Discount (LCY) ;Decimal       ;CaptionML=[ENU=Inv. Discount (LCY);
                                                              ENA=Inv. Discount (LCY)];
                                                   AutoFormatType=1 }
    { 21  ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Sell-to Customer No.;
                                                              ENA=Sell-to Customer No.] }
    { 22  ;   ;Customer Posting Group;Code10      ;TableRelation="Customer Posting Group";
                                                   CaptionML=[ENU=Customer Posting Group;
                                                              ENA=Customer Posting Group] }
    { 23  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              ENA=Global Dimension 1 Code];
                                                   CaptionClass='1,1,1' }
    { 24  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              ENA=Global Dimension 2 Code];
                                                   CaptionClass='1,1,2' }
    { 25  ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Salesperson Code;
                                                              ENA=Salesperson Code] }
    { 27  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              ENA=User ID] }
    { 28  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              ENA=Source Code] }
    { 33  ;   ;On Hold             ;Code3         ;CaptionML=[ENU=On Hold;
                                                              ENA=On Hold] }
    { 34  ;   ;Applies-to Doc. Type;Option        ;CaptionML=[ENU=Applies-to Doc. Type;
                                                              ENA=Applies-to Doc. Type];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    ENA=" ,Payment,Invoice,CR/Adj Note,Finance Charge Memo,Reminder,Refund"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 35  ;   ;Applies-to Doc. No. ;Code20        ;CaptionML=[ENU=Applies-to Doc. No.;
                                                              ENA=Applies-to Doc. No.] }
    { 36  ;   ;Open                ;Boolean       ;CaptionML=[ENU=Open;
                                                              ENA=Open] }
    { 37  ;   ;Due Date            ;Date          ;OnValidate=VAR
                                                                ReminderEntry@1000 : Record 300;
                                                                ReminderIssue@1102601000 : Codeunit 393;
                                                              BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                IF "Due Date" <> xRec."Due Date" THEN BEGIN
                                                                  ReminderEntry.SETCURRENTKEY("Customer Entry No.",Type);
                                                                  ReminderEntry.SETRANGE("Customer Entry No.","Entry No.");
                                                                  ReminderEntry.SETRANGE(Type,ReminderEntry.Type::Reminder);
                                                                  ReminderEntry.SETRANGE("Reminder Level","Last Issued Reminder Level");
                                                                  IF ReminderEntry.FINDLAST THEN
                                                                    ReminderIssue.ChangeDueDate(ReminderEntry,"Due Date",xRec."Due Date");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Due Date;
                                                              ENA=Due Date] }
    { 38  ;   ;Pmt. Discount Date  ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=[ENU=Pmt. Discount Date;
                                                              ENA=Pmt. Discount Date] }
    { 39  ;   ;Original Pmt. Disc. Possible;Decimal;
                                                   CaptionML=[ENU=Original Pmt. Disc. Possible;
                                                              ENA=Original Pmt. Disc. Possible];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 40  ;   ;Pmt. Disc. Given (LCY);Decimal     ;CaptionML=[ENU=Pmt. Disc. Given (LCY);
                                                              ENA=Pmt. Disc. Given (LCY)];
                                                   AutoFormatType=1 }
    { 43  ;   ;Positive            ;Boolean       ;CaptionML=[ENU=Positive;
                                                              ENA=Positive] }
    { 44  ;   ;Closed by Entry No. ;Integer       ;TableRelation="Cust. Ledger Entry";
                                                   CaptionML=[ENU=Closed by Entry No.;
                                                              ENA=Closed by Entry No.] }
    { 45  ;   ;Closed at Date      ;Date          ;CaptionML=[ENU=Closed at Date;
                                                              ENA=Closed at Date] }
    { 46  ;   ;Closed by Amount    ;Decimal       ;CaptionML=[ENU=Closed by Amount;
                                                              ENA=Closed by Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 47  ;   ;Applies-to ID       ;Code50        ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=[ENU=Applies-to ID;
                                                              ENA=Applies-to ID] }
    { 49  ;   ;Journal Batch Name  ;Code10        ;CaptionML=[ENU=Journal Batch Name;
                                                              ENA=Journal Batch Name] }
    { 50  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              ENA=Reason Code] }
    { 51  ;   ;Bal. Account Type   ;Option        ;CaptionML=[ENU=Bal. Account Type;
                                                              ENA=Bal. Account Type];
                                                   OptionCaptionML=[ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset;
                                                                    ENA=G/L Account,Customer,Vendor,Bank Account,Fixed Asset];
                                                   OptionString=G/L Account,Customer,Vendor,Bank Account,Fixed Asset }
    { 52  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Customer)) Customer
                                                                 ELSE IF (Bal. Account Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Fixed Asset)) "Fixed Asset";
                                                   CaptionML=[ENU=Bal. Account No.;
                                                              ENA=Bal. Account No.] }
    { 53  ;   ;Transaction No.     ;Integer       ;CaptionML=[ENU=Transaction No.;
                                                              ENA=Transaction No.] }
    { 54  ;   ;Closed by Amount (LCY);Decimal     ;CaptionML=[ENU=Closed by Amount (LCY);
                                                              ENA=Closed by Amount (LCY)];
                                                   AutoFormatType=1 }
    { 58  ;   ;Debit Amount        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Debit Amount" WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                      Entry Type=FILTER(Initial Entry|Unrealized Loss|Unrealized Gain|Realized Loss|Realized Gain|Payment Discount|'Payment Discount (VAT Excl.)'|'Payment Discount (VAT Adjustment)'|Correction of Remaining Amount|Payment Tolerance|Payment Discount Tolerance|'Payment Tolerance (VAT Excl.)'|'Payment Tolerance (VAT Adjustment)'|'Payment Discount Tolerance (VAT Excl.)'|'Payment Discount Tolerance (VAT Adjustment)'),
                                                                                                                      Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Debit Amount;
                                                              ENA=Debit Amount];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 59  ;   ;Credit Amount       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Credit Amount" WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                       Entry Type=FILTER(Initial Entry|Unrealized Loss|Unrealized Gain|Realized Loss|Realized Gain|Payment Discount|'Payment Discount (VAT Excl.)'|'Payment Discount (VAT Adjustment)'|Correction of Remaining Amount|Payment Tolerance|Payment Discount Tolerance|'Payment Tolerance (VAT Excl.)'|'Payment Tolerance (VAT Adjustment)'|'Payment Discount Tolerance (VAT Excl.)'|'Payment Discount Tolerance (VAT Adjustment)'),
                                                                                                                       Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Credit Amount;
                                                              ENA=Credit Amount];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 60  ;   ;Debit Amount (LCY)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Debit Amount (LCY)" WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                            Entry Type=FILTER(Initial Entry|Unrealized Loss|Unrealized Gain|Realized Loss|Realized Gain|Payment Discount|'Payment Discount (VAT Excl.)'|'Payment Discount (VAT Adjustment)'|Correction of Remaining Amount|Payment Tolerance|Payment Discount Tolerance|'Payment Tolerance (VAT Excl.)'|'Payment Tolerance (VAT Adjustment)'|'Payment Discount Tolerance (VAT Excl.)'|'Payment Discount Tolerance (VAT Adjustment)'),
                                                                                                                            Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Debit Amount (LCY);
                                                              ENA=Debit Amount (LCY)];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 61  ;   ;Credit Amount (LCY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Credit Amount (LCY)" WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                             Entry Type=FILTER(Initial Entry|Unrealized Loss|Unrealized Gain|Realized Loss|Realized Gain|Payment Discount|'Payment Discount (VAT Excl.)'|'Payment Discount (VAT Adjustment)'|Correction of Remaining Amount|Payment Tolerance|Payment Discount Tolerance|'Payment Tolerance (VAT Excl.)'|'Payment Tolerance (VAT Adjustment)'|'Payment Discount Tolerance (VAT Excl.)'|'Payment Discount Tolerance (VAT Adjustment)'),
                                                                                                                             Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Credit Amount (LCY);
                                                              ENA=Credit Amount (LCY)];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 62  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              ENA=Document Date] }
    { 63  ;   ;External Document No.;Code35       ;CaptionML=[ENU=External Document No.;
                                                              ENA=External Document No.] }
    { 64  ;   ;Calculate Interest  ;Boolean       ;CaptionML=[ENU=Calculate Interest;
                                                              ENA=Calculate Interest] }
    { 65  ;   ;Closing Interest Calculated;Boolean;CaptionML=[ENU=Closing Interest Calculated;
                                                              ENA=Closing Interest Calculated] }
    { 66  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ENA=No. Series] }
    { 67  ;   ;Closed by Currency Code;Code10     ;TableRelation=Currency;
                                                   CaptionML=[ENU=Closed by Currency Code;
                                                              ENA=Closed by Currency Code] }
    { 68  ;   ;Closed by Currency Amount;Decimal  ;CaptionML=[ENU=Closed by Currency Amount;
                                                              ENA=Closed by Currency Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Closed by Currency Code" }
    { 73  ;   ;Adjusted Currency Factor;Decimal   ;CaptionML=[ENU=Adjusted Currency Factor;
                                                              ENA=Adjusted Currency Factor];
                                                   DecimalPlaces=0:15 }
    { 74  ;   ;Original Currency Factor;Decimal   ;CaptionML=[ENU=Original Currency Factor;
                                                              ENA=Original Currency Factor];
                                                   DecimalPlaces=0:15 }
    { 75  ;   ;Original Amount     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                              Entry Type=FILTER(Initial Entry),
                                                                                                              Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Original Amount;
                                                              ENA=Original Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 76  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              ENA=Date Filter] }
    { 77  ;   ;Remaining Pmt. Disc. Possible;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                CALCFIELDS(Amount,"Original Amount");

                                                                IF "Remaining Pmt. Disc. Possible" * Amount < 0 THEN
                                                                  FIELDERROR("Remaining Pmt. Disc. Possible",STRSUBSTNO(Text000,FIELDCAPTION(Amount)));

                                                                IF ABS("Remaining Pmt. Disc. Possible") > ABS("Original Amount") THEN
                                                                  FIELDERROR("Remaining Pmt. Disc. Possible",STRSUBSTNO(Text001,FIELDCAPTION("Original Amount")));
                                                              END;

                                                   CaptionML=[ENU=Remaining Pmt. Disc. Possible;
                                                              ENA=Remaining Pmt. Disc. Possible];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 78  ;   ;Pmt. Disc. Tolerance Date;Date     ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=[ENU=Pmt. Disc. Tolerance Date;
                                                              ENA=Pmt. Disc. Tolerance Date] }
    { 79  ;   ;Max. Payment Tolerance;Decimal     ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                CALCFIELDS(Amount,"Remaining Amount");

                                                                IF "Max. Payment Tolerance" * Amount < 0 THEN
                                                                  FIELDERROR("Max. Payment Tolerance",STRSUBSTNO(Text000,FIELDCAPTION(Amount)));

                                                                IF ABS("Max. Payment Tolerance") > ABS("Remaining Amount") THEN
                                                                  FIELDERROR("Max. Payment Tolerance",STRSUBSTNO(Text001,FIELDCAPTION("Remaining Amount")));
                                                              END;

                                                   CaptionML=[ENU=Max. Payment Tolerance;
                                                              ENA=Max. Payment Tolerance];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 80  ;   ;Last Issued Reminder Level;Integer ;CaptionML=[ENU=Last Issued Reminder Level;
                                                              ENA=Last Issued Reminder Level] }
    { 81  ;   ;Accepted Payment Tolerance;Decimal ;CaptionML=[ENU=Accepted Payment Tolerance;
                                                              ENA=Accepted Payment Tolerance];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 82  ;   ;Accepted Pmt. Disc. Tolerance;Boolean;
                                                   CaptionML=[ENU=Accepted Pmt. Disc. Tolerance;
                                                              ENA=Accepted Pmt. Disc. Tolerance] }
    { 83  ;   ;Pmt. Tolerance (LCY);Decimal       ;CaptionML=[ENU=Pmt. Tolerance (LCY);
                                                              ENA=Pmt. Tolerance (LCY)];
                                                   AutoFormatType=1 }
    { 84  ;   ;Amount to Apply     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                CALCFIELDS("Remaining Amount");

                                                                IF "Amount to Apply" * "Remaining Amount" < 0 THEN
                                                                  FIELDERROR("Amount to Apply",STRSUBSTNO(Text000,FIELDCAPTION("Remaining Amount")));

                                                                IF ABS("Amount to Apply") > ABS("Remaining Amount") THEN
                                                                  FIELDERROR("Amount to Apply",STRSUBSTNO(Text001,FIELDCAPTION("Remaining Amount")));
                                                              END;

                                                   CaptionML=[ENU=Amount to Apply;
                                                              ENA=Amount to Apply];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 85  ;   ;IC Partner Code     ;Code20        ;TableRelation="IC Partner";
                                                   CaptionML=[ENU=IC Partner Code;
                                                              ENA=IC Partner Code] }
    { 86  ;   ;Applying Entry      ;Boolean       ;CaptionML=[ENU=Applying Entry;
                                                              ENA=Applying Entry] }
    { 87  ;   ;Reversed            ;Boolean       ;CaptionML=[ENU=Reversed;
                                                              ENA=Reversed];
                                                   BlankZero=Yes }
    { 88  ;   ;Reversed by Entry No.;Integer      ;TableRelation="Cust. Ledger Entry";
                                                   CaptionML=[ENU=Reversed by Entry No.;
                                                              ENA=Reversed by Entry No.];
                                                   BlankZero=Yes }
    { 89  ;   ;Reversed Entry No.  ;Integer       ;TableRelation="Cust. Ledger Entry";
                                                   CaptionML=[ENU=Reversed Entry No.;
                                                              ENA=Reversed Entry No.];
                                                   BlankZero=Yes }
    { 90  ;   ;Prepayment          ;Boolean       ;CaptionML=[ENU=Prepayment;
                                                              ENA=Prepayment] }
    { 172 ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=[ENU=Payment Method Code;
                                                              ENA=Payment Method Code] }
    { 173 ;   ;Applies-to Ext. Doc. No.;Code35    ;CaptionML=[ENU=Applies-to Ext. Doc. No.;
                                                              ENA=Applies-to Ext. Doc. No.] }
    { 288 ;   ;Recipient Bank Account;Code10      ;TableRelation="Customer Bank Account".Code WHERE (Customer No.=FIELD(Customer No.));
                                                   CaptionML=[ENU=Recipient Bank Account;
                                                              ENA=Recipient Bank Account] }
    { 289 ;   ;Message to Recipient;Text70        ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=[ENU=Message to Recipient;
                                                              ENA=Message to Recipient] }
    { 290 ;   ;Exported to Payment File;Boolean   ;CaptionML=[ENU=Exported to Payment File;
                                                              ENA=Exported to Payment File];
                                                   Editable=No }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              ENA=Dimension Set ID];
                                                   Editable=No }
    { 1200;   ;Direct Debit Mandate ID;Code35     ;TableRelation="SEPA Direct Debit Mandate" WHERE (Customer No.=FIELD(Customer No.));
                                                   CaptionML=[ENU=Direct Debit Mandate ID;
                                                              ENA=Direct Debit Mandate ID] }
    { 11620;  ;Adjustment          ;Boolean       ;CaptionML=[ENU=Adjustment;
                                                              ENA=Adjustment] }
    { 11621;  ;BAS Adjustment      ;Boolean       ;CaptionML=[ENU=BAS Adjustment;
                                                              ENA=BAS Adjustment] }
    { 11626;  ;Adjustment Applies-to;Code20       ;CaptionML=[ENU=Adjustment Applies-to;
                                                              ENA=Adjustment Applies-to] }
    { 11628;  ;Pre Adjmt. Reason Code;Code10      ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Pre Adjmt. Reason Code;
                                                              ENA=Pre Adjmt. Reason Code] }
    { 28040;  ;Rem. Amt for WHT    ;Decimal       ;CaptionML=[ENU=Rem. Amt for WHT;
                                                              ENA=Rem. Amt for WHT] }
    { 28041;  ;Rem. Amt            ;Decimal       ;CaptionML=[ENU=Rem. Amt;
                                                              ENA=Rem. Amt] }
    { 28042;  ;WHT Amount          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("WHT Entry".Amount WHERE (Bill-to/Pay-to No.=FIELD(Customer No.),
                                                                                             Transaction No.=FIELD(Transaction No.)));
                                                   CaptionML=[ENU=WHT Amount;
                                                              ENA=WHT Amount];
                                                   Editable=No }
    { 28043;  ;WHT Amount (LCY)    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("WHT Entry"."Amount (LCY)" WHERE (Bill-to/Pay-to No.=FIELD(Customer No.),
                                                                                                     Transaction No.=FIELD(Transaction No.)));
                                                   CaptionML=[ENU=WHT Amount (LCY);
                                                              ENA=WHT Amount (LCY)];
                                                   Editable=No }
    { 28044;  ;WHT Payment         ;Boolean       ;CaptionML=[ENU=WHT Payment;
                                                              ENA=WHT Payment] }
    { 50001;  ;Kwitansi No.        ;Code20        ;Description=YIMMNTT }
    { 50002;  ;Commercial Invoice No.;Code20      ;Description=YIMMNTT }
    { 50003;  ;Commercial Invoice Date;Date       ;Description=YIMMNTT }
    { 50004;  ;Tax Invoice No.     ;Code30        ;Description=YIMMNTT,YIMMNTCH }
    { 50005;  ;Tax Invoice Date    ;Date          ;Description=YIMMNTT }
    { 50006;  ;Narration           ;Text250       ;Description=YIMMNTT }
    { 50007;  ;Ship-to Code        ;Code20        ;CaptionML=ENU=Ship-to Code;
                                                   Description=YIMMNNPWP }
    { 50008;  ;Ship-to Address     ;Text50        ;CaptionML=ENU=Ship-to Address;
                                                   Description=YIMM }
    { 50009;  ;Ship-to Address 2   ;Text50        ;CaptionML=ENU=Ship-to Address 2;
                                                   Description=YIMM }
    { 50010;  ;Type Of Transaction ;Option        ;OptionCaptionML=ENU=" ,Selling In,Selling Out,Direct,Indirect,Adm.MKT,Free Service,Claim,Promotion,Sharing,Import,FA,Others,Imacs,Propac,Gport,TMS,Other YMKI,Propac Ex.,Intrst_Deposit,Imacs-ATV,Imacs-Generator,Imacs-CBU,Campaign,DDS1 Vendor,DDS2 Vendor,DDS3 Vendor,DDS4 Vendor,DDS5 Vendor,DDS6 Vendor,DDS7 Vendor,DDS8 Vendor,DDS9 Vendor,MKT Vendor,SVC Vendor,MS Vendor,POD Vendor,Others Purchase,Ekspedisi Log-POD";
                                                   OptionString=[ ,Selling In,Selling Out,Direct,Indirect,Adm.MKT,Free Service,Claim,Promotion,Sharing,Import,FA,Others,Imacs,Propac,Gport,TMS,Other YMKI,Propac Ex.,Intrst_Deposit,Imacs-ATV,Imacs-Generator,Imacs-CBU,Campaign,DDS1 Vendor,DDS2 Vendor,DDS3 Vendor,DDS4 Vendor,DDS5 Vendor,DDS6 Vendor,DDS7 Vendor,DDS8 Vendor,DDS9 Vendor,MKT Vendor,SVC Vendor,MS Vendor,POD Vendor,Others Purchase,Ekspedisi Log-POD];
                                                   Description=YIMMAEXP,CR#018 & 23-Options added for Imacs }
    { 50011;  ;Incentive Month     ;Option        ;OptionCaptionML=ENU=" ,Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec";
                                                   OptionString=[ ,Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec];
                                                   Description=YIMMAEXP }
    { 50012;  ;Total Applied Amount;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Gen. Journal Line".Amount WHERE (Applies-to Doc. Type=FIELD(Document Type),
                                                                                                      Applies-to Doc. No.=FIELD(Document No.),
                                                                                                      CV_Ledger_Entry No.=FIELD(Entry No.)));
                                                   Description=YIMMARM;
                                                   Editable=No }
    { 50015;  ;Original Tax Inv. No.;Code30       ;Description=FIELD ADDED FOR CAPTURING THE ORIGINAL TAX INVOICE NO. }
    { 50016;  ;DocType             ;Text30        ;Description=YIMMYEXP }
    { 50017;  ;Bank Code           ;Code20        ;Description=YIMMRBDTL }
    { 50018;  ;Bank Account No     ;Code50        ;Description=YIMMRBDTL }
    { 50019;  ;Vend/Cust Bank Name ;Text50        ;Description=YIMMRBDTL }
    { 50020;  ;Bank Address        ;Text50        ;Description=YIMMRBDTL }
    { 50021;  ;BeniName            ;Text50        ;Description=YIMMRBDTL }
    { 52000;  ;Quote No ( Project No.);Code20     ;Description=For Melco to Capture the Quote No. }
    { 52001;  ;Slip No.            ;Code20        ;Description=Flow of  Slip no. from gen jrnl line  YIMMDEVIP1.0 }
    { 52002;  ;Slip Date           ;Date          ;Description=Contain Slip Generation Date YIMMDEVIP1.0 }
    { 52003;  ;Bank Branch No.     ;Text20        ;CaptionML=[ENU=Bank Branch No.;
                                                              ENA=Bank Branch No.] }
    { 52015;  ;PPH NPWP No.        ;Code20        ;Description=PPNPPHDEV }
    { 52016;  ;Entity Type         ;Option        ;OptionCaptionML=ENU=Dealer,NonDealer;
                                                   OptionString=Dealer,NonDealer }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Customer No.,Posting Date,Currency Code ;SumIndexFields=Sales (LCY),Profit (LCY),Inv. Discount (LCY);
                                                   SIFTLevelsToMaintain=[{Customer No.},
                                                                         {Customer No.,Posting Date:Year},
                                                                         {Customer No.,Posting Date:Month}] }
    { No ;Customer No.,Currency Code,Posting Date ;KeyGroups=Cust(Curr) }
    {    ;Document No.,Posting Date                }
    {    ;External Document No.                    }
    {    ;Customer No.,Open,Positive,Due Date,Currency Code }
    {    ;Open,Due Date                            }
    {    ;Document Type,Customer No.,Posting Date,Currency Code;
                                                   SumIndexFields=Sales (LCY),Profit (LCY),Inv. Discount (LCY);
                                                   MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
    {    ;Salesperson Code,Posting Date           ;KeyGroups=Cust(Comm) }
    {    ;Closed by Entry No.                      }
    {    ;Transaction No.                          }
    { No ;Customer No.,Open,Positive,Calculate Interest,Due Date;
                                                   KeyGroups=Cust(int) }
    { No ;Customer No.,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date,Currency Code;
                                                   SumIndexFields=Sales (LCY),Profit (LCY),Inv. Discount (LCY);
                                                   KeyGroups=Cust(Dim) }
    { No ;Customer No.,Open,Global Dimension 1 Code,Global Dimension 2 Code,Positive,Due Date,Currency Code;
                                                   KeyGroups=Cust(Dim) }
    { No ;Open,Global Dimension 1 Code,Global Dimension 2 Code,Due Date;
                                                   KeyGroups=Cust(Dim) }
    { No ;Document Type,Customer No.,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date,Currency Code;
                                                   KeyGroups=Cust(Dim) }
    {    ;Customer No.,Applies-to ID,Open,Positive,Due Date }
    {    ;Customer No.,Document Date,BAS Adjustment }
    {    ;Customer No.,Positive,Applies-to Doc. Type,Applies-to Doc. No.,Due Date }
    {    ;Document No.,Document Type,Customer No.  }
    {    ;Customer No.,Document Type,Type Of Transaction,Incentive Month }
    {    ;Customer Posting Group,Customer No.      }
    {    ;Customer No.,Type Of Transaction,Posting Date,Currency Code }
    {    ;Customer Posting Group,Customer No.,Type Of Transaction,Posting Date,Currency Code }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Entry No.,Description,Customer No.,Posting Date,Document Type,Document No. }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=must have the same sign as %1;ENA=must have the same sign as %1';
      Text001@1001 : TextConst 'ENU=must not be larger than %1;ENA=must not be larger than %1';
      MasterSetUp@1102159001 : Record 50008;

    PROCEDURE DrillDownOnEntries@1(VAR DtldCustLedgEntry@1000 : Record 379);
    VAR
      CustLedgEntry@1001 : Record 21;
    BEGIN
      CustLedgEntry.RESET;
      DtldCustLedgEntry.COPYFILTER("Customer No.",CustLedgEntry."Customer No.");
      DtldCustLedgEntry.COPYFILTER("Currency Code",CustLedgEntry."Currency Code");
      DtldCustLedgEntry.COPYFILTER("Initial Entry Global Dim. 1",CustLedgEntry."Global Dimension 1 Code");
      DtldCustLedgEntry.COPYFILTER("Initial Entry Global Dim. 2",CustLedgEntry."Global Dimension 2 Code");
      CustLedgEntry.SETCURRENTKEY("Customer No.","Posting Date");
      CustLedgEntry.SETRANGE(Open,TRUE);
      PAGE.RUN(0,CustLedgEntry);
    END;

    PROCEDURE DrillDownOnOverdueEntries@4(VAR DtldCustLedgEntry@1000 : Record 379);
    VAR
      CustLedgEntry@1001 : Record 21;
    BEGIN
      CustLedgEntry.RESET;
      DtldCustLedgEntry.COPYFILTER("Customer No.",CustLedgEntry."Customer No.");
      DtldCustLedgEntry.COPYFILTER("Currency Code",CustLedgEntry."Currency Code");
      DtldCustLedgEntry.COPYFILTER("Initial Entry Global Dim. 1",CustLedgEntry."Global Dimension 1 Code");
      DtldCustLedgEntry.COPYFILTER("Initial Entry Global Dim. 2",CustLedgEntry."Global Dimension 2 Code");
      CustLedgEntry.SETCURRENTKEY("Customer No.","Posting Date");
      CustLedgEntry.SETFILTER("Date Filter",'..%1',WORKDATE);
      CustLedgEntry.SETFILTER("Due Date",'<%1',WORKDATE);
      CustLedgEntry.SETFILTER("Remaining Amount",'<>%1',0);
      PAGE.RUN(0,CustLedgEntry);
    END;

    PROCEDURE GetOriginalCurrencyFactor@2() : Decimal;
    BEGIN
      IF "Original Currency Factor" = 0 THEN
        EXIT(1);
      EXIT("Original Currency Factor");
    END;

    PROCEDURE ShowDimensions@3();
    VAR
      DimMgt@1000 : Codeunit 408;
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"Entry No."));
    END;

    PROCEDURE SetStyle@5() : Text;
    BEGIN
      IF Open THEN BEGIN
        IF WORKDATE > "Due Date" THEN
          EXIT('Unfavorable')
      END ELSE
        IF "Closed at Date" > "Due Date" THEN
          EXIT('Attention');
      EXIT('');
    END;

    PROCEDURE CopyFromGenJnlLine@6(GenJnlLine@1000 : Record 81);
    BEGIN
      "Customer No." := GenJnlLine."Account No.";
      "Posting Date" := GenJnlLine."Posting Date";
      "Document Date" := GenJnlLine."Document Date";
      "Document Type" := GenJnlLine."Document Type";
      "Document No." := GenJnlLine."Document No.";
      "External Document No." := GenJnlLine."External Document No.";
      Description := GenJnlLine.Description;
      "Currency Code" := GenJnlLine."Currency Code";
      "Sales (LCY)" := GenJnlLine."Sales/Purch. (LCY)";
      "Profit (LCY)" := GenJnlLine."Profit (LCY)";
      "Inv. Discount (LCY)" := GenJnlLine."Inv. Discount (LCY)";
      "Sell-to Customer No." := GenJnlLine."Sell-to/Buy-from No.";
      "Customer Posting Group" := GenJnlLine."Posting Group";
      "Global Dimension 1 Code" := GenJnlLine."Shortcut Dimension 1 Code";
      "Global Dimension 2 Code" := GenJnlLine."Shortcut Dimension 2 Code";
      "Dimension Set ID" := GenJnlLine."Dimension Set ID";
      "Salesperson Code" := GenJnlLine."Salespers./Purch. Code";
      "Source Code" := GenJnlLine."Source Code";
      "On Hold" := GenJnlLine."On Hold";
      "Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type";
      "Applies-to Doc. No." := GenJnlLine."Applies-to Doc. No.";
      "Due Date" := GenJnlLine."Due Date";
      "Pmt. Discount Date" := GenJnlLine."Pmt. Discount Date";
      "Applies-to ID" := GenJnlLine."Applies-to ID";
      "Journal Batch Name" := GenJnlLine."Journal Batch Name";
      "Reason Code" := GenJnlLine."Reason Code";
       "Slip No." := GenJnlLine."Slip No.";  //YIMMDEVIP1.0
       "Slip Date" :=GenJnlLine."Slip Date"; //YIMMDEVIP1.0
      // UPG09R2.begin //UPG13R2.Begin
      //YIMMNTTST
      "Kwitansi No.":=GenJnlLine."Kwitansi No.";
      "Commercial Invoice No.":=GenJnlLine."Commercial Invoice No.";
      "Commercial Invoice Date":=GenJnlLine."Commercial Invoice Date";
      "Tax Invoice No.":=GenJnlLine."Tax Invoice No.";
      "Tax Invoice Date":=GenJnlLine."Tax Invoice Date";
      Narration:=GenJnlLine.Narration;
      //YIMMNTTEN

      //Mel1.0-Start
      "Quote No ( Project No.)":=GenJnlLine."Quote No ( Project No.)";
      //Mel1.0-End

      //YIMMRBDTL-St
      "Bank Code":=GenJnlLine."Customer/Vendor Bank";
      "Bank Account No":=GenJnlLine."Bank Account No.";
      "Vend/Cust Bank Name":=GenJnlLine."Bank Name Cust/Vend";
      "Bank Address":=GenJnlLine."Bank Address";
      BeniName:=GenJnlLine.BeniName;
      "Bank Branch No." := GenJnlLine."Bank Branch No."; //nk
      //YIMMRBDTL-EN

      //YIMMNNPWPST
      "Ship-to Code":=GenJnlLine."Ship-to Code";
      //YIMMREXPST
      "PPH NPWP No." := GenJnlLine."PPH NPWP No."; //PPNPPHDEV
      MasterSetUp.GET;
      IF (GenJnlLine."Document Type"=GenJnlLine."Document Type"::Invoice) AND (GenJnlLine."Reason Code"=MasterSetUp."Reason (Normal)") THEN
      DocType:='Sales Invoice';

      IF (GenJnlLine."Document Type"=GenJnlLine."Document Type"::Invoice) AND (GenJnlLine."Reason Code"=MasterSetUp."Reason (Sale as Purchase)") THEN
      DocType:='Purchase Return';

      IF (GenJnlLine."Document Type"=GenJnlLine."Document Type"::"Credit Memo") AND (GenJnlLine."Reason Code"=MasterSetUp."Reason (Normal)") THEN
      DocType:='Sales Return';

      IF (GenJnlLine."Document Type"=GenJnlLine."Document Type"::"Credit Memo") AND (GenJnlLine."Reason Code"=MasterSetUp."Reason (Sale as Purchase)") THEN
      DocType:='Purchase Invoice';

      IF (GenJnlLine."Document Type"<>GenJnlLine."Document Type"::"Credit Memo") AND ((GenJnlLine."Document Type"<>GenJnlLine."Document Type"::Invoice)) THEN
      DocType:=FORMAT(GenJnlLine."Document Type");

      //YIMMREXPEN
      //YIMMNNPWPEN
      "Ship-to Address":=GenJnlLine."Ship-to Address";
      "Ship-to Address 2":=GenJnlLine."Ship-to Address 2";

      //YIMMAEXPST
      "Type Of Transaction" := GenJnlLine."Type Of Transaction";
      "Incentive Month" := GenJnlLine."Incentive Month";
      //YIMMAEXPEN
      // UPG09R2.end //UPG13R2.end

      "Direct Debit Mandate ID" := GenJnlLine."Direct Debit Mandate ID";
      "User ID" := USERID;
      "Bal. Account Type" := GenJnlLine."Bal. Account Type";
      "Bal. Account No." := GenJnlLine."Bal. Account No.";
      "No. Series" := GenJnlLine."Posting No. Series";
      "IC Partner Code" := GenJnlLine."IC Partner Code";
      Prepayment := GenJnlLine.Prepayment;
      "Recipient Bank Account" := GenJnlLine."Recipient Bank Account";
      "Message to Recipient" := GenJnlLine."Message to Recipient";
      "Applies-to Ext. Doc. No." := GenJnlLine."Applies-to Ext. Doc. No.";
      "Payment Method Code" := GenJnlLine."Payment Method Code";
      "Exported to Payment File" := GenJnlLine."Exported to Payment File";
      Adjustment := GenJnlLine.Adjustment;
      "BAS Adjustment" := GenJnlLine."BAS Adjustment";
      "Adjustment Applies-to" := GenJnlLine."Adjustment Applies-to";
      "WHT Payment" := GenJnlLine."WHT Payment";
      "Entity Type":=GenJnlLine."Entity Type";//nd
    END;

    PROCEDURE RecalculateAmounts@26(FromCurrencyCode@1001 : Code[10];ToCurrencyCode@1002 : Code[10];PostingDate@1003 : Date);
    VAR
      CurrExchRate@1004 : Record 330;
    BEGIN
      IF ToCurrencyCode = FromCurrencyCode THEN
        EXIT;

      "Remaining Amount" :=
        CurrExchRate.ExchangeAmount("Remaining Amount",FromCurrencyCode,ToCurrencyCode,PostingDate);
      "Remaining Pmt. Disc. Possible" :=
        CurrExchRate.ExchangeAmount("Remaining Pmt. Disc. Possible",FromCurrencyCode,ToCurrencyCode,PostingDate);
      "Accepted Payment Tolerance" :=
        CurrExchRate.ExchangeAmount("Accepted Payment Tolerance",FromCurrencyCode,ToCurrencyCode,PostingDate);
      "Amount to Apply" :=
        CurrExchRate.ExchangeAmount("Amount to Apply",FromCurrencyCode,ToCurrencyCode,PostingDate);
    END;

    BEGIN
    {
      //YIMMNTT
         1) Fields added in the standard table for maintaining the information related to Tender Terima.
          a) Kwitansi No.
          b) Commercial Invoice No.
          c) Commercial Invoice Date
          d) Tax Invoice No.
          e) Tax Invoice Date
          f) Narration
      //YIMMAEXP
         1) NEW FIELD IS ADDED - TYPE OF PURCHASE AND INCENTIVE MONTH
      //YIMMREXP
        1) New field is added to display the caption as per Requirement
      //YIMMNNPWP
       1) Field added for Multiple NPWP No. (ID- 50007).

      //YIMMARM
       1) New Flow Field is created to calculate total applied amount.

      //YIMMNTCH
       1) CHANGE THE LENGTH OF TAX INVOICE NO. FROM 20 TO 30 DIGITS
      Old Version - NAVW16.00.01
      //UPG09R2
      5.0 to 2009 R2 Merged Code in objects identification.
      //UPG13
      2009R2 to 2013 Merged Code.
      //Old Version
      NAVW17.00
      //UPG13R2
      2013 to 2013R2 Merged Code.
      //Old Version - NAVW17.10.00.37221,NAVAPAC7.10.00.37221

      //YIMMDEVIP1.0
      Issue no. 9  added a field slip no.  for the flow from general journal line   and modification in function
      CopyFromGenJnlLine(GenJnlLine : Record "Gen. Journal Line")

      field added
      Slip Date : contain slip generation date

      //SMDEV1.0
      Changed Caption of table.
    }
    END.
  }
}

