OBJECT Page 39 General Journal
{
  OBJECT-PROPERTIES
  {
    Date=02/04/16;
    Time=19:42:53;
    Modified=Yes;
    Version List=NAVAPAC7.10.00.35800,YIMMABT,ASL,YEID1.0,UPG13,UPG13C,UPG13R2,UPG13R2C,YIMMDEVIP1.0;
  }
  PROPERTIES
  {
    CaptionML=[ENU=General Journal;
               ENA=General Journal];
    SaveValues=Yes;
    SourceTable=Table81;
    DataCaptionExpr=DataCaption;
    DelayedInsert=Yes;
    PageType=Worksheet;
    AutoSplitKey=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Bank,Application,Payroll;
                                ENA=New,Process,Report,Bank,Application,Payroll];
    OnInit=BEGIN
             // UPG13.begin
             "B/L DateEnable" := TRUE;
             Dim3Enable := TRUE;
             "Journal Template NameVisible" := TRUE;
             "Document TypeVisible" := TRUE;
             "Business Unit CodeVisible" := TRUE;
             Dim3Visible := TRUE;
             // UPG13.end
             TotalBalanceVisible := TRUE;
             BalanceVisible := TRUE;
           END;

    OnOpenPage=VAR
                 JnlSelected@1000 : Boolean;
               BEGIN
                 BalAccName := '';
                 OpenedFromBatch := ("Journal Batch Name" <> '') AND ("Journal Template Name" = '');
                 IF OpenedFromBatch THEN BEGIN
                   CurrentJnlBatchName := "Journal Batch Name";
                   GenJnlManagement.OpenJnl(CurrentJnlBatchName,Rec);
                   EXIT;
                 END;
                 GenJnlManagement.TemplateSelection(PAGE::"General Journal",0,FALSE,Rec,JnlSelected);
                 IF NOT JnlSelected THEN
                   ERROR('');
                 // UPG13.begin
                 //YIMMABTST
                 //GenJnlManagement.OpenJnl(CurrentJnlBatchName,Rec);
                 UserBatch := USERID;
                 GenJnlManagement.OpenJnl(UserBatch,Rec);
                 //YIMMABTEN


                 //EnableFields_GL(); //YIMMDEVIP1.0
                 // UPG13.end
               END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                       SetUserInteractions;
                     END;

    OnNewRecord=BEGIN
                  UpdateBalance;
                  //SetUpNewLine(xRec,Balance,BelowxRec); // UPG13
                  SetUpNewLineNew(xRec,Balance,BelowxRec); // UPG13
                  CLEAR(ShortcutDimCode);
                  CLEAR(AccName);
                  SetUserInteractions;
                END;

    OnModifyRecord=BEGIN
                     SetUserInteractions;
                   END;

    OnDeleteRecord=BEGIN
                     TESTFIELD("Slip No.",'');
                   END;

    OnAfterGetCurrRecord=BEGIN
                           GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                           UpdateBalance;
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 75      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ENA=&Line];
                      Image=Line }
      { 76      ;2   ;Action    ;
                      Name=Dimensions;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENA=Dimensions];
                      Promoted=No;
                      Image=Dimensions;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowDimensions;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 43      ;1   ;ActionGroup;
                      CaptionML=[ENU=A&ccount;
                                 ENA=A&ccount];
                      Image=ChartOfAccounts }
      { 44      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 ENA=Card];
                      RunObject=Codeunit 15;
                      Image=EditLines }
      { 45      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Ledger E&ntries;
                                 ENA=Ledger E&ntries];
                      RunObject=Codeunit 14;
                      Promoted=No;
                      Image=GLRegisters;
                      PromotedCategory=Process }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 46      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENA=F&unctions];
                      Image=Action }
      { 13      ;2   ;Action    ;
                      CaptionML=[ENU=Renumber Document Numbers;
                                 ENA=Renumber Document Numbers];
                      Visible=FALSE;
                      Image=EditLines;
                      OnAction=BEGIN
                                 RenumberDocumentNo
                               END;
                                }
      { 92      ;2   ;Action    ;
                      CaptionML=[ENU=Insert Conv. LCY Rndg. Lines;
                                 ENA=Insert Conv. LCY Rndg. Lines];
                      RunObject=Codeunit 407;
                      Visible=FALSE;
                      Image=InsertCurrency }
      { 107     ;2   ;Separator ;
                      CaptionML=[ENU=-;
                                 ENA=-] }
      { 109     ;2   ;Action    ;
                      Name=GetStandardJournals;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Get Standard Journals;
                                 ENA=&Get Standard Journals];
                      Promoted=Yes;
                      Visible=FALSE;
                      Image=GetStandardJournal;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 StdGenJnl@1000 : Record 750;
                               BEGIN
                                 StdGenJnl.FILTERGROUP := 2;
                                 StdGenJnl.SETRANGE("Journal Template Name","Journal Template Name");
                                 StdGenJnl.FILTERGROUP := 0;

                                 IF PAGE.RUNMODAL(PAGE::"Standard General Journals",StdGenJnl) = ACTION::LookupOK THEN BEGIN
                                   StdGenJnl.CreateGenJnlFromStdJnl(StdGenJnl,CurrentJnlBatchName);
                                   MESSAGE(Text000,StdGenJnl.Code);
                                 END;

                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 108     ;2   ;Action    ;
                      Name=SaveAsStandardJournal;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Save as Standard Journal;
                                 ENA=&Save as Standard Journal];
                      Promoted=Yes;
                      Visible=FALSE;
                      Image=SaveasStandardJournal;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 GenJnlBatch@1001 : Record 232;
                                 GeneralJnlLines@1004 : Record 81;
                                 StdGenJnl@1002 : Record 750;
                                 SaveAsStdGenJnl@1003 : Report 750;
                               BEGIN
                                 GeneralJnlLines.SETFILTER("Journal Template Name","Journal Template Name");
                                 GeneralJnlLines.SETFILTER("Journal Batch Name",CurrentJnlBatchName);
                                 CurrPage.SETSELECTIONFILTER(GeneralJnlLines);
                                 GeneralJnlLines.COPYFILTERS(Rec);

                                 GenJnlBatch.GET("Journal Template Name",CurrentJnlBatchName);
                                 SaveAsStdGenJnl.Initialise(GeneralJnlLines,GenJnlBatch);
                                 SaveAsStdGenJnl.RUNMODAL;
                                 IF NOT SaveAsStdGenJnl.GetStdGeneralJournal(StdGenJnl) THEN
                                   EXIT;

                                 MESSAGE(Text001,StdGenJnl.Code);
                               END;
                                }
      { 1000000010;2 ;Action    ;
                      CaptionML=ENU=Suggest Adjustments;
                      Visible=FALSE;
                      OnAction=BEGIN
                                 // UPG13R2C.begin
                                 {// UPG13.begin
                                 //YIMM
                                 CreateVendorPmtSuggestion.SetGenJnlLine(Rec);
                                 CreateVendorPmtSuggestion.RUNMODAL;
                                 CLEAR(CreateVendorPmtSuggestion);
                                 // UPG13.end
                                 }
                                 // UPG13R2C.end
                               END;
                                }
      { 1000000025;2 ;Action    ;
                      CaptionML=ENU=Suggest Entries for Rounding;
                      Visible=FALSE;
                      OnAction=BEGIN
                                 // UPG13R2C.begin
                                 {// UPG13.begin
                                 Reportforrounding.SetGenGLLine(Rec);
                                 Reportforrounding.RUNMODAL;
                                 CLEAR(Reportforrounding);
                                 // UPG13.end
                                 }
                                 // UPG13R2C.end
                               END;
                                }
      { 1000000008;2 ;Action    ;
                      CaptionML=ENU=Slip Report;
                      Visible=FALSE;
                      Image=Report;
                      OnAction=BEGIN
                                 // UPG13.begin
                                 //YIMMNGVR
                                  ReportPrint.PrintGenJnlLine1(Rec);
                                 //YIMMNGVR
                                 // UPG13.end
                               END;
                                }
      { 49      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 ENA=Test Report];
                      Promoted=No;
                      Image=TestReport;
                      OnAction=BEGIN
                                 // UPG13.begin
                                 //YIMMASLST
                                 Genline2.RESET;
                                 CLEAR(Genline2);
                                 Genline2.SETCURRENTKEY(Genline2."Journal Template Name",Genline2."Journal Batch Name",Genline2."Posting Date",
                                                       Genline2."Document No.");
                                 Genline2.SETRANGE(Genline2."Journal Template Name","Journal Template Name");
                                 Genline2.SETRANGE(Genline2."Journal Batch Name","Journal Batch Name");
                                 CurrPage.SETSELECTIONFILTER(Genline2);//YIMMA
                                 IF Genline2.FINDFIRST THEN REPEAT
                                   Genline2.TESTFIELD(Genline2."Slip No.");
                                 UNTIL Genline2.NEXT = 0;
                                 //YIMMASLEN
                                 // UPG13.end
                                 ReportPrint.PrintGenJnlLine(Rec);
                               END;
                                }
      { 50      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 ENA=P&ost];
                      Promoted=No;
                      Visible=FALSE;
                      PromotedIsBig=No;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CheckAdjustmentAppliesto;
                                 CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",Rec);
                                 CurrentJnlBatchName := GETRANGEMAX("Journal Batch Name");
                                 COMMIT;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 51      ;2   ;Action    ;
                      ShortCutKey=Shift+F9;
                      CaptionML=[ENU=Post and &Print;
                                 ENA=Post and &Print];
                      Promoted=No;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CheckAdjustmentAppliesto;
                                 CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post+Print",Rec);
                                 CurrentJnlBatchName := GETRANGEMAX("Journal Batch Name");
                                 COMMIT;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 1000000009;2 ;Action    ;
                      CaptionML=ENU=Generate Slip No;
                      Promoted=No;
                      OnAction=VAR
                                 i@1000000002 : Integer;
                                 Genline21@1000000001 : Record 81;
                                 GenLineRec@1000000003 : Record 81;
                               BEGIN
                                 // UPG13.begin
                                 //YIMMASLST
                                 Master.GET;
                                 Genline2.RESET;
                                 CLEAR(Genline2);
                                 Genline2.SETCURRENTKEY(Genline2."Journal Template Name",Genline2."Journal Batch Name",Genline2."Posting Date",
                                                       Genline2."Document No.");
                                 //Genline2.SETRANGE(Genline2."Journal Template Name","Journal Template Name"); //YIMMDEVIP1.0
                                 //Genline2.SETRANGE(Genline2."Journal Batch Name","Journal Batch Name");       //YIMMDEVIP1.0
                                 //CurrPage.SETSELECTIONFILTER(Genline2);//YIMMA                                //YIMMDEVIP1.0
                                 Genline2.COPYFILTERS(Rec);                                                     //YIMMDEVIP1.0
                                 IF Genline2.FINDSET THEN REPEAT
                                   Genline2.TESTFIELD(Genline2."Slip No.",'');
                                   Genline2.TESTFIELD("Document No.");                                          //YIMMDEVIP1.0
                                   Genline2.TESTFIELD(Genline2.Amount);                                         //YIMMDEVIP1.0
                                 UNTIL Genline2.NEXT = 0;

                                 SlipNo := Nos.GetNextNo(Master."Slip Nos.","Posting Date",TRUE);
                                 CLEAR(Nos);

                                 i := 1;
                                 Bool := 0;

                                 //Genline21.SETRANGE(Genline21."Journal Template Name","Journal Template Name"); //YIMMDEVIP1.0
                                 //Genline21.SETRANGE(Genline21."Journal Batch Name","Journal Batch Name");       //YIMMDEVIP1.0
                                 //CurrPage.SETSELECTIONFILTER(Genline21);//YIMMA                                 //YIMMDEVIP1.0
                                 Genline21.COPYFILTERS(Rec);                                                      //YIMMDEVIP1.0
                                 //Genline21.SETFILTER("Slip No.",''); //nk                                             //YIMMDEVIP1.0
                                 IF Genline21.FINDSET THEN REPEAT
                                   Bool += Genline21."Balance (LCY)";
                                 UNTIL Genline21.NEXT = 0;

                                 IF Bool = 0 THEN BEGIN
                                   Genline21.COPYFILTERS(Rec);                                                    //YIMMDEVIP1.0
                                 //  Genline21.SETFILTER("Slip No.",''); //nk                                           //YIMMDEVIP1.0
                                   IF Genline21.FINDSET THEN REPEAT
                                     IF i = 1 THEN BEGIN
                                       GenLineRec.GET(Genline21."Journal Template Name",Genline21."Journal Batch Name",Genline21."Line No.");
                                       GenLineRec."Slip No." := SlipNo;
                                       GenLineRec."Slip Date":= TODAY; //YIMMDEVIP1.0  flow slip generation date
                                       GenLineRec.Level := 0;
                                       GenLineRec.MODIFY;
                                       i := i + 1;
                                     END ELSE BEGIN
                                       GenLineRec.GET(Genline21."Journal Template Name",Genline21."Journal Batch Name",Genline21."Line No.");
                                       GenLineRec."Slip No." := SlipNo;
                                       GenLineRec."Slip Date":= TODAY; //YIMMDEVIP1.0  flow slip generation date
                                       GenLineRec.Level := 1;
                                       GenLineRec.MODIFY;
                                     END;
                                   UNTIL Genline21.NEXT = 0;
                                 END ELSE
                                 ERROR(Text004);
                                 //YIMMASLEN
                                 // UPG13.end
                               END;
                                }
      { 1000000011;2 ;Action    ;
                      CaptionML=ENU=Ready to Post;
                      Promoted=No;
                      OnAction=BEGIN
                                 // UPG13.begin
                                 //YIMMASLST
                                 GlSetup.GET;
                                 IF (Rec."Ready to Post" = TRUE) THEN BEGIN // UPG13R2C
                                   GJnlLine22.RESET;
                                   GJnlLine22.SETCURRENTKEY("Journal Template Name",Name);
                                   GJnlLine22.SETFILTER(GJnlLine22."Journal Template Name",'%1',Rec."Journal Template Name");
                                   GJnlLine22.SETFILTER(GJnlLine22.Name,'%1',Rec."Journal Batch Name");
                                   IF GJnlLine22.FINDFIRST THEN BEGIN
                                     GJnlLine22.CALCFIELDS(GJnlLine22."Template Type");
                                     Type := GJnlLine22."Template Type";
                                   END;
                                   CASE Type OF
                                     Type::General: BEGIN
                                       Master.GET;
                                       GJnlLine11.RESET;
                                       GJnlLine11.SETCURRENTKEY("Journal Template Name","Journal Batch Name","Line No.");
                                       GJnlLine11.SETRANGE(GJnlLine11."Journal Template Name",Master."Gjnl Template");
                                       GJnlLine11.SETRANGE(GJnlLine11."Journal Batch Name",Master."Gjnl Batch");
                                       IF GJnlLine11.FINDLAST THEN
                                         "LineNo." := GJnlLine11."Line No.";

                                       IF NOT (GJnlLine22."No. Series" = '') THEN BEGIN
                                         GJnlLine11.RESET;
                                         CLEAR(GJnlLine11);
                                         GJnlLine11.SETCURRENTKEY("Journal Template Name","Journal Batch Name","Line No.");
                                         GJnlLine11.SETFILTER(GJnlLine11."Journal Template Name",'%1',Rec."Journal Template Name");
                                         GJnlLine11.SETFILTER(GJnlLine11."Journal Batch Name",'%1',Rec."Journal Batch Name");
                                         IF GJnlLine11.FINDLAST THEN BEGIN
                                           Noseries.RESET;
                                           Noseries.SETRANGE(Noseries."Series Code",GJnlLine22."No. Series");
                                           IF Noseries.FINDLAST THEN
                                             IF Noseries."Last No. Used" < GJnlLine11."Document No." THEN BEGIN
                                               CLEAR(Nos);
                                              Nos.GetNextNoNew(GJnlLine22."No. Series","Posting Date",TRUE,GJnlLine11."Document No.");
                                             END;
                                         END;
                                       END;

                                       ForGenBatch.RESET;
                                       ForGenBatch.SETCURRENTKEY("Journal Template Name",Name);
                                       ForGenBatch.SETRANGE(ForGenBatch."Journal Template Name",Master."Gjnl Template");
                                       ForGenBatch.SETRANGE(ForGenBatch.Name,Master."Gjnl Batch");
                                       IF ForGenBatch.FINDFIRST THEN;

                                       GJnlLine11.RESET;
                                       CLEAR(GJnlLine11);
                                       GJnlLine11.SETCURRENTKEY("Journal Template Name","Journal Batch Name","Line No.");
                                       GJnlLine11.SETFILTER(GJnlLine11."Journal Template Name",'%1',Rec."Journal Template Name");
                                       GJnlLine11.SETFILTER(GJnlLine11."Journal Batch Name",'%1',Rec."Journal Batch Name");
                                       GJnlLine11.SETFILTER(GJnlLine11."Slip No.",'%1',Rec."Slip No.");//YIMMA
                                       IF GJnlLine11.FINDFIRST THEN REPEAT
                                         TempGJnlLine22.RESET;
                                         TempGJnlLine22.INIT;
                                         TempGJnlLine22.TRANSFERFIELDS(GJnlLine11);
                                         TempGJnlLine22."Journal Template Name" := ForGenBatch."Journal Template Name";
                                         TempGJnlLine22."Journal Batch Name" := ForGenBatch.Name;
                                         TempGJnlLine22."Line No." := "LineNo." + 10000;
                                         { // UPG13C.begin
                                         JnDimension.RESET;
                                         IF JnDimension.GET(81,GJnlLine11."Journal Template Name",GJnlLine11."Journal Batch Name",GJnlLine11."Line No.",
                                                         0,GlSetup."Shortcut Dimension 3 Code") THEN
                                           TempGJnlLine22.ValidateShortcutDimCode(3,JnDimension."Dimension Value Code");
                                         } // UPG13C.end
                                         // UPG13R2.begin
                                         DimSetEntry.RESET;
                                         IF DimSetEntry.GET(GJnlLine11."Dimension Set ID",GlSetup."Shortcut Dimension 3 Code") THEN
                                           TempGJnlLine22.ValidateShortcutDimCode(3,DimSetEntry."Dimension Value Code");
                                         // UPG13R2.end
                                         TempGJnlLine22."Reason Code" := ForGenBatch."Reason Code";
                                         TempGJnlLine22."Posting No. Series" := ForGenBatch."Posting No. Series";
                                         TempGJnlLine22."Ref. Template" := GJnlLine11."Journal Template Name";
                                         TempGJnlLine22."Ref. Batch" := GJnlLine11."Journal Batch Name";
                                         TempGJnlLine22.INSERT(TRUE);
                                         GJnlLine11.Interfaced:= FALSE;
                                         GJnlLine11.DELETE(TRUE);
                                         "LineNo." += 10000;
                                       UNTIL GJnlLine11.NEXT = 0;
                                     END;
                                   END;
                                 END // UPG13R2C
                                 ELSE // UPG13R2C
                                  ERROR(' Please Check the Errors with test Report');  // UPG13R2C
                                 //YIMMASLEN
                                 // UPG13.end
                               END;
                                }
      { 1102159004;2 ;Action    ;
                      CaptionML=ENU=Update Slip No.;
                      OnAction=VAR
                                 GenlineLoc@1102159001 : Record 81;
                               BEGIN
                                 // UPG13.begin
                                 //YIMMASLST

                                 Genline2.RESET;
                                 CLEAR(Genline2);
                                 Genline2.SETCURRENTKEY(Genline2."Journal Template Name",Genline2."Journal Batch Name",Genline2."Line No.");
                                 Genline2.SETRANGE(Genline2."Journal Template Name","Journal Template Name"); //YIMMDEVIP1.0
                                 Genline2.SETRANGE(Genline2."Journal Batch Name","Journal Batch Name");       //YIMMDEVIP1.0
                                 Genline2.SETRANGE(UpdateSlip,TRUE);
                                 //CurrPage.SETSELECTIONFILTER(Genline2);//YIMMA                                //YIMMDEVIP1.0
                                 //Genline2.COPYFILTERS(Rec);                                                     //YIMMDEVIP1.0
                                 IF Genline2.FINDFIRST THEN BEGIN
                                   IF Genline2."Slip No." = '' THEN
                                     ERROR(Text002);
                                   SameSlipNo := Genline2."Slip No.";
                                 END;

                                 Bool := 0;

                                 Genline2.RESET;
                                 CLEAR(Genline2);
                                 Genline2.SETCURRENTKEY(Genline2."Journal Template Name",Genline2."Journal Batch Name",Genline2."Line No.");
                                 //Genline2.SETRANGE(Genline2."Journal Template Name","Journal Template Name");  //YIMMDEVIP1.0
                                 //Genline2.SETRANGE(Genline2."Journal Batch Name","Journal Batch Name");        //YIMMDEVIP1.0
                                 //CurrPage.SETSELECTIONFILTER(Genline2);//YIMMA                                 //YIMMDEVIP1.0

                                 Genline2.COPYFILTERS(Rec);                                                  //YIMMDEVIP1.0
                                 IF Genline2.FINDSET THEN REPEAT
                                   Bool += Genline2."Balance (LCY)";
                                 UNTIL Genline2.NEXT = 0;

                                 Genline2.SETFILTER(Genline2."Slip No.",'%1',''); //nk

                                 IF Bool = 0 THEN BEGIN
                                   IF Genline2.FINDFIRST THEN REPEAT
                                     Genline2."Slip No." := SameSlipNo;
                                     Genline2.Level := 1;
                                     Genline2.MODIFY;
                                   UNTIL Genline2.NEXT = 0;
                                   GenlineLoc.SETRANGE("Journal Template Name","Journal Template Name");       //YIMMDEVIP1.0
                                   GenlineLoc.SETRANGE("Journal Batch Name","Journal Batch Name");             //YIMMDEVIP1.0
                                   GenlineLoc.SETRANGE(UpdateSlip,TRUE);                                       //YIMMDEVIP1.0
                                   IF GenlineLoc.FINDFIRST THEN BEGIN                                          //YIMMDEVIP1.0
                                     GenlineLoc.UpdateSlip := FALSE;                                           //YIMMDEVIP1.0
                                     GenlineLoc.MODIFY;                                                        //YIMMDEVIP1.0
                                   END;                                                                        //YIMMDEVIP1.0
                                 END ELSE
                                   ERROR(Text004);
                                 //YIMMASLEN
                                 // UPG13.end
                               END;
                                }
      { 1102159011;2 ;Action    ;
                      Name=Suggest Entries For Rounding;
                      CaptionML=ENU=Suggest Entries For Rounding;
                      OnAction=BEGIN

                                 Reportforrounding.SetGenGLLine(Rec);
                                 Reportforrounding.RUNMODAL;
                                 CLEAR(Reportforrounding);
                               END;
                                }
      { 1102159007;2 ;Action    ;
                      CaptionML=ENU=Export To Excel;
                      OnAction=VAR
                                 i@1102159003 : Integer;
                                 Genline21@1102159002 : Record 81;
                                 GenJln@1102159001 : Record 81;
                               BEGIN
                                 {
                                 // YIMMDEVIP1.0.begin

                                 ExcelBuf.DELETEALL;
                                 ExcelBuf.RESET;
                                 TotalBal := 0;

                                 Master.GET;
                                 Genline21.RESET;
                                 //Bool := 0;

                                 Genline21.SETRANGE(Genline21."Journal Template Name","Journal Template Name");
                                 Genline21.SETRANGE(Genline21."Journal Batch Name","Journal Batch Name");
                                 CurrPage.SETSELECTIONFILTER(Genline21);

                                 IF Genline21.FINDSET THEN REPEAT
                                   bool += Genline21."Balance (LCY)";
                                 UNTIL Genline21.NEXT = 0;

                                 //IF Bool = 0 THEN BEGIN
                                   Genline21.COPYFILTERS(Rec);
                                   Genline21.SETRANGE("Slip No.",'');
                                   MakeExcelDataHeader;
                                   IF Genline21.FINDSET THEN REPEAT
                                   GenJln.GET(Genline21."Journal Template Name",Genline21."Journal Batch Name",Genline21."Line No.");

                                     ExcelBuf.NewRow;
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Journal Template Name"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Journal Batch Name"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);

                                     //ExcelBuf.AddColumn(FORMAT(GenJln."Line No."),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);              //2
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Account Type"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);              //3
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Account No."),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);               //4
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Posting Date"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);              //5
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Document Type"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);                //6
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Document No."),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);              //7

                                     ExcelBuf.AddColumn(FORMAT(GenJln.Description),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);               //4
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Bal. Account Type"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);              //5
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Bal. Account No."),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);                //6
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Currency Code"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);              //7

                                     ExcelBuf.AddColumn(FORMAT(GenJln.Amount),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);               //4
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Shortcut Dimension 1 Code"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);              //5
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Shortcut Dimension 2 Code"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);                //6
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Applies-to Doc. Type"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);              //7
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Applies-to Doc. No."),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);              //5
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Due Date"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);                //6
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Payment Terms Code"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Applies-to ID"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);
                                     //ExcelBuf.AddColumn(FORMAT(GenJln."Journal Batch Name"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);
                                                    //6

                                   TotalBal := TotalBal + GenJln.Amount;
                                   UNTIL Genline21.NEXT = 0;
                                   MakeExcelFooter(TotalBal);

                                   CreateExcelbook;
                                 // YIMMDEVIP1.0.end
                                  }


                                 // YIMMDEVIP1.0.begin

                                 ExcelBuf.DELETEALL;
                                 ExcelBuf.RESET;
                                 TotalBal := 0;

                                 Master.GET;
                                 Genline21.RESET;
                                 //Bool := 0;

                                 Genline21.SETRANGE(Genline21."Journal Template Name","Journal Template Name");
                                 Genline21.SETRANGE(Genline21."Journal Batch Name","Journal Batch Name");
                                 CurrPage.SETSELECTIONFILTER(Genline21);

                                 IF Genline21.FINDSET THEN REPEAT
                                   Bool += Genline21."Balance (LCY)";
                                 UNTIL Genline21.NEXT = 0;

                                 //IF Bool = 0 THEN BEGIN
                                   Genline21.COPYFILTERS(Rec);
                                   Genline21.SETRANGE("Slip No.",'');
                                   MakeExcelDataHeader;
                                   IF Genline21.FINDSET THEN REPEAT
                                   GenJln.GET(Genline21."Journal Template Name",Genline21."Journal Batch Name",Genline21."Line No.");

                                     ExcelBuf.NewRow;
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Journal Template Name"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);

                                     ExcelBuf.AddColumn(FORMAT(GenJln."Line No."),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);              //2
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Account Type"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);              //3
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Account No."),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);               //4
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Posting Date"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);              //5
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Document Type"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);                //6
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Document No."),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);              //7

                                     ExcelBuf.AddColumn(FORMAT(GenJln.Description),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);               //4
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Bal. Account Type"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);              //5
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Bal. Account No."),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);                //6
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Currency Code"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);              //7

                                     ExcelBuf.AddColumn(FORMAT(GenJln.Amount),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Number);
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Debit Amount"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Number);
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Credit Amount"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Number);
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Shortcut Dimension 1 Code"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);              //5
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Shortcut Dimension 2 Code"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);                //6
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Applies-to Doc. Type"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);              //7
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Applies-to Doc. No."),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);              //5
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Due Date"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);                //6
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Payment Terms Code"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Applies-to ID"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Journal Batch Name"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Source Code"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Reason Code"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);

                                     ExcelBuf.AddColumn(FORMAT(GenJln."Posting Group"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Type Of Transaction"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Bank Payment Type"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Bank Branch No."),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Bank Account No."),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Customer/Vendor Bank"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Bank Name Cust/Vend"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);
                                     ExcelBuf.AddColumn(FORMAT(GenJln."Bank Address"),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);
                                     ExcelBuf.AddColumn(FORMAT(GenJln.BeniName),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);
                                     ExcelBuf.AddColumn(FORMAT(GenJln."CV_Ledger_Entry No."),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);
                                     ExcelBuf.AddColumn(FORMAT(GenJln.Narration),FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);



                                     //ND-Start
                                       DimSetEntry.RESET;
                                       GlSetup.RESET;
                                       DimSetEntry.SETRANGE(DimSetEntry."Dimension Set ID",GenJln."Dimension Set ID");
                                       DimSetEntry.SETRANGE(DimSetEntry."Dimension Code",'SELLING EXPENSES');
                                       IF DimSetEntry.FINDFIRST THEN BEGIN
                                             DimVal1:=DimSetEntry."Dimension Value Code";
                                             DimValue.RESET;
                                             DimCode1:='';
                                             DimName1:='';
                                             DimDesc1:='';
                                             //GlSetup.GET;
                                             DimValue.SETRANGE(DimValue."Dimension Code",'SELLING EXPENSES');
                                             DimValue.SETRANGE(Code,DimVal1);
                                             IF DimValue.FIND('-') THEN
                                                BEGIN
                                                  DimCode1:=DimValue.Code;
                                                  DimName1:=DimValue.Name;
                                                  DimDesc1:=DimValue.Description;
                                                END
                                              ELSE
                                                BEGIN
                                                  DimCode1:='';
                                                  DimName1:='';
                                                  DimDesc1:='';
                                                END;
                                          END;

                                     ExcelBuf.AddColumn(DimCode1,FALSE,'',FALSE,FALSE,TRUE,'@',ExcelBuf."Cell Type"::Text);

                                      DimVal1 :='';
                                      DimCode1:='';
                                      DimName1:='';
                                      DimDesc1:='';
                                     //ND-End

                                   //TotalBal := TotalBal + GenJln.Amount;
                                   UNTIL Genline21.NEXT = 0;
                                 //  MakeExcelFooter(TotalBal);

                                   CreateExcelbook;
                                 // YIMMDEVIP1.0.end
                               END;
                                }
      { 1102159009;2 ;Action    ;
                      CaptionML=ENU=Import From Excel;
                      RunObject=Report 60061 }
      { 1102159008;2 ;Action    ;
                      CaptionML=ENU=Delete Lines;
                      Image=Delete;
                      OnAction=VAR
                                 Genline21@1102159001 : Record 81;
                                 GenJln@1102159002 : Record 81;
                                 Confirm@1000000000 : Boolean;
                               BEGIN
                                 // YIMMDEVIP1.0.begin

                                 Genline21.RESET;
                                 Genline21.SETCURRENTKEY(Genline21."Journal Template Name",Genline21."Journal Batch Name",Genline21."Posting Date",
                                                       Genline21."Document No.");

                                 Genline21.COPYFILTERS(Rec);
                                 IF Genline21.FINDSET THEN REPEAT
                                   Genline21.TESTFIELD(Genline21."Slip No.",'');
                                 UNTIL Genline21.NEXT = 0;

                                 Confirm := DIALOG.CONFIRM('Do you want to delete all journal lines with blank Slip No.',FALSE);
                                 IF Confirm THEN BEGIN
                                 Genline21.RESET;
                                 Genline21.SETCURRENTKEY(Genline21."Journal Template Name",Genline21."Journal Batch Name",Genline21."Posting Date",
                                                       Genline21."Document No.");
                                 Genline21.COPYFILTERS(Rec);
                                 IF Genline21.FINDSET THEN
                                   Genline21.DELETEALL;
                                 END;//nd

                                 //  GenJln.GET(Genline21."Journal Template Name",Genline21."Journal Batch Name",Genline21."Line No.");
                                 //  GenJln.MODIFY;
                                 //UNTIL Genline21.NEXT = 0;
                                 // YIMMDEVIP1.0.end
                               END;
                                }
      { 24      ;1   ;ActionGroup;
                      CaptionML=[ENU=B&ank;
                                 ENA=B&ank];
                      Visible=FALSE }
      { 11      ;2   ;Action    ;
                      Name=ImportBankStatement;
                      CaptionML=[ENU=Import Bank Statement;
                                 ENA=Import Bank Statement];
                      Promoted=No;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IF FINDLAST THEN;
                                 ImportBankStatement;
                               END;
                                }
      { 21      ;2   ;Action    ;
                      Name=ShowStatementLineDetails;
                      CaptionML=[ENU=Bank Statement Details;
                                 ENA=Bank Statement Details];
                      RunObject=Page 1221;
                      RunPageLink=Posting Exch. No.=FIELD(Posting Exch. Entry No.),
                                  Line No.=FIELD(Posting Exch. Line No.);
                      Promoted=No;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=ExternalDocument;
                      PromotedCategory=Category4 }
      { 23      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=[ENU=Reconcile;
                                 ENA=Reconcile];
                      Promoted=No;
                      Visible=FALSE;
                      Image=Reconcile;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 GLReconcile.SetGenJnlLine(Rec);
                                 GLReconcile.RUN;
                               END;
                                }
      { 25      ;1   ;ActionGroup;
                      CaptionML=[ENU=Application;
                                 ENA=Application];
                      Visible=false }
      { 91      ;2   ;Action    ;
                      Name=Apply Entries;
                      ShortCutKey=Shift+F11;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Apply Manually;
                                 ENA=Apply Manually];
                      RunObject=Codeunit 225;
                      Promoted=No;
                      Image=ApplyEntries;
                      PromotedCategory=Category5 }
      { 27      ;2   ;Action    ;
                      Name=Match;
                      CaptionML=[ENU=Apply Automatically;
                                 ENA=Apply Automatically];
                      RunObject=Codeunit 1250;
                      Promoted=No;
                      PromotedIsBig=Yes;
                      Image=MapAccounts;
                      PromotedCategory=Category5 }
      { 34      ;2   ;Action    ;
                      Name=AddMappingRule;
                      CaptionML=[ENU=Map Text to Account;
                                 ENA=Map Text to Account];
                      Promoted=No;
                      PromotedIsBig=Yes;
                      Image=CheckRulesSyntax;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 AccountMapping@1000 : Record 1251;
                               BEGIN
                                 AccountMapping.InsertRec(Rec);
                               END;
                                }
      { 9       ;1   ;ActionGroup;
                      CaptionML=[ENU=Payro&ll;
                                 ENA=Payro&ll];
                      Visible=false }
      { 29      ;2   ;Action    ;
                      Name=ImportPayrollTransaction;
                      CaptionML=[ENU=Import Payroll Transaction;
                                 ENA=Import Payroll Transaction];
                      Promoted=No;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 GeneralLedgerSetup@1000 : Record 98;
                                 ImportPayrollTransaction@1001 : Codeunit 1202;
                               BEGIN
                                 GeneralLedgerSetup.GET;
                                 GeneralLedgerSetup.TESTFIELD("Payroll Trans. Import Format");
                                 IF FINDLAST THEN;
                                 ImportPayrollTransaction.SelectAndImportPayrollDataToGL(Rec,GeneralLedgerSetup."Payroll Trans. Import Format");
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 39  ;1   ;Field     ;
                Lookup=Yes;
                CaptionML=[ENU=Batch Name;
                           ENA=Batch Name];
                SourceExpr=CurrentJnlBatchName;
                OnValidate=BEGIN
                             GenJnlManagement.CheckName(CurrentJnlBatchName,Rec);
                             CurrentJnlBatchNameOnAfterVali;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           GenJnlManagement.LookupName(CurrentJnlBatchName,Rec);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1000000001;2;Field  ;
                SourceExpr=UpdateSlip;
                Visible=TRUE }

    { 1000000012;2;Field  ;
                SourceExpr="Journal Template Name";
                Visible=true;
                Editable=FALSE }

    { 2   ;2   ;Field     ;
                SourceExpr="Posting Date";
                StyleExpr=StyleTxt }

    { 1000000016;2;Field  ;
                SourceExpr="Slip No.";
                Visible=TRUE;
                Editable=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr="Document No.";
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                OptionCaptionML=[ENU=G/L Account,Entity;
                                 ENA=G/L Account,Customer];
                SourceExpr="Account Type";
                StyleExpr=StyleTxt;
                OnValidate=BEGIN
                             GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                             SetUserInteractions;
                             CurrPage.UPDATE;
                           END;
                            }

    { 10  ;2   ;Field     ;
                SourceExpr="Account No.";
                StyleExpr=StyleTxt;
                OnValidate=BEGIN
                             GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                             ShowShortcutDimCode(ShortcutDimCode);
                             SetUserInteractions;
                             CurrPage.UPDATE;
                           END;
                            }

    { 12  ;2   ;Field     ;
                SourceExpr=Description;
                StyleExpr=StyleTxt }

    { 1102159005;2;Field  ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=TRUE }

    { 63  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code" }

    { 300 ;2   ;Field     ;
                Name=Dim3;
                SourceExpr=[ShortcutDimCode[3]]];
                CaptionClass='1,2,3';
                Visible=Dim3Visible;
                Enabled=Dim3Enable;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(3,ShortcutDimCode[3]);
                         END;
                          }

    { 1102159006;2;Field  ;
                Width=50;
                SourceExpr=Narration }

    { 67  ;2   ;Field     ;
                AssistEdit=Yes;
                SourceExpr="Currency Code";
                Visible=TRUE;
                OnAssistEdit=BEGIN
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date");
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);

                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 1000000000;2;Field  ;
                SourceExpr="Debit Amount" }

    { 1000000002;2;Field  ;
                SourceExpr="Credit Amount" }

    { 1000000018;2;Field  ;
                SourceExpr="Amount (LCY)" }

    { 5   ;2   ;Field     ;
                SourceExpr="Applies-to Doc. Type";
                Visible=TRUE }

    { 26  ;2   ;Field     ;
                SourceExpr="Applies-to Doc. No.";
                Visible=TRUE }

    { 1000000023;2;Field  ;
                SourceExpr="Posting Group";
                Visible=TRUE;
                Editable=TRUE;
                OnValidate=VAR
                             Text50000@1102159001 : TextConst 'ENU=Document is already applied.Posting Group cannot be changed';
                           BEGIN
                             //YIMMDEVIP1.0.begin
                             IF "Applies-to Doc. No." <> '' THEN
                             ERROR(Text50000);
                             //YIMMDEVIP1.0.end
                           END;
                            }

    { 1000000028;2;Field  ;
                SourceExpr="Business Unit Code";
                Visible=false }

    { 1000000026;2;Field  ;
                SourceExpr="Line No.";
                Visible=FALSE }

    { 1000000014;2;Field  ;
                SourceExpr="Journal Batch Name";
                Visible=FALSE;
                Editable=FALSE }

    { 1000000006;2;Field  ;
                SourceExpr="Ref No.";
                Visible=FALSE;
                Editable=FALSE }

    { 1102159003;2;Field  ;
                SourceExpr="Slip Date";
                Visible=false }

    { 83  ;2   ;Field     ;
                SourceExpr="Document Date";
                Visible=FALSE;
                StyleExpr=StyleTxt }

    { 4   ;2   ;Field     ;
                SourceExpr="Document Type";
                Visible=FALSE;
                StyleExpr=StyleTxt }

    { 19  ;2   ;Field     ;
                SourceExpr="Incoming Document Entry No.";
                Visible=FALSE;
                OnAssistEdit=BEGIN
                               IF "Incoming Document Entry No." > 0 THEN
                                 HYPERLINK(GetIncomingDocumentURL);
                             END;
                              }

    { 81  ;2   ;Field     ;
                SourceExpr="External Document No.";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Applies-to Ext. Doc. No.";
                Visible=FALSE }

    { 17  ;2   ;Field     ;
                SourceExpr="Payer Information";
                Visible=FALSE;
                StyleExpr=StyleTxt }

    { 15  ;2   ;Field     ;
                SourceExpr="Transaction Information";
                Visible=FALSE;
                StyleExpr=StyleTxt }

    { 71  ;2   ;Field     ;
                Name=<Business Unit Code2>;
                SourceExpr="Business Unit Code";
                Visible=FALSE }

    { 65  ;2   ;Field     ;
                SourceExpr="Salespers./Purch. Code";
                Visible=FALSE }

    { 93  ;2   ;Field     ;
                SourceExpr="Campaign No.";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr=Amount;
                Visible=FALSE }

    { 1000000004;2;Field  ;
                SourceExpr="B/L Date";
                Visible="B/L DateVisible";
                Enabled="B/L DateEnable" }

    { 14  ;2   ;Field     ;
                SourceExpr="Gen. Posting Type";
                Visible=FALSE }

    { 77  ;2   ;Field     ;
                SourceExpr="Gen. Bus. Posting Group";
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                SourceExpr="Gen. Prod. Posting Group";
                Visible=FALSE }

    { 41  ;2   ;Field     ;
                SourceExpr="VAT Bus. Posting Group";
                Visible=FALSE }

    { 85  ;2   ;Field     ;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE }

    { 101 ;2   ;Field     ;
                SourceExpr="VAT Amount";
                Visible=FALSE }

    { 99  ;2   ;Field     ;
                SourceExpr="VAT Difference";
                Visible=FALSE }

    { 103 ;2   ;Field     ;
                SourceExpr="Bal. VAT Amount";
                Visible=FALSE }

    { 105 ;2   ;Field     ;
                SourceExpr="Bal. VAT Difference";
                Visible=FALSE }

    { 53  ;2   ;Field     ;
                OptionCaptionML=[ENU=<G/L Account,Entity>;
                                 ENA=G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner];
                SourceExpr="Bal. Account Type";
                Visible=FALSE;
                StyleExpr=StyleTxt }

    { 55  ;2   ;Field     ;
                SourceExpr="Bal. Account No.";
                Visible=FALSE;
                StyleExpr=StyleTxt;
                OnValidate=BEGIN
                             GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                             ShowShortcutDimCode(ShortcutDimCode);
                           END;
                            }

    { 57  ;2   ;Field     ;
                SourceExpr="Bal. Gen. Posting Type";
                Visible=FALSE }

    { 79  ;2   ;Field     ;
                SourceExpr="Bal. Gen. Bus. Posting Group";
                Visible=FALSE }

    { 59  ;2   ;Field     ;
                SourceExpr="Bal. Gen. Prod. Posting Group";
                Visible=FALSE }

    { 87  ;2   ;Field     ;
                SourceExpr="Bal. VAT Bus. Posting Group";
                Visible=FALSE }

    { 89  ;2   ;Field     ;
                SourceExpr="Bal. VAT Prod. Posting Group";
                Visible=FALSE }

    { 95  ;2   ;Field     ;
                SourceExpr="Bill-to/Pay-to No.";
                Visible=FALSE }

    { 97  ;2   ;Field     ;
                SourceExpr="Ship-to/Order Address Code";
                Visible=FALSE }

    { 302 ;2   ;Field     ;
                SourceExpr=[ShortcutDimCode[4]]];
                CaptionClass='1,2,4';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(4,ShortcutDimCode[4]);
                         END;
                          }

    { 304 ;2   ;Field     ;
                SourceExpr=[ShortcutDimCode[5]]];
                CaptionClass='1,2,5';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(5,ShortcutDimCode[5]);
                         END;
                          }

    { 306 ;2   ;Field     ;
                SourceExpr=[ShortcutDimCode[6]]];
                CaptionClass='1,2,6';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(6,ShortcutDimCode[6]);
                         END;
                          }

    { 308 ;2   ;Field     ;
                SourceExpr=[ShortcutDimCode[7]]];
                CaptionClass='1,2,7';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(7,ShortcutDimCode[7]);
                         END;
                          }

    { 310 ;2   ;Field     ;
                SourceExpr=[ShortcutDimCode[8]]];
                CaptionClass='1,2,8';
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;

                OnLookup=BEGIN
                           LookupShortcutDimCode(8,ShortcutDimCode[8]);
                         END;
                          }

    { 69  ;2   ;Field     ;
                SourceExpr="Payment Terms Code";
                Visible=FALSE }

    { 36  ;2   ;Field     ;
                SourceExpr="Applied Automatically";
                Visible=FALSE;
                Editable=FALSE }

    { 3   ;2   ;Field     ;
                Name=Applied;
                SourceExpr=IsApplied;
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Applies-to ID";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                SourceExpr="On Hold";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Bank Payment Type";
                Visible=FALSE }

    { 73  ;2   ;Field     ;
                SourceExpr="Reason Code";
                Visible=FALSE }

    { 7   ;2   ;Field     ;
                SourceExpr=Comment;
                Visible=FALSE }

    { 1102159002;2;Field  ;
                SourceExpr="Source Type";
                Visible=FALSE }

    { 1102159001;2;Field  ;
                SourceExpr="Source No.";
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                SourceExpr="Direct Debit Mandate ID";
                Visible=FALSE }

    { 30  ;1   ;Group      }

    { 1901776101;2;Group  ;
                GroupType=FixedLayout }

    { 1900545301;3;Group  ;
                CaptionML=[ENU=Account Name;
                           ENA=Account Name] }

    { 35  ;4   ;Field     ;
                SourceExpr=AccName;
                Editable=FALSE }

    { 1900295701;3;Group  ;
                CaptionML=[ENU=Bal. Account Name;
                           ENA=Bal. Account Name] }

    { 37  ;4   ;Field     ;
                CaptionML=[ENU=Bal. Account Name;
                           ENA=Bal. Account Name];
                SourceExpr=BalAccName;
                Editable=FALSE }

    { 1902759701;3;Group  ;
                CaptionML=[ENU=Balance;
                           ENA=Balance] }

    { 31  ;4   ;Field     ;
                Name=Balance;
                CaptionML=[ENU=Balance;
                           ENA=Balance];
                SourceExpr=Balance + "Balance (LCY)" - xRec."Balance (LCY)";
                AutoFormatType=1;
                Visible=BalanceVisible;
                Editable=FALSE }

    { 1901652501;3;Group  ;
                CaptionML=[ENU=Total Balance;
                           ENA=Total Balance] }

    { 33  ;4   ;Field     ;
                Name=TotalBalance;
                CaptionML=[ENU=Total Balance;
                           ENA=Total Balance];
                SourceExpr=TotalBalance + "Balance (LCY)" - xRec."Balance (LCY)";
                AutoFormatType=1;
                Visible=TotalBalanceVisible;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900919607;1;Part   ;
                PagePartID=Page699;
                Visible=FALSE;
                PartType=Page }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ChangeExchangeRate@1000 : Page 511;
      GLReconcile@1001 : Page 345;
      GenJnlManagement@1002 : Codeunit 230;
      ReportPrint@1003 : Codeunit 228;
      CurrentJnlBatchName@1004 : Code[50];
      AccName@1005 : Text[50];
      BalAccName@1006 : Text[50];
      Balance@1007 : Decimal;
      TotalBalance@1008 : Decimal;
      ShowBalance@1009 : Boolean;
      ShowTotalBalance@1010 : Boolean;
      ShortcutDimCode@1011 : ARRAY [8] OF Code[20];
      Text000@1012 : TextConst 'ENU=General Journal lines have been successfully inserted from Standard General Journal %1.;ENA=General Journal lines have been successfully inserted from Standard General Journal %1.';
      Text001@1013 : TextConst 'ENU=Standard General Journal %1 has been successfully created.;ENA=Standard General Journal %1 has been successfully created.';
      OpenedFromBatch@1014 : Boolean;
      UserBatch@1000000000 : Code[50];
      Master@1000000004 : Record 50008;
      Genline2@1000000003 : Record 81;
      Nos@1000000002 : Codeunit 396;
      SlipNo@1000000001 : Code[20];
      TempGJnlLine22@1000000009 : Record 81;
      GJnlLine22@1000000008 : Record 232;
      "LineNo."@1000000007 : Integer;
      GJnlLine11@1000000006 : Record 81;
      Type@1000000010 : 'General,Sales,Purchases,Cash Receipts,Payments,Assets,Intercompany,Jobs,Post Dated';
      ForGenBatch@1000000011 : Record 232;
      SameSlipNo@1000000012 : Code[20];
      Text002@1000000013 : TextConst 'ENU=Generate Slip No. First';
      Count@1000000014 : Integer;
      GlSetup@1000000016 : Record 98;
      Noseries@1000000017 : Record 309;
      Bool@1000000018 : Decimal;
      Text004@1000000019 : TextConst 'ENU=Selected Lines are not Balance';
      BalanceVisible@19073040 : Boolean INDATASET;
      TotalBalanceVisible@19063333 : Boolean INDATASET;
      StyleTxt@1015 : Text;
      Dim3Visible@19014263 : Boolean INDATASET;
      "B/L DateVisible"@19017400 : Boolean INDATASET;
      "Business Unit CodeVisible"@19006232 : Boolean INDATASET;
      "Document TypeVisible"@19012068 : Boolean INDATASET;
      "Journal Template NameVisible"@19046491 : Boolean INDATASET;
      Dim3Enable@19013546 : Boolean INDATASET;
      "B/L DateEnable"@19047711 : Boolean INDATASET;
      "//UPG13R2"@1102159001 : Integer;
      DimSetEntry@1102159002 : Record 480;
      "Posting GroupEditable"@1102159003 : Boolean;
      "Posting GroupVisible"@1102159004 : Boolean INDATASET;
      "-------"@1102159005 : Integer;
      ExcelBuf@1102159006 : Record 370;
      Text005@1102159007 : TextConst 'ENU=Gen Jln Lines';
      Text006@1102159008 : TextConst 'ENU=Lines';
      TotalBal@1102159009 : Decimal;
      Text007@1102159010 : TextConst 'ENU=Slip No. Alreday Exist. Line can not be deleted.';
      Reportforrounding@1000000005 : Report 50096;
      DimVal1@1000000023 : Code[30];
      DimValue@1000000022 : Record 349;
      DimName1@1000000021 : Code[50];
      DimDesc1@1000000020 : Code[150];
      DimCode1@1000000015 : Code[20];

    LOCAL PROCEDURE UpdateBalance@1();
    BEGIN
      GenJnlManagement.CalcBalance(Rec,xRec,Balance,TotalBalance,ShowBalance,ShowTotalBalance);
      BalanceVisible := ShowBalance;
      TotalBalanceVisible := ShowTotalBalance;
    END;

    PROCEDURE EnableFields_GL@1000000000();
    VAR
      Master_Setup@1000000000 : Record 50008;
    BEGIN
      Master_Setup.GET;

       IF ((COMPANYNAME = Master_Setup."Company Name YMKI") OR (COMPANYNAME = Master_Setup."Company Name YMMWJ")) THEN
         BEGIN
            Dim3Enable :=FALSE;
            "B/L DateEnable" :=FALSE;
            Dim3Visible :=FALSE;
            "B/L DateVisible" :=FALSE;

         END
      ELSE IF (COMPANYNAME = Master_Setup."Company Name YEID")THEN // <<--- YEID1.0 Start
               BEGIN
                  "Business Unit CodeVisible" :=FALSE;
                  "Document TypeVisible" :=FALSE;
                  "Journal Template NameVisible" :=FALSE;
                  Dim3Visible :=FALSE;
               END //YEID1.0   End <<---
           ELSE
               BEGIN
                  Dim3Enable :=TRUE;
                  "B/L DateEnable" :=TRUE;
                  Dim3Visible :=TRUE;
                  "B/L DateVisible" :=TRUE;
                  {
                   "Posting GroupEditable" :=FALSE; // YIMMDEVIP1.0
                   "Posting GroupVisible" :=FALSE; // YIMMDEVIP1.0
                   }
               END;
    END;

    LOCAL PROCEDURE CurrentJnlBatchNameOnAfterVali@19002411();
    BEGIN
      CurrPage.SAVERECORD;
      GenJnlManagement.SetName(CurrentJnlBatchName,Rec);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE SetUserInteractions@2();
    BEGIN
      StyleTxt := GetStyle;
    END;

    PROCEDURE "----"@1102159001();
    BEGIN
    END;

    LOCAL PROCEDURE MakeExcelDataHeader@1102159003();
    BEGIN

      ExcelBuf.NewRow;
      //ExcelBuf.SetUseInfoSheet;
      ExcelBuf.AddColumn('Journal Template Name',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('Line No',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);            //2
      ExcelBuf.AddColumn('Account Type',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                 //3
      ExcelBuf.AddColumn('Account No',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);             //4
      ExcelBuf.AddColumn('Posting Date',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                    //5
      ExcelBuf.AddColumn('Document Type',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);             //6
      ExcelBuf.AddColumn('Document No',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);        //7
      ExcelBuf.AddColumn('Description',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                  //8
      ExcelBuf.AddColumn('Bal. Account Type',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                 //9
      ExcelBuf.AddColumn('Bal. Account No',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);         //10
      ExcelBuf.AddColumn('Currency Code',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);   //11
      ExcelBuf.AddColumn('Amount',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('Debit Amount',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('Credit Amount',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('Shortcut Dimension 1 Code',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);             //13
      ExcelBuf.AddColumn('Shortcut Dimension 2 Code',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                        //14
      ExcelBuf.AddColumn('Applies-to Doc. Type',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                         //15
      ExcelBuf.AddColumn('Applies-to Doc. No',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                     //16
      ExcelBuf.AddColumn('Due Date',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                 //17
      ExcelBuf.AddColumn('Payment Terms Code',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                   //18
      ExcelBuf.AddColumn('Applies-to ID',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('Journal Batch Name',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('Source Code',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('Reason Code',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('Posting Group',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('Type Of Transaction',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('Bank Payment Type',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('Bank Branch No.',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('Bank Account No.',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('Customer/Vendor Bank',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('Bank Name Cust/Vend',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('Bank Address',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('BeniName',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('CV_Ledger_Entry No.',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('Narration',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('Selling Expense Code',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);

      ExcelBuf.ClearNewRow;
      ExcelBuf.NewRow;
      ExcelBuf.NewRow;
      {
      ExcelBuf.NewRow;
      //ExcelBuf.SetUseInfoSheet;
      ExcelBuf.AddColumn('Journal Template Name',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('Journal Batch Name',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                    //1
      //ExcelBuf.AddColumn('Line No',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);            //2
      ExcelBuf.AddColumn('Account Type',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                 //3
      ExcelBuf.AddColumn('Account No',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);             //4
      ExcelBuf.AddColumn('Posting Date',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                    //5
      ExcelBuf.AddColumn('Document Type',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);             //6
      ExcelBuf.AddColumn('Document No',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);        //7
      ExcelBuf.AddColumn('Description',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                  //8
      ExcelBuf.AddColumn('Bal. Account Type',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                 //9
      ExcelBuf.AddColumn('Bal. Account No',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);         //10
      ExcelBuf.AddColumn('Currency Code',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);   //11
      ExcelBuf.AddColumn('Amount',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                 //12
      ExcelBuf.AddColumn('Shortcut Dimension 1 Code',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);             //13
      ExcelBuf.AddColumn('Shortcut Dimension 2 Code',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                        //14
      ExcelBuf.AddColumn('Applies-to Doc. Type',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                         //15
      ExcelBuf.AddColumn('Applies-to Doc. No',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                     //16
      ExcelBuf.AddColumn('Due Date',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                 //17
      ExcelBuf.AddColumn('Payment Terms Code',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                   //18
      ExcelBuf.AddColumn('Applies-to ID',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                        //19
                      //20

      ExcelBuf.ClearNewRow;
      ExcelBuf.NewRow;
      ExcelBuf.NewRow;
       }
    END;

    PROCEDURE CreateExcelbook@1102159002();
    BEGIN
      ExcelBuf.CreateBookAndOpenExcel(Text005,Text006,COMPANYNAME,USERID);                                                         //UPG13R2DEV
    END;

    PROCEDURE MakeExcelFooter@1102159005(TotalBalLoc@1102159001 : Decimal);
    BEGIN
      ExcelBuf.NewRow;
      //ExcelBuf.ClearNewRow;
      //ExcelBuf.ClearNewRow;
      //ExcelBuf.NewRow;
      ExcelBuf.AddColumn('',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                    //1
      ExcelBuf.AddColumn('',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);            //2
      ExcelBuf.AddColumn('',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                 //3
      ExcelBuf.AddColumn('',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);             //4
      ExcelBuf.AddColumn('Total Balance',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                    //5
      ExcelBuf.AddColumn('',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);             //6
      ExcelBuf.AddColumn('',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);        //7
      ExcelBuf.AddColumn('',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                  //8
      ExcelBuf.AddColumn('',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                 //9
      ExcelBuf.AddColumn('',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);         //10
      ExcelBuf.AddColumn(FORMAT(TotalBalLoc),FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);             //13
      ExcelBuf.AddColumn('',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                        //14
      ExcelBuf.AddColumn('',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                         //15
      ExcelBuf.AddColumn('',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                     //16
      ExcelBuf.AddColumn('',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                 //17
      ExcelBuf.AddColumn('',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                   //18
      ExcelBuf.AddColumn('',FALSE,'',TRUE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);                        //19
    END;

    BEGIN
    {
      //YIMMABT
      1) UserID is assigned as a CurrentJnlBatchName
      //YIMMNGVR
      //YIMM
      REPORT ADDED FOR SUGGESTING THE VENDOR ADJUSTMENTS
      //YIMMASL
      1) CODE ADDED TO MAP SLIP NO. CONCEPT
      //YEID1.0 Code Added to make fields Not Visible in case of YEID
      //UPG13
      5.0 Customized Code to 2013 Merged Code.
      // UPG13C
      Code added or edited to solve compilation errors after migrating merged and customized objects to 2013 from 2009 R2
      // UPG13R2
      2013 to 2013R2 Merged Code/New Code.
      // UPG13R2C
      Code added or edited to solve compilation errors after migrating merged and customized objects to 2013R2 from 2013

      //YIMMDEVIP1.0
      Issue no.50
      source type and source field is shown in gen journal transaction

      Issue No.9 Slip date shown
      flow slip generation date

      Issue No-25
      Document is already applied.Posting Group cannot be changed

      Code added on GenerateSlipNo,UpdateSlipNo actions to solve selection of multiple lines on WebPage based on filters.
      Functions added for Export to Excel based on filters and delete lines

      //SMDEV1.0
      Changed the Caption of Account Type & Bal Account Type to Entity and the visibility of some fields.
    }
    END.
  }
}

