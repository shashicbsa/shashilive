OBJECT Table 5404 Item Unit of Measure
{
  OBJECT-PROPERTIES
  {
    Date=06/28/14;
    Time=12:00:00;
    Version List=NAVW17.10.00.37221;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               TestItemSetup;
               TestNoOpenEntriesExist;
             END;

    OnRename=BEGIN
               TestItemSetup;
               TestNoOpenEntriesExist;
             END;

    CaptionML=[ENU=Item Unit of Measure;
               ENA=Item Unit of Measure];
    LookupPageID=Page5404;
  }
  FIELDS
  {
    { 1   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                CalcWeight;
                                                              END;

                                                   CaptionML=[ENU=Item No.;
                                                              ENA=Item No.];
                                                   NotBlank=Yes }
    { 2   ;   ;Code                ;Code10        ;TableRelation="Unit of Measure";
                                                   CaptionML=[ENU=Code;
                                                              ENA=Code];
                                                   NotBlank=Yes }
    { 3   ;   ;Qty. per Unit of Measure;Decimal   ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                IF "Qty. per Unit of Measure" <= 0 THEN
                                                                  FIELDERROR("Qty. per Unit of Measure",Text000);
                                                                IF xRec."Qty. per Unit of Measure" <> "Qty. per Unit of Measure" THEN
                                                                  CheckNoEntriesWithUoM;
                                                                Item.GET("Item No.");
                                                                IF Item."Base Unit of Measure" = Code THEN
                                                                  TESTFIELD("Qty. per Unit of Measure",1);
                                                                CalcWeight;
                                                              END;

                                                   CaptionML=[ENU=Qty. of Base Unit of Measure per Unit;
                                                              ENA=Qty. of Base Unit of Measure per Unit];
                                                   DecimalPlaces=0:5 }
    { 7300;   ;Length              ;Decimal       ;OnValidate=BEGIN
                                                                CalcCubage;
                                                              END;

                                                   CaptionML=[ENU=Length;
                                                              ENA=Length];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 7301;   ;Width               ;Decimal       ;OnValidate=BEGIN
                                                                CalcCubage;
                                                              END;

                                                   CaptionML=[ENU=Width;
                                                              ENA=Width];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 7302;   ;Height              ;Decimal       ;OnValidate=BEGIN
                                                                CalcCubage;
                                                              END;

                                                   CaptionML=[ENU=Height;
                                                              ENA=Height];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 7303;   ;Cubage              ;Decimal       ;CaptionML=[ENU=Cubage;
                                                              ENA=Cubage];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 7304;   ;Weight              ;Decimal       ;CaptionML=[ENU=Weight;
                                                              ENA=Weight];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
  }
  KEYS
  {
    {    ;Item No.,Code                           ;Clustered=Yes }
    {    ;Item No.,Qty. per Unit of Measure        }
    {    ;Code                                     }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Qty. per Unit of Measure            }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=must be greater than 0;ENA=must be greater than 0';
      Item@1001 : Record 27;
      Text001@1004 : TextConst 'ENU=You cannot rename %1 %2 for item %3 because it is the item''s %4 and there are one or more open ledger entries for the item.;ENA=You cannot rename %1 %2 for item %3 because it is the item''s %4 and there are one or more open ledger entries for the item.';
      CannotModifyBaseUnitOfMeasureErr@1005 : TextConst '@@@=%1 Table name (Item Unit of measure), %2 Value of Measure (KG, PCS...), %3 Item ID, %4 Base unit of Measure;ENU=You cannot modify %1 %2 for item %3 because it is the item''s %4.;ENA=You cannot modify %1 %2 for item %3 because it is the item''s %4.';
      CannotModifyUnitOfMeasureErr@1002 : TextConst '@@@=%1 Table name (Item Unit of measure), %2 Value of Measure (KG, PCS...), %3 Item ID, %4 Entry Table Name, %5 Field Caption;ENU=You cannot modify %1 %2 for item %3 because non-zero %5 with %2 exists in %4.;ENA=You cannot modify %1 %2 for item %3 because non-zero %5 with %2 exists in %4.';

    PROCEDURE CalcCubage@7300();
    BEGIN
      Cubage := Length * Width * Height;
    END;

    PROCEDURE CalcWeight@7301();
    BEGIN
      IF Item."No." <> "Item No." THEN
        Item.GET("Item No.");
      Weight := "Qty. per Unit of Measure" * Item."Net Weight";
    END;

    PROCEDURE TestNoOpenEntriesExist@1();
    VAR
      Item@1000 : Record 27;
      ItemLedgEntry@1001 : Record 32;
    BEGIN
      IF Item.GET("Item No.") THEN
        IF Item."Base Unit of Measure" = xRec.Code THEN BEGIN
          ItemLedgEntry.SETCURRENTKEY("Item No.",Open);
          ItemLedgEntry.SETRANGE("Item No.","Item No.");
          ItemLedgEntry.SETRANGE(Open,TRUE);
          IF NOT ItemLedgEntry.ISEMPTY THEN
            ERROR(Text001,TABLECAPTION,xRec.Code,"Item No.",Item.FIELDCAPTION("Base Unit of Measure"));
        END;
    END;

    PROCEDURE TestItemSetup@2();
    BEGIN
      IF Item.GET("Item No.") THEN BEGIN
        IF Item."Base Unit of Measure" = xRec.Code THEN
          ERROR(CannotModifyBaseUnitOfMeasureErr,TABLECAPTION,xRec.Code,"Item No.",Item.FIELDCAPTION("Base Unit of Measure"));
        IF Item."Sales Unit of Measure" = xRec.Code THEN
          ERROR(CannotModifyBaseUnitOfMeasureErr,TABLECAPTION,xRec.Code,"Item No.",Item.FIELDCAPTION("Sales Unit of Measure"));
        IF Item."Purch. Unit of Measure" = xRec.Code THEN
          ERROR(CannotModifyBaseUnitOfMeasureErr,TABLECAPTION,xRec.Code,"Item No.",Item.FIELDCAPTION("Purch. Unit of Measure"));
      END;
    END;

    PROCEDURE CheckNoEntriesWithUoM@3();
    VAR
      WarehouseEntry@1001 : Record 7312;
    BEGIN
      WarehouseEntry.SETRANGE("Item No.","Item No.");
      WarehouseEntry.SETRANGE("Unit of Measure Code",Code);
      WarehouseEntry.CALCSUMS("Qty. (Base)",Quantity);
      IF (WarehouseEntry."Qty. (Base)" <> 0) OR (WarehouseEntry.Quantity <> 0) THEN
        ERROR(
          CannotModifyUnitOfMeasureErr,TABLECAPTION,xRec.Code,"Item No.",WarehouseEntry.TABLECAPTION,
          WarehouseEntry.FIELDCAPTION(Quantity));

      CheckNoRemainingQty;
    END;

    LOCAL PROCEDURE CheckNoRemainingQty@5();
    BEGIN
      CheckNoRemQtyPurchLine;
      CheckNoRemQtySalesLine;
      CheckNoRemQtyTransferLine;
      CheckNoRemQtyProdOrderLine;
      CheckNoRemQtyProdOrderComponent;
      CheckNoRemQtyServiceLine;
    END;

    LOCAL PROCEDURE CheckNoRemQtyPurchLine@9();
    VAR
      PurchLine@1000 : Record 39;
    BEGIN
      PurchLine.SETRANGE(Type,PurchLine.Type::Item);
      PurchLine.SETRANGE("No.","Item No.");
      PurchLine.SETRANGE("Unit of Measure Code",Code);
      PurchLine.SETFILTER("Qty. to Receive",'<>%1',0);
      IF NOT PurchLine.ISEMPTY THEN
        ERROR(
          CannotModifyUnitOfMeasureErr,TABLECAPTION,xRec.Code,"Item No.",
          PurchLine.TABLECAPTION,PurchLine.FIELDCAPTION("Qty. to Receive"));
    END;

    LOCAL PROCEDURE CheckNoRemQtySalesLine@10();
    VAR
      SalesLine@1000 : Record 37;
    BEGIN
      SalesLine.SETRANGE(Type,SalesLine.Type::Item);
      SalesLine.SETRANGE("No.","Item No.");
      SalesLine.SETRANGE("Unit of Measure Code",Code);
      SalesLine.SETFILTER("Qty. to Ship",'<>%1',0);
      IF NOT SalesLine.ISEMPTY THEN
        ERROR(
          CannotModifyUnitOfMeasureErr,TABLECAPTION,xRec.Code,"Item No.",
          SalesLine.TABLECAPTION,SalesLine.FIELDCAPTION("Qty. to Ship"));
    END;

    LOCAL PROCEDURE CheckNoRemQtyTransferLine@11();
    VAR
      TransferLine@1000 : Record 5741;
    BEGIN
      TransferLine.SETRANGE("Item No.","Item No.");
      TransferLine.SETRANGE("Unit of Measure Code",Code);
      TransferLine.SETFILTER("Qty. to Ship",'<>%1',0);
      IF NOT TransferLine.ISEMPTY THEN
        ERROR(
          CannotModifyUnitOfMeasureErr,TABLECAPTION,xRec.Code,"Item No.",
          TransferLine.TABLECAPTION,TransferLine.FIELDCAPTION("Qty. to Ship"));
    END;

    LOCAL PROCEDURE CheckNoRemQtyProdOrderLine@12();
    VAR
      ProdOrderLine@1000 : Record 5406;
    BEGIN
      ProdOrderLine.SETRANGE("Item No.","Item No.");
      ProdOrderLine.SETRANGE("Unit of Measure Code",Code);
      ProdOrderLine.SETFILTER("Remaining Quantity",'<>%1',0);
      IF NOT ProdOrderLine.ISEMPTY THEN
        ERROR(
          CannotModifyUnitOfMeasureErr,TABLECAPTION,xRec.Code,"Item No.",
          ProdOrderLine.TABLECAPTION,ProdOrderLine.FIELDCAPTION("Remaining Quantity"));
    END;

    LOCAL PROCEDURE CheckNoRemQtyProdOrderComponent@13();
    VAR
      ProdOrderComponent@1000 : Record 5407;
    BEGIN
      ProdOrderComponent.SETRANGE("Item No.","Item No.");
      ProdOrderComponent.SETRANGE("Unit of Measure Code",Code);
      ProdOrderComponent.SETFILTER("Remaining Quantity",'<>%1',0);
      IF NOT ProdOrderComponent.ISEMPTY THEN
        ERROR(
          CannotModifyUnitOfMeasureErr,TABLECAPTION,xRec.Code,"Item No.",
          ProdOrderComponent.TABLECAPTION,ProdOrderComponent.FIELDCAPTION("Remaining Quantity"));
    END;

    LOCAL PROCEDURE CheckNoRemQtyServiceLine@14();
    VAR
      ServiceLine@1000 : Record 5902;
    BEGIN
      ServiceLine.SETRANGE(Type,ServiceLine.Type::Item);
      ServiceLine.SETRANGE("No.","Item No.");
      ServiceLine.SETRANGE("Unit of Measure Code",Code);
      ServiceLine.SETFILTER("Qty. to Ship",'<>%1',0);
      IF NOT ServiceLine.ISEMPTY THEN
        ERROR(
          CannotModifyUnitOfMeasureErr,TABLECAPTION,xRec.Code,"Item No.",
          ServiceLine.TABLECAPTION,ServiceLine.FIELDCAPTION("Qty. to Ship"));
    END;

    BEGIN
    END.
  }
}

