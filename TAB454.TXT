OBJECT Table 454 Approval Entry
{
  OBJECT-PROPERTIES
  {
    Date=10/01/15;
    Time=19:04:12;
    Modified=Yes;
    Version List=NAVW17.10.00.36035,YIMMNTAP,YIMMNTAs,Mel1.0,UPG09R2,UPG13,UPG13C,UPG13R2;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Approval Entry;
               ENA=Approval Entry];
  }
  FIELDS
  {
    { 1   ;   ;Table ID            ;Integer       ;CaptionML=[ENU=Table ID;
                                                              ENA=Table ID] }
    { 2   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ENA=Document Type];
                                                   OptionCaptionML=[ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                                    ENA=Quote,Order,Invoice,CR/Adj Note,Blanket Order,Return Order];
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order }
    { 3   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ENA=Document No.] }
    { 4   ;   ;Sequence No.        ;Integer       ;CaptionML=[ENU=Sequence No.;
                                                              ENA=Sequence No.] }
    { 5   ;   ;Approval Code       ;Code20        ;CaptionML=[ENU=Approval Code;
                                                              ENA=Approval Code] }
    { 6   ;   ;Sender ID           ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=BEGIN
                                                              UserMgt.LookupUserID("Sender ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Sender ID;
                                                              ENA=Sender ID] }
    { 7   ;   ;Salespers./Purch. Code;Code10      ;CaptionML=[ENU=Salespers./Purch. Code;
                                                              ENA=Salespers./Purch. Code] }
    { 8   ;   ;Approver ID         ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=BEGIN
                                                              UserMgt.LookupUserID("Approver ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Approver ID;
                                                              ENA=Approver ID] }
    { 9   ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              ENA=Status];
                                                   OptionCaptionML=[ENU=Created,Open,Canceled,Rejected,Approved;
                                                                    ENA=Created,Open,Cancelled,Rejected,Approved];
                                                   OptionString=Created,Open,Canceled,Rejected,Approved }
    { 10  ;   ;Date-Time Sent for Approval;DateTime;
                                                   CaptionML=[ENU=Date-Time Sent for Approval;
                                                              ENA=Date-Time Sent for Approval] }
    { 11  ;   ;Last Date-Time Modified;DateTime   ;CaptionML=[ENU=Last Date-Time Modified;
                                                              ENA=Last Date-Time Modified] }
    { 12  ;   ;Last Modified By ID ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=BEGIN
                                                              UserMgt.LookupUserID("Last Modified By ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Last Modified By ID;
                                                              ENA=Last Modified By ID] }
    { 13  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Approval Comment Line" WHERE (Table ID=FIELD(Table ID),
                                                                                                    Document Type=FIELD(Document Type),
                                                                                                    Document No.=FIELD(Document No.)));
                                                   CaptionML=[ENU=Comment;
                                                              ENA=Comment];
                                                   Editable=No }
    { 14  ;   ;Due Date            ;Date          ;CaptionML=[ENU=Due Date;
                                                              ENA=Due Date] }
    { 15  ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              ENA=Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 16  ;   ;Amount (LCY)        ;Decimal       ;CaptionML=[ENU=Amount (LCY);
                                                              ENA=Amount (LCY)];
                                                   AutoFormatType=1 }
    { 17  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              ENA=Currency Code] }
    { 18  ;   ;Approval Type       ;Option        ;CaptionML=[ENU=Approval Type;
                                                              ENA=Approval Type];
                                                   OptionCaptionML=[ENU=" ,Sales Pers./Purchaser,Approver";
                                                                    ENA=" ,Sales Pers./Purchaser,Approver"];
                                                   OptionString=[ ,Sales Pers./Purchaser,Approver] }
    { 19  ;   ;Limit Type          ;Option        ;CaptionML=[ENU=Limit Type;
                                                              ENA=Limit Type];
                                                   OptionCaptionML=[ENU=Approval Limits,Credit Limits,Request Limits,No Limits;
                                                                    ENA=Approval Limits,Credit Limits,Request Limits,No Limits];
                                                   OptionString=Approval Limits,Credit Limits,Request Limits,No Limits }
    { 20  ;   ;Available Credit Limit (LCY);Decimal;
                                                   CaptionML=[ENU=Available Credit Limit (LCY);
                                                              ENA=Available Credit Limit (LCY)] }
    { 50001;  ;Type Of Transaction ;Option        ;OnValidate=BEGIN
                                                                //YIMMAEXP

                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   OptionCaptionML=ENU=" ,Selling In,Selling Out,Direct,Indirect,Adm.MKT,Free Service,Claim,Promotion,Sharing,Import,FA,Others,Imacs,Propac,Gport,TMS,Other YMKI,Propac Ex.,Intrst_Deposit,Imacs-ATV,Imacs-Generator,Imacs-CBU,Campaign,DDS1 Vendor,DDS2 Vendor,DDS3 Vendor,DDS4 Vendor,DDS5 Vendor,DDS6 Vendor,DDS7 Vendor,DDS8 Vendor,DDS9 Vendor,MKT Vendor,SVC Vendor,MS Vendor,POD Vendor,Others Purchase,Ekspedisi Log-POD";
                                                   OptionString=[ ,Selling In,Selling Out,Direct,Indirect,Adm.MKT,Free Service,Claim,Promotion,Sharing,Import,FA,Others,Imacs,Propac,Gport,TMS,Other YMKI,Propac Ex.,Intrst_Deposit,Imacs-ATV,Imacs-Generator,Imacs-CBU,Campaign,DDS1 Vendor,DDS2 Vendor,DDS3 Vendor,DDS4 Vendor,DDS5 Vendor,DDS6 Vendor,DDS7 Vendor,DDS8 Vendor,DDS9 Vendor,MKT Vendor,SVC Vendor,MS Vendor,POD Vendor,Others Purchase,Ekspedisi Log-POD];
                                                   Description=YIMMAEXP }
    { 50002;  ;Posting Date        ;Date          ;Description=YIMMAEXP }
    { 50003;  ;Invoice Date        ;Date          ;Description=YIMMAEXP }
  }
  KEYS
  {
    {    ;Table ID,Document Type,Document No.,Sequence No.;
                                                   Clustered=Yes }
    {    ;Approver ID,Status                       }
    {    ;Sender ID                                }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      UserMgt@1000 : Codeunit 418;

    PROCEDURE ShowDocument@1();
    VAR
      SalesHeader@1001 : Record 36;
      PurchHeader@1000 : Record 38;
      PurchLine@1000000000 : Record 39;
      SalesLine@1000000001 : Record 37;
      Master@1000000002 : Record 50008;
    BEGIN
      Master.GET;// UPG09R2
      CASE "Table ID" OF
        DATABASE::"Sales Header":
          BEGIN
            IF NOT SalesHeader.GET("Document Type","Document No.") THEN
              EXIT;
            CASE "Document Type" OF
              "Document Type"::Quote:
                PAGE.RUN(PAGE::"Sales Quote",SalesHeader);                           //UPG13C
                //PAGE.RUN(PAGE::"Sales Quote - All",SalesHeader);//Mel1.0// UPG09R2 //UPG13C
              "Document Type"::Order:
                PAGE.RUN(PAGE::"Sales Order",SalesHeader);
      {
          // UPG09R2.begin
          //YIMMNTASST
              BEGIN
                SalesLine.RESET;
                SalesLine.SETRANGE(SalesLine."Document Type",SalesLine."Document Type"::Invoice);
                SalesLine.SETRANGE(SalesLine."Document No.",SalesHeader."No.");
                IF SalesLine.FIND('-') THEN
                FORM.RUN(FORM::"Approver Form Sales",SalesLine);
              END;
          //YIMMNTASEN
      }
             // UPG13.begin
              "Document Type"::Invoice: BEGIN
                IF Master."Reason (Sale as Purchase)" = SalesHeader."Reason Code" THEN
                  IF (SalesHeader.ActualCreditMemo = TRUE) THEN   // CODE ADDED BY NITIN ON 22-06-10
                     PAGE.RUN(PAGE::"Customer Purchase Return All",SalesHeader)
                     //PAGE.RUN(PAGE::"Sales Invoice",SalesHeader)
                  ELSE
                     PAGE.RUN(PAGE::"Customer Purchase Return Corr",SalesHeader); // CODE ADDED BY NITIN ON 22-06-10
                PAGE.RUN(PAGE::"Sales Invoice",SalesHeader);
                IF Master."Reason (Normal)" = SalesHeader."Reason Code" THEN
                    PAGE.RUN(PAGE::"Sales Invoice All",SalesHeader);
                    //PAGE.RUN(PAGE::"Sales Invoice",SalesHeader);
              END;
              "Document Type"::"Credit Memo": BEGIN
                IF Master."Reason (Sale as Purchase)" = SalesHeader."Reason Code" THEN
                    PAGE.RUN(PAGE::"Incentive Invoice All",SalesHeader);
                    //PAGE.RUN(PAGE::"Sales Credit Memo",SalesHeader);
                IF Master."Reason (Normal)" = SalesHeader."Reason Code" THEN
                  IF (SalesHeader.ActualCreditMemo = TRUE ) THEN    // CODE ADDED BY NITIN ON 22-06-10
                    PAGE.RUN(PAGE::"Sales Credit Memo All",SalesHeader)
                    //PAGE.RUN(PAGE::"Sales Credit Memo",SalesHeader)
                  ELSE
                    PAGE.RUN(PAGE::"Sales Credit Memo All Correcti",SalesHeader); // CODE ADDED BY NITIN ON 22-06-10
                    //PAGE.RUN(PAGE::"Sales Credit Memo",SalesHeader);
              END;
              // UPG09R2.end
              // UPG13.end
              //"Document Type"::Invoice:
              //  PAGE.RUN(PAGE::"Sales Invoice",SalesHeader);
              //"Document Type"::"Credit Memo":
              //  PAGE.RUN(PAGE::"Sales Credit Memo",SalesHeader);
              "Document Type"::"Blanket Order":
                PAGE.RUN(PAGE::"Blanket Sales Order",SalesHeader);
              "Document Type"::"Return Order":
                PAGE.RUN(PAGE::"Sales Return Order",SalesHeader);
            END;
          END;
        DATABASE::"Purchase Header":
          BEGIN
            IF NOT PurchHeader.GET("Document Type","Document No.") THEN
              EXIT;
            CASE "Document Type" OF
              "Document Type"::Quote:
                PAGE.RUN(PAGE::"Purchase Quote",PurchHeader); // UPG09R2             //UPG13C
                //PAGE.RUN(PAGE::"Sales Quote - All",PurchHeader);//Mel1.0// UPG09R2 //UPG13C
              "Document Type"::Order:
                PAGE.RUN(PAGE::"Purchase Order",PurchHeader);
      {
              // UPG09R2.begin
              //YIMMNTAPST
              BEGIN
                PurchLine.RESET;
                PurchLine.SETRANGE(PurchLine."Document Type",PurchLine."Document Type"::Invoice);
                PurchLine.SETRANGE(PurchLine."Document No.",PurchHeader."No.");
                IF PurchLine.FINDFIRST THEN;
                  FORM.RUN(FORM::"Approver Form Purchase",PurchLine);
              END;
              //YIMMNTAPEN
      }
              "Document Type"::Invoice: BEGIN
                IF Master."Reason (Purchase as Sale)" = PurchHeader."Reason Code" THEN
                  IF (PurchHeader.ActualCreditMemo = TRUE) THEN              // CODE ADDED BY NITIN ON 22-06-10
                      PAGE.RUN(PAGE::"Purchase Invoice",PurchHeader)         //UPG13C
                      //PAGE.RUN(PAGE::"Vendor Sales Return All",PurchHeader)         // CODE ADDED BY NITIN ON 22-06-10  //UPG13C
                   ELSE
                      PAGE.RUN(PAGE::"Purchase Invoice",PurchHeader);                 //UPG13C
                      //PAGE.RUN(PAGE::"Vendor Sales Return All Corr",PurchHeader);        // CODE ADDED BY NITIN ON 22-06-10 //UPG13C
                IF Master."Reason (Normal)" = PurchHeader."Reason Code" THEN
                     PAGE.RUN(PAGE::"Purchase Invoice",PurchHeader);   //UPG13C
                     //PAGE.RUN(PAGE::"Tanda Terima Open",PurchHeader);//UPG13C
              END;
              "Document Type"::"Credit Memo": BEGIN
                IF Master."Reason (Purchase as Sale)" = PurchHeader."Reason Code" THEN
                    PAGE.RUN(PAGE::"Purchase Credit Memo",PurchHeader);  //UPG13C
                    //PAGE.RUN(PAGE::"Vendor Sales Invoice All",PurchHeader);   //UPG13C
                IF Master."Reason (Normal)" = PurchHeader."Reason Code" THEN
                  IF (PurchHeader.ActualCreditMemo = TRUE) THEN           // CODE ADDED BY NITIN ON 22-06-10
                    PAGE.RUN(PAGE::"Purchase Credit Memo",PurchHeader)    //UPG13C
                    //PAGE.RUN(PAGE::"Tanda Terima Return",PurchHeader)            // CODE ADDED BY NITIN ON 22-06-10 //UPG13C
                  ELSE
                    //PAGE.RUN(PAGE::"Tanda Terima Return Corrected",PurchHeader);       // CODE ADDED BY NITIN ON 22-06-10   //UPG13C
                    PAGE.RUN(PAGE::"Purchase Credit Memo",PurchHeader);                  //UPG13C
              END;
              // UPG09R2.end

              //"Document Type"::Quote:
              //  PAGE.RUN(PAGE::"Purchase Quote",PurchHeader);
              //"Document Type"::Order:
              //  PAGE.RUN(PAGE::"Purchase Order",PurchHeader);
              //"Document Type"::Invoice:
              //  PAGE.RUN(PAGE::"Purchase Invoice",PurchHeader);
              //"Document Type"::"Credit Memo":
              //  PAGE.RUN(PAGE::"Purchase Credit Memo",PurchHeader);
              "Document Type"::"Blanket Order":
                PAGE.RUN(PAGE::"Blanket Purchase Order",PurchHeader);
              "Document Type"::"Return Order":
                PAGE.RUN(PAGE::"Purchase Return Order",PurchHeader);
            END;
          END;
        ELSE
          EXIT;
      END;
    END;

    BEGIN
    {
      //YIMMNTAS
        1: CODE ADDED FOR APPROVAL PROCESS(SALES).

      //YIMMNTAP
        1: CODE  ADDED FOR APPROVAL PROCESS(PURCHASE).

      // code added for forms openning base on reason code -by nitin on 22-06-2010.

      //Mel1.0 Code added for display the docment .
      //UPG09R2
      5.0 to 2009 R2 Merged Code in objects identification.
      //UPG13
      2009R2 to 2013 Merged Code.
      //UPG13C
       Code added or edited to solve complation errors after migrating merged and customized objects to 2013 from 2009 R2
       In customized Code , Name of Customized Pages are used till now Customized pages are not added to this database so inorder to solve compliation errors
       We have temporarily replaces Name of Pages with Name of Base pages having same source table.
      //UPG13R2
      2013 to 2013R2 Merged Code.
    }
    END.
  }
}

