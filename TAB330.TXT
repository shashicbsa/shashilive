OBJECT Table 330 Currency Exchange Rate
{
  OBJECT-PROPERTIES
  {
    Date=02/17/15;
    Time=14:45:34;
    Modified=Yes;
    Version List=NAVW17.10,NAVAPAC7.10,NBTR,UPG09R2,UPG13,UPG13R2,YIMMDEVIP1.0;
  }
  PROPERTIES
  {
    DataCaptionFields=Currency Code;
    OnInsert=VAR
               CurrExchngRt@1000000000 : Record 330;
             BEGIN
               // UPG09R2.begin
               //YEID1.0-START
               {
               Mastersetup.GET;
               IF (Mastersetup."Company Name YIMM"=COMPANYNAME) THEN
                 BEGIN
                    CurrExchngRate.RESET;
                    CLEAR(CurrExchngRate);
                     IF CurrExchngRate.CHANGECOMPANY(Mastersetup."Company Name YMKI") THEN
                      BEGIN
                        CurrExchngRate.SETRANGE(CurrExchngRate."Currency Code",Rec."Currency Code");
                        CurrExchngRate.SETRANGE(CurrExchngRate."Starting Date",Rec."Starting Date");
                        IF CurrExchngRate.FINDFIRST THEN BEGIN
                           CurrExchngRate.DELETE;
                           COMMIT;
                           CurrExchngRate:=Rec;
                           CurrExchngRate.INSERT;
                          END
                        ELSE BEGIN
                           CurrExchngRate:=Rec;
                           CurrExchngRate.INSERT;
                          END;
                      END;

                    CurrExchngRate.RESET;
                    CLEAR(CurrExchngRate);
                     IF CurrExchngRate.CHANGECOMPANY(Mastersetup."Company Name YMMWJ") THEN
                      BEGIN
                        CurrExchngRate.SETRANGE(CurrExchngRate."Currency Code",Rec."Currency Code");
                        CurrExchngRate.SETRANGE(CurrExchngRate."Starting Date",Rec."Starting Date");
                        IF CurrExchngRate.FINDFIRST THEN BEGIN
                           CurrExchngRate.DELETE;
                           COMMIT;
                           CurrExchngRate:=Rec;
                           CurrExchngRate.INSERT;
                          END
                        ELSE  BEGIN
                          CurrExchngRate:=Rec;
                          CurrExchngRate.INSERT;
                         END;
                      END;

                    CurrExchngRate.RESET;
                    CLEAR(CurrExchngRate);
                     IF CurrExchngRate.CHANGECOMPANY(Mastersetup."Company Name TBI") THEN
                      BEGIN
                        CurrExchngRate.SETRANGE(CurrExchngRate."Currency Code",Rec."Currency Code");
                        CurrExchngRate.SETRANGE(CurrExchngRate."Starting Date",Rec."Starting Date");
                        IF CurrExchngRate.FINDFIRST THEN  BEGIN
                           CurrExchngRate.DELETE;
                           COMMIT;
                           CurrExchngRate:=Rec;
                           CurrExchngRate.INSERT;
                          END
                        ELSE BEGIN
                           CurrExchngRate:=Rec;
                           CurrExchngRate.INSERT;
                          END;
                      END;

                   CurrExchngRate.RESET;
                   CLEAR(CurrExchngRate);
                   IF CurrExchngRate.CHANGECOMPANY(Mastersetup."Company Name YIMM Consol") THEN
                      BEGIN
                        CurrExchngRate.SETRANGE(CurrExchngRate."Currency Code",Rec."Currency Code");
                        CurrExchngRate.SETRANGE(CurrExchngRate."Starting Date",Rec."Starting Date");
                        IF CurrExchngRate.FINDFIRST THEN BEGIN
                           CurrExchngRate.DELETE;
                           COMMIT;
                           CurrExchngRate:=Rec;
                           CurrExchngRate.INSERT;
                          END
                        ELSE BEGIN
                           CurrExchngRate:=Rec;
                           CurrExchngRate.INSERT;
                          END;
                      END;

                   CurrExchngRate.RESET;
                   CLEAR(CurrExchngRate);
                   IF CurrExchngRate.CHANGECOMPANY(Mastersetup."Company Name MELCO") THEN
                      BEGIN
                        CurrExchngRate.SETRANGE(CurrExchngRate."Currency Code",Rec."Currency Code");
                        CurrExchngRate.SETRANGE(CurrExchngRate."Starting Date",Rec."Starting Date");
                        IF CurrExchngRate.FINDFIRST THEN BEGIN
                           CurrExchngRate.DELETE;
                           COMMIT;
                           CurrExchngRate:=Rec;
                           CurrExchngRate.INSERT;
                          END
                        ELSE BEGIN
                           CurrExchngRate:=Rec;
                           CurrExchngRate.INSERT;
                          END;
                      END;


                   // YMNI1.0-->
                    CurrExchngRate.RESET;
                    CLEAR(CurrExchngRate);
                     IF CurrExchngRate.CHANGECOMPANY(Mastersetup."Company Name YMNI") THEN
                      BEGIN
                        CurrExchngRate.SETRANGE(CurrExchngRate."Currency Code",Rec."Currency Code");
                        CurrExchngRate.SETRANGE(CurrExchngRate."Starting Date",Rec."Starting Date");
                        IF CurrExchngRate.FINDFIRST THEN  BEGIN
                           CurrExchngRate.DELETE;
                           COMMIT;
                           CurrExchngRate:=Rec;
                           CurrExchngRate.INSERT;
                          END
                        ELSE BEGIN
                           CurrExchngRate:=Rec;
                           CurrExchngRate.INSERT;
                          END;
                      END;
                   //

                  END;
               //YEID1.0-END
               }//UPG13RDEV-Commented
             END;

    OnModify=VAR
               CurrExchngRt@1000000000 : Record 330;
             BEGIN
               {
               Mastersetup.GET;
               IF (Mastersetup."Company Name YIMM"=COMPANYNAME) THEN
                 BEGIN
                    CurrExchngRate.RESET;
                    CLEAR(CurrExchngRate);
                     IF CurrExchngRate.CHANGECOMPANY(Mastersetup."Company Name YMKI") THEN
                      BEGIN
                        CurrExchngRate.SETRANGE(CurrExchngRate."Currency Code",Rec."Currency Code");
                        CurrExchngRate.SETRANGE(CurrExchngRate."Starting Date",Rec."Starting Date");
                        IF CurrExchngRate.FINDFIRST THEN BEGIN
                           CurrExchngRate.DELETE;
                           COMMIT;
                           CurrExchngRate:=Rec;
                           CurrExchngRate.INSERT;
                          END
                        ELSE BEGIN
                           CurrExchngRate:=Rec;
                           CurrExchngRate.INSERT;
                          END;
                      END;

                    CurrExchngRate1.RESET;
                    CLEAR(CurrExchngRate1);
                     IF CurrExchngRate1.CHANGECOMPANY(Mastersetup."Company Name YMMWJ") THEN
                      BEGIN
                        CurrExchngRate1.SETRANGE(CurrExchngRate1."Currency Code",Rec."Currency Code");
                        CurrExchngRate1.SETRANGE(CurrExchngRate1."Starting Date",Rec."Starting Date");
                        IF CurrExchngRate1.FINDFIRST THEN BEGIN
                           CurrExchngRate1.DELETE;
                           COMMIT;
                           CurrExchngRate1:=Rec;
                           CurrExchngRate1.INSERT;
                          END
                        ELSE BEGIN
                           CurrExchngRate1:=Rec;
                           CurrExchngRate1.INSERT;
                          END;

                      END;

                    CurrExchngRate2.RESET;
                    CLEAR(CurrExchngRate2);
                     IF CurrExchngRate2.CHANGECOMPANY(Mastersetup."Company Name TBI") THEN
                      BEGIN
                        CurrExchngRate2.SETRANGE(CurrExchngRate2."Currency Code",Rec."Currency Code");
                        CurrExchngRate2.SETRANGE(CurrExchngRate2."Starting Date",Rec."Starting Date");
                        IF CurrExchngRate2.FINDFIRST THEN  BEGIN
                           CurrExchngRate2.DELETE;
                           COMMIT;
                           CurrExchngRate2:=Rec;
                           CurrExchngRate2.INSERT;
                          END
                        ELSE BEGIN
                           CurrExchngRate2:=Rec;
                           CurrExchngRate2.INSERT;
                          END;

                      END;


                   CurrExchngRate3.RESET;
                   CLEAR(CurrExchngRate3);
                     IF CurrExchngRate3.CHANGECOMPANY(Mastersetup."Company Name YIMM Consol") THEN
                      BEGIN
                        CurrExchngRate3.SETRANGE(CurrExchngRate3."Currency Code",Rec."Currency Code");
                        CurrExchngRate3.SETRANGE(CurrExchngRate3."Starting Date",Rec."Starting Date");
                        IF CurrExchngRate3.FINDFIRST THEN BEGIN
                           CurrExchngRate3.DELETE;
                           COMMIT;
                           CurrExchngRate3:=Rec;
                           CurrExchngRate3.INSERT;
                          END
                        ELSE BEGIN
                           CurrExchngRate3:=Rec;
                           CurrExchngRate3.INSERT;
                          END;

                      END;

                   CurrExchngRate4.RESET;
                   CLEAR(CurrExchngRate);
                     IF CurrExchngRate4.CHANGECOMPANY(Mastersetup."Company Name MELCO") THEN
                      BEGIN
                        CurrExchngRate4.SETRANGE(CurrExchngRate4."Currency Code",Rec."Currency Code");
                        CurrExchngRate4.SETRANGE(CurrExchngRate4."Starting Date",Rec."Starting Date");
                        IF CurrExchngRate4.FINDFIRST THEN BEGIN
                           CurrExchngRate4.DELETE;
                           COMMIT;
                           CurrExchngRate4:=Rec;
                           CurrExchngRate4.INSERT;
                          END
                        ELSE BEGIN
                           CurrExchngRate4:=Rec;
                           CurrExchngRate4.INSERT;
                          END;

                      END;

                   // YMNI1.0 -->
                   CurrExchngRate5.RESET;
                   CLEAR(CurrExchngRate5);
                     IF CurrExchngRate5.CHANGECOMPANY(Mastersetup."Company Name YMNI") THEN
                      BEGIN
                        CurrExchngRate5.SETRANGE(CurrExchngRate5."Currency Code",Rec."Currency Code");
                        CurrExchngRate5.SETRANGE(CurrExchngRate5."Starting Date",Rec."Starting Date");
                        IF CurrExchngRate5.FINDFIRST THEN BEGIN
                           CurrExchngRate5.DELETE;
                           COMMIT;
                           CurrExchngRate5:=Rec;
                           CurrExchngRate5.INSERT;
                          END
                        ELSE BEGIN
                           CurrExchngRate5:=Rec;
                           CurrExchngRate5.INSERT;
                          END;

                      END;

                   //

                  END;
               //YEID1.0-END
                 }
             END;

    OnDelete=BEGIN
               {
               Mastersetup.GET;
               IF (Mastersetup."Company Name YIMM"=COMPANYNAME) THEN
                 BEGIN
                    CurrExchngRate.RESET;
                    CLEAR(CurrExchngRate);
                     IF CurrExchngRate.CHANGECOMPANY(Mastersetup."Company Name YMKI") THEN
                      BEGIN
                        CurrExchngRate.SETRANGE(CurrExchngRate."Currency Code",Rec."Currency Code");
                        CurrExchngRate.SETRANGE(CurrExchngRate."Starting Date",Rec."Starting Date");
                        IF CurrExchngRate.FINDFIRST THEN BEGIN
                           CurrExchngRate.DELETE;
                           COMMIT;
                          END;
                      END;

                    CurrExchngRate1.RESET;
                    CLEAR(CurrExchngRate1);
                     IF CurrExchngRate1.CHANGECOMPANY(Mastersetup."Company Name YMMWJ") THEN
                      BEGIN
                        CurrExchngRate1.SETRANGE(CurrExchngRate1."Currency Code",Rec."Currency Code");
                        CurrExchngRate1.SETRANGE(CurrExchngRate1."Starting Date",Rec."Starting Date");
                        IF CurrExchngRate1.FINDFIRST THEN BEGIN
                           CurrExchngRate1.DELETE;
                           COMMIT;
                          END;
                      END;

                    CurrExchngRate2.RESET;
                    CLEAR(CurrExchngRate2);
                     IF CurrExchngRate2.CHANGECOMPANY(Mastersetup."Company Name TBI") THEN
                      BEGIN
                        CurrExchngRate2.SETRANGE(CurrExchngRate2."Currency Code",Rec."Currency Code");
                        CurrExchngRate2.SETRANGE(CurrExchngRate2."Starting Date",Rec."Starting Date");
                        IF CurrExchngRate2.FINDFIRST THEN  BEGIN
                           CurrExchngRate2.DELETE;
                           COMMIT;
                          END;
                      END;


                   CurrExchngRate3.RESET;
                   CLEAR(CurrExchngRate3);
                     IF CurrExchngRate3.CHANGECOMPANY(Mastersetup."Company Name YIMM Consol") THEN
                      BEGIN
                        CurrExchngRate3.SETRANGE(CurrExchngRate3."Currency Code",Rec."Currency Code");
                        CurrExchngRate3.SETRANGE(CurrExchngRate3."Starting Date",Rec."Starting Date");
                        IF CurrExchngRate3.FINDFIRST THEN BEGIN
                           CurrExchngRate3.DELETE;
                           COMMIT;
                          END;
                      END;

                   CurrExchngRate4.RESET;
                   CLEAR(CurrExchngRate);
                     IF CurrExchngRate4.CHANGECOMPANY(Mastersetup."Company Name MELCO") THEN
                      BEGIN
                        CurrExchngRate4.SETRANGE(CurrExchngRate4."Currency Code",Rec."Currency Code");
                        CurrExchngRate4.SETRANGE(CurrExchngRate4."Starting Date",Rec."Starting Date");
                        IF CurrExchngRate4.FINDFIRST THEN BEGIN
                           CurrExchngRate4.DELETE;
                           COMMIT;
                          END;
                      END;

                   // YMNI1.0
                   CurrExchngRate5.RESET;
                   CLEAR(CurrExchngRate5);
                     IF CurrExchngRate5.CHANGECOMPANY(Mastersetup."Company Name YMNI") THEN
                      BEGIN
                        CurrExchngRate5.SETRANGE(CurrExchngRate5."Currency Code",Rec."Currency Code");
                        CurrExchngRate5.SETRANGE(CurrExchngRate5."Starting Date",Rec."Starting Date");
                        IF CurrExchngRate5.FINDFIRST THEN BEGIN
                           CurrExchngRate5.DELETE;
                           COMMIT;
                          END;
                      END;

                   //

                  END;
               //YEID1.0-END
               // UPG09R2.end
                   }
             END;

    CaptionML=[ENU=Currency Exchange Rate;
               ENA=Currency Exchange Rate];
    LookupPageID=Page483;
    DrillDownPageID=Page483;
  }
  FIELDS
  {
    { 1   ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF "Currency Code" = "Relational Currency Code" THEN
                                                                  ERROR(
                                                                    Text000,FIELDCAPTION("Currency Code"),FIELDCAPTION("Relational Currency Code"));
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              ENA=Currency Code];
                                                   NotBlank=Yes;
                                                   Editable=No }
    { 2   ;   ;Starting Date       ;Date          ;CaptionML=[ENU=Starting Date;
                                                              ENA=Starting Date];
                                                   NotBlank=Yes }
    { 3   ;   ;Exchange Rate Amount;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Exchange Rate Amount");
                                                              END;

                                                   CaptionML=[ENU=Exchange Rate Amount;
                                                              ENA=Exchange Rate Amount];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 4   ;   ;Adjustment Exch. Rate Amount;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Adjustment Exch. Rate Amount");
                                                              END;

                                                   CaptionML=[ENU=Adjustment Exch. Rate Amount;
                                                              ENA=Adjustment Exch. Rate Amount];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 5   ;   ;Relational Currency Code;Code10    ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF "Currency Code" = "Relational Currency Code" THEN
                                                                  ERROR(
                                                                    Text000,FIELDCAPTION("Currency Code"),FIELDCAPTION("Relational Currency Code"));
                                                              END;

                                                   CaptionML=[ENU=Relational Currency Code;
                                                              ENA=Relational Currency Code] }
    { 6   ;   ;Relational Exch. Rate Amount;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Relational Exch. Rate Amount");
                                                              END;

                                                   CaptionML=[ENU=Relational Exch. Rate Amount;
                                                              ENA=Relational Exch. Rate Amount];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 7   ;   ;Fix Exchange Rate Amount;Option    ;CaptionML=[ENU=Fix Exchange Rate Amount;
                                                              ENA=Fix Exchange Rate Amount];
                                                   OptionCaptionML=[ENU=Currency,Relational Currency,Both;
                                                                    ENA=Currency,Relational Currency,Both];
                                                   OptionString=Currency,Relational Currency,Both }
    { 8   ;   ;Relational Adjmt Exch Rate Amt;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Relational Adjmt Exch Rate Amt");
                                                              END;

                                                   CaptionML=[ENU=Relational Adjmt Exch Rate Amt;
                                                              ENA=Relational Adjmt Exch Rate Amt];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 28041;  ;Relational Sett. Rate Amount;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Relational Exch. Rate Amount");
                                                              END;

                                                   CaptionML=[ENU=Relational Sett. Rate Amount;
                                                              ENA=Relational Sett. Rate Amount];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 28140;  ;Settlement Rate Amount;Decimal     ;OnValidate=BEGIN
                                                                TESTFIELD("Exchange Rate Amount");
                                                              END;

                                                   CaptionML=[ENU=Settlement Rate Amount;
                                                              ENA=Settlement Rate Amount];
                                                   DecimalPlaces=1:6;
                                                   MinValue=0 }
    { 50001;  ;Tax Rate Amount     ;Decimal       ;Description=YIMMNBTR }
    { 50002;  ;Rel Tax Rate Amount ;Decimal       ;DecimalPlaces=1:6;
                                                   Description=YIMMNBTR }
  }
  KEYS
  {
    {    ;Currency Code,Starting Date             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The currency code in the %1 field and the %2 field cannot be the same.;ENA=The currency code in the %1 field and the %2 field cannot be the same.';
      CurrencyExchRate2@1001 : ARRAY [2] OF Record 330;
      CurrencyExchRate3@1002 : ARRAY [3] OF Record 330;
      ExchangeRateAmtFCY@1500001 : Decimal;
      RelExchangeRateAmtFCY@1500000 : Decimal;
      RelExchangeRateAmt@1003 : Decimal;
      ExchangeRateAmt@1004 : Decimal;
      RelCurrencyCode@1005 : Code[10];
      FixExchangeRateAmt@1006 : Option;
      CurrencyFactor@1007 : Decimal;
      UseAdjmtAmounts@1008 : Boolean;
      CurrencyCode2@1009 : ARRAY [2] OF Code[10];
      Date2@1010 : ARRAY [2] OF Date;
      Mastersetup@1000000000 : Record 50008;
      CurrExchngRate@1000000001 : Record 330;
      COMP@1000000002 : Record 2000000006;
      CurrExchngRate1@1000000003 : Record 330;
      CurrExchngRate2@1000000004 : Record 330;
      CurrExchngRate3@1000000005 : Record 330;
      CurrExchngRate4@1000000006 : Record 330;
      abc@1000000007 : Record 330;
      CurrExchngRate5@1102159001 : Record 330;

    PROCEDURE ExchangeAmtLCYToFCY@1(Date@1000 : Date;CurrencyCode@1001 : Code[10];Amount@1002 : Decimal;Factor@1003 : Decimal) : Decimal;
    BEGIN
      IF CurrencyCode = '' THEN
        EXIT(Amount);
      FindCurrency(Date,CurrencyCode,1);
      TESTFIELD("Exchange Rate Amount");
      TESTFIELD("Relational Exch. Rate Amount");
      IF "Relational Currency Code" = '' THEN
        IF "Fix Exchange Rate Amount" = "Fix Exchange Rate Amount"::Both THEN
          Amount := (Amount / "Relational Exch. Rate Amount") * "Exchange Rate Amount"
        ELSE
          Amount := Amount * Factor
      ELSE BEGIN
        RelExchangeRateAmt := "Relational Exch. Rate Amount";
        ExchangeRateAmt := "Exchange Rate Amount";
        RelCurrencyCode := "Relational Currency Code";
        FixExchangeRateAmt := "Fix Exchange Rate Amount";
        FindCurrency(Date,RelCurrencyCode,2);
        TESTFIELD("Exchange Rate Amount");
        TESTFIELD("Relational Exch. Rate Amount");
        CASE FixExchangeRateAmt OF
          "Fix Exchange Rate Amount"::"Relational Currency":
            ExchangeRateAmt :=
              (Factor * RelExchangeRateAmt * "Relational Exch. Rate Amount") /
              "Exchange Rate Amount";
          "Fix Exchange Rate Amount"::Currency:
            RelExchangeRateAmt :=
              (ExchangeRateAmt * "Exchange Rate Amount") /
              (Factor * "Relational Exch. Rate Amount");
          "Fix Exchange Rate Amount"::Both:
            CASE "Fix Exchange Rate Amount" OF
              "Fix Exchange Rate Amount"::"Relational Currency":
                "Exchange Rate Amount" :=
                  (Factor * RelExchangeRateAmt * "Relational Exch. Rate Amount") /
                  ExchangeRateAmt;
              "Fix Exchange Rate Amount"::Currency:
                "Relational Exch. Rate Amount" :=
                  (ExchangeRateAmt * "Exchange Rate Amount") /
                  (Factor * RelExchangeRateAmt);
            END;
        END;
        Amount := (Amount / RelExchangeRateAmt) * ExchangeRateAmt;
        Amount := (Amount / "Relational Exch. Rate Amount") * "Exchange Rate Amount";
      END;
      EXIT(Amount);
    END;

    PROCEDURE ExchangeAmtFCYToLCY@6(Date@1000 : Date;CurrencyCode@1001 : Code[10];Amount@1002 : Decimal;Factor@1003 : Decimal) : Decimal;
    BEGIN
      IF CurrencyCode = '' THEN
        EXIT(Amount);
      FindCurrency(Date,CurrencyCode,1);
      IF NOT UseAdjmtAmounts THEN BEGIN
        TESTFIELD("Exchange Rate Amount");
        TESTFIELD("Relational Exch. Rate Amount");
      END ELSE BEGIN
        TESTFIELD("Adjustment Exch. Rate Amount");
        TESTFIELD("Relational Adjmt Exch Rate Amt");
        "Exchange Rate Amount" := "Adjustment Exch. Rate Amount";
        "Relational Exch. Rate Amount" := "Relational Adjmt Exch Rate Amt";
      END;
      IF "Relational Currency Code" = '' THEN
        IF "Fix Exchange Rate Amount" = "Fix Exchange Rate Amount"::Both THEN
          Amount := (Amount / "Exchange Rate Amount") * "Relational Exch. Rate Amount"
        ELSE
          Amount := Amount / Factor
      ELSE BEGIN
        RelExchangeRateAmt := "Relational Exch. Rate Amount";
        ExchangeRateAmt := "Exchange Rate Amount";
        RelCurrencyCode := "Relational Currency Code";
        FixExchangeRateAmt := "Fix Exchange Rate Amount";
        FindCurrency(Date,RelCurrencyCode,2);
        IF NOT UseAdjmtAmounts THEN BEGIN
          TESTFIELD("Exchange Rate Amount");
          TESTFIELD("Relational Exch. Rate Amount");
        END ELSE BEGIN
          TESTFIELD("Adjustment Exch. Rate Amount");
          TESTFIELD("Relational Adjmt Exch Rate Amt");
          "Exchange Rate Amount" := "Adjustment Exch. Rate Amount";
          "Relational Exch. Rate Amount" := "Relational Adjmt Exch Rate Amt";
        END;
        CASE FixExchangeRateAmt OF
          "Fix Exchange Rate Amount"::"Relational Currency":
            ExchangeRateAmt :=
              (RelExchangeRateAmt * "Relational Exch. Rate Amount") /
              ("Exchange Rate Amount" * Factor);
          "Fix Exchange Rate Amount"::Currency:
            RelExchangeRateAmt :=
              ((Factor * ExchangeRateAmt * "Exchange Rate Amount") /
               "Relational Exch. Rate Amount");
          "Fix Exchange Rate Amount"::Both:
            CASE "Fix Exchange Rate Amount" OF
              "Fix Exchange Rate Amount"::"Relational Currency":
                "Exchange Rate Amount" :=
                  (RelExchangeRateAmt * "Relational Exch. Rate Amount") /
                  (ExchangeRateAmt * Factor);
              "Fix Exchange Rate Amount"::Currency:
                "Relational Exch. Rate Amount" :=
                  ((Factor * ExchangeRateAmt * "Exchange Rate Amount") /
                   RelExchangeRateAmt);
              "Fix Exchange Rate Amount"::Both:
                BEGIN
                  Amount := (Amount / ExchangeRateAmt) * RelExchangeRateAmt;
                  Amount := (Amount / "Exchange Rate Amount") * "Relational Exch. Rate Amount";
                  EXIT(Amount);
                END;
            END;
        END;
        Amount := (Amount / RelExchangeRateAmt) * ExchangeRateAmt;
        Amount := (Amount / "Relational Exch. Rate Amount") * "Exchange Rate Amount";
      END;
      EXIT(Amount);
    END;

    PROCEDURE ExchangeRate@2(Date@1000 : Date;CurrencyCode@1001 : Code[10]) : Decimal;
    BEGIN
      IF CurrencyCode = '' THEN
        EXIT(1);
      FindCurrency(Date,CurrencyCode,1);
      IF NOT UseAdjmtAmounts THEN BEGIN
        TESTFIELD("Exchange Rate Amount");
        TESTFIELD("Relational Exch. Rate Amount");
      END ELSE BEGIN
        TESTFIELD("Adjustment Exch. Rate Amount");
        TESTFIELD("Relational Adjmt Exch Rate Amt");
        "Exchange Rate Amount" := "Adjustment Exch. Rate Amount";
        "Relational Exch. Rate Amount" := "Relational Adjmt Exch Rate Amt";
      END;
      RelExchangeRateAmt := "Relational Exch. Rate Amount";
      ExchangeRateAmt := "Exchange Rate Amount";
      RelCurrencyCode := "Relational Currency Code";
      IF "Relational Currency Code" = '' THEN
        CurrencyFactor := "Exchange Rate Amount" / "Relational Exch. Rate Amount"
      ELSE BEGIN
        FindCurrency(Date,RelCurrencyCode,2);
        IF NOT UseAdjmtAmounts THEN BEGIN
          TESTFIELD("Exchange Rate Amount");
          TESTFIELD("Relational Exch. Rate Amount");
        END ELSE BEGIN
          TESTFIELD("Adjustment Exch. Rate Amount");
          TESTFIELD("Relational Adjmt Exch Rate Amt");
          "Exchange Rate Amount" := "Adjustment Exch. Rate Amount";
          "Relational Exch. Rate Amount" := "Relational Adjmt Exch Rate Amt";
        END;
        CurrencyFactor := (ExchangeRateAmt * "Exchange Rate Amount") / (RelExchangeRateAmt * "Relational Exch. Rate Amount");
      END;
      EXIT(CurrencyFactor);
    END;

    PROCEDURE ExchangeAmtLCYToFCYOnlyFactor@3(Amount@1000 : Decimal;Factor@1001 : Decimal) : Decimal;
    BEGIN
      Amount := Factor * Amount;
      EXIT(Amount);
    END;

    PROCEDURE ExchangeAmtFCYToLCYAdjmt@5(Date@1000 : Date;CurrencyCode@1001 : Code[10];Amount@1002 : Decimal;Factor@1003 : Decimal) : Decimal;
    BEGIN
      UseAdjmtAmounts := TRUE;
      EXIT(ExchangeAmtFCYToLCY(Date,CurrencyCode,Amount,Factor));
    END;

    PROCEDURE ExchangeRateAdjmt@4(Date@1000 : Date;CurrencyCode@1001 : Code[10]) : Decimal;
    BEGIN
      UseAdjmtAmounts := TRUE;
      EXIT(ExchangeRate(Date,CurrencyCode));
    END;

    PROCEDURE ExchangeAmount@43(Amount@1000 : Decimal;FromCurrencyCode@1001 : Code[10];ToCurrencyCode@1002 : Code[10];UsePostingDate@1003 : Date) : Decimal;
    VAR
      ToCurrency@1004 : Record 4;
    BEGIN
      IF (FromCurrencyCode = ToCurrencyCode) OR (Amount = 0) THEN
        EXIT(Amount);

      Amount :=
        ExchangeAmtFCYToFCY(
          UsePostingDate,FromCurrencyCode,ToCurrencyCode,Amount);

      IF ToCurrencyCode <> '' THEN BEGIN
        ToCurrency.GET(ToCurrencyCode);
        Amount := ROUND(Amount,ToCurrency."Amount Rounding Precision");
      END ELSE
        Amount := ROUND(Amount);

      EXIT(Amount);
    END;

    PROCEDURE FindCurrency@7(Date@1000 : Date;CurrencyCode@1001 : Code[10];CacheNo@1002 : Integer);
    BEGIN
      IF (CurrencyCode2[CacheNo] = CurrencyCode) AND (Date2[CacheNo] = Date) THEN
        Rec := CurrencyExchRate2[CacheNo]
      ELSE BEGIN
        IF Date = 0D THEN
          Date := WORKDATE;
        CurrencyExchRate2[CacheNo].SETRANGE("Currency Code",CurrencyCode);
        CurrencyExchRate2[CacheNo].SETRANGE("Starting Date",0D,Date);
        CurrencyExchRate2[CacheNo].FINDLAST;
        Rec := CurrencyExchRate2[CacheNo];
        CurrencyCode2[CacheNo] := CurrencyCode;
        Date2[CacheNo] := Date;
      END;
    END;

    PROCEDURE ExchangeAmtFCYToFCY@8(Date@1000 : Date;FromCurrencyCode@1001 : Code[10];ToCurrencyCode@1002 : Code[10];Amount@1003 : Decimal) : Decimal;
    BEGIN
      IF FromCurrencyCode = ToCurrencyCode THEN
        EXIT(Amount);
      IF ToCurrencyCode = '' THEN BEGIN
        FindCurrency2(Date,FromCurrencyCode,1);
        IF CurrencyExchRate3[1]."Relational Currency Code" = '' THEN
          EXIT(
            (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
            CurrencyExchRate3[1]."Relational Exch. Rate Amount");

        FindCurrency2(Date,CurrencyExchRate3[1]."Relational Currency Code",3);
        Amount :=
          ((Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
           CurrencyExchRate3[1]."Relational Exch. Rate Amount");
        EXIT(
          (Amount / CurrencyExchRate3[3]."Exchange Rate Amount") *
          CurrencyExchRate3[3]."Relational Exch. Rate Amount");
      END;
      IF FromCurrencyCode = '' THEN BEGIN
        FindCurrency2(Date,ToCurrencyCode,2);
        IF CurrencyExchRate3[2]."Relational Currency Code" = '' THEN
          EXIT(
            (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
            CurrencyExchRate3[2]."Exchange Rate Amount");

        FindCurrency2(Date,CurrencyExchRate3[2]."Relational Currency Code",3);
        Amount :=
          ((Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
           CurrencyExchRate3[2]."Exchange Rate Amount");
        EXIT(
          (Amount / CurrencyExchRate3[3]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[3]."Exchange Rate Amount");
      END;
      FindCurrency2(Date,FromCurrencyCode,1);
      FindCurrency2(Date,ToCurrencyCode,2);
      IF CurrencyExchRate3[1]."Currency Code" = CurrencyExchRate3[2]."Relational Currency Code" THEN
        EXIT(
          (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[2]."Exchange Rate Amount");
      IF CurrencyExchRate3[1]."Relational Currency Code" = CurrencyExchRate3[2]."Currency Code" THEN
        EXIT(
          (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
          CurrencyExchRate3[1]."Relational Exch. Rate Amount");

      IF CurrencyExchRate3[1]."Relational Currency Code" = CurrencyExchRate3[2]."Relational Currency Code" THEN BEGIN
        Amount :=
          ((Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
           CurrencyExchRate3[1]."Relational Exch. Rate Amount");
        EXIT(
          (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[2]."Exchange Rate Amount");
      END;
      IF (CurrencyExchRate3[1]."Relational Currency Code" = '') AND
         (CurrencyExchRate3[2]."Relational Currency Code" <> '')
      THEN BEGIN
        FindCurrency2(Date,CurrencyExchRate3[2]."Relational Currency Code",3);
        Amount :=
          (Amount * CurrencyExchRate3[1]."Relational Exch. Rate Amount") /
          CurrencyExchRate3[1]."Exchange Rate Amount";
        Amount :=
          (Amount / CurrencyExchRate3[3]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[3]."Exchange Rate Amount";
        EXIT(
          (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[2]."Exchange Rate Amount");
      END;
      IF (CurrencyExchRate3[1]."Relational Currency Code" <> '') AND
         (CurrencyExchRate3[2]."Relational Currency Code" = '')
      THEN BEGIN
        FindCurrency2(Date,CurrencyExchRate3[1]."Relational Currency Code",3);
        Amount :=
          (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
          CurrencyExchRate3[1]."Relational Exch. Rate Amount";
        Amount :=
          (Amount / CurrencyExchRate3[3]."Exchange Rate Amount") *
          CurrencyExchRate3[3]."Relational Exch. Rate Amount";
        EXIT(
          (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[2]."Exchange Rate Amount");
      END;
    END;

    PROCEDURE FindCurrency2@9(Date@1000 : Date;CurrencyCode@1001 : Code[10];Number@1002 : Integer);
    BEGIN
      IF Date = 0D THEN
        Date := WORKDATE;
      CurrencyExchRate3[Number].SETRANGE("Currency Code",CurrencyCode);
      CurrencyExchRate3[Number].SETRANGE("Starting Date",0D,Date);
      CurrencyExchRate3[Number].FINDLAST;
      CurrencyExchRate3[Number].TESTFIELD("Exchange Rate Amount");
      CurrencyExchRate3[Number].TESTFIELD("Relational Exch. Rate Amount");
    END;

    PROCEDURE ApplnExchangeAmtFCYToFCY@13(Date@1000 : Date;FromCurrencyCode@1001 : Code[10];ToCurrencyCode@1002 : Code[10];Amount@1003 : Decimal;VAR ExchRateFound@1004 : Boolean) : Decimal;
    BEGIN
      IF FromCurrencyCode = ToCurrencyCode THEN
        EXIT(Amount);
      IF ToCurrencyCode = '' THEN BEGIN
        ExchRateFound := FindApplnCurrency(Date,FromCurrencyCode,1);
        IF NOT ExchRateFound THEN
          EXIT(0);

        IF CurrencyExchRate3[1]."Relational Currency Code" = '' THEN
          EXIT(
            (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
            CurrencyExchRate3[1]."Relational Exch. Rate Amount");

        ExchRateFound := FindApplnCurrency(Date,CurrencyExchRate3[1]."Relational Currency Code",3);
        IF NOT ExchRateFound THEN
          EXIT(0);

        Amount :=
          (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
          CurrencyExchRate3[1]."Relational Exch. Rate Amount";
        EXIT(
          (Amount / CurrencyExchRate3[3]."Exchange Rate Amount") *
          CurrencyExchRate3[3]."Relational Exch. Rate Amount");
      END;
      IF FromCurrencyCode = '' THEN BEGIN
        ExchRateFound := FindApplnCurrency(Date,ToCurrencyCode,2);
        IF NOT ExchRateFound THEN
          EXIT(0);

        IF CurrencyExchRate3[2]."Relational Currency Code" = '' THEN
          EXIT(
            (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
            CurrencyExchRate3[2]."Exchange Rate Amount");

        ExchRateFound := FindApplnCurrency(Date,CurrencyExchRate3[2]."Relational Currency Code",3);
        IF NOT ExchRateFound THEN
          EXIT(0);

        Amount :=
          ((Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
           CurrencyExchRate3[2]."Exchange Rate Amount");
        EXIT(
          (Amount / CurrencyExchRate3[3]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[3]."Exchange Rate Amount");
      END;
      ExchRateFound := FindApplnCurrency(Date,FromCurrencyCode,1);
      IF NOT ExchRateFound THEN
        EXIT(0);

      ExchRateFound := FindApplnCurrency(Date,ToCurrencyCode,2);
      IF NOT ExchRateFound THEN
        EXIT(0);

      IF CurrencyExchRate3[1]."Currency Code" = CurrencyExchRate3[2]."Relational Currency Code" THEN
        EXIT(
          (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[2]."Exchange Rate Amount");
      IF CurrencyExchRate3[1]."Relational Currency Code" = CurrencyExchRate3[2]."Currency Code" THEN
        EXIT(
          (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
          CurrencyExchRate3[1]."Relational Exch. Rate Amount");

      IF CurrencyExchRate3[1]."Relational Currency Code" = CurrencyExchRate3[2]."Relational Currency Code" THEN BEGIN
        Amount :=
          ((Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
           CurrencyExchRate3[1]."Relational Exch. Rate Amount");
        EXIT(
          (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[2]."Exchange Rate Amount");
      END;
      IF (CurrencyExchRate3[1]."Relational Currency Code" = '') AND
         (CurrencyExchRate3[2]."Relational Currency Code" <> '')
      THEN BEGIN
        ExchRateFound := FindApplnCurrency(Date,CurrencyExchRate3[2]."Relational Currency Code",3);
        IF NOT ExchRateFound THEN
          EXIT(0);

        Amount :=
          (Amount * CurrencyExchRate3[1]."Relational Exch. Rate Amount") /
          CurrencyExchRate3[1]."Exchange Rate Amount";
        Amount :=
          (Amount / CurrencyExchRate3[3]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[3]."Exchange Rate Amount";
        EXIT(
          (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[2]."Exchange Rate Amount");
      END;
      IF (CurrencyExchRate3[1]."Relational Currency Code" <> '') AND
         (CurrencyExchRate3[2]."Relational Currency Code" = '')
      THEN BEGIN
        ExchRateFound := FindApplnCurrency(Date,CurrencyExchRate3[1]."Relational Currency Code",3);
        IF NOT ExchRateFound THEN
          EXIT(0);

        Amount :=
          (Amount / CurrencyExchRate3[1]."Exchange Rate Amount") *
          CurrencyExchRate3[1]."Relational Exch. Rate Amount";
        Amount :=
          (Amount / CurrencyExchRate3[3]."Exchange Rate Amount") *
          CurrencyExchRate3[3]."Relational Exch. Rate Amount";
        EXIT(
          (Amount / CurrencyExchRate3[2]."Relational Exch. Rate Amount") *
          CurrencyExchRate3[2]."Exchange Rate Amount");
      END;
    END;

    LOCAL PROCEDURE FindApplnCurrency@12(Date@1000 : Date;CurrencyCode@1001 : Code[10];Number@1002 : Integer) : Boolean;
    BEGIN
      CurrencyExchRate3[Number].SETRANGE("Currency Code",CurrencyCode);
      CurrencyExchRate3[Number].SETRANGE("Starting Date",0D,Date);
      IF NOT CurrencyExchRate3[Number].FINDLAST THEN
        EXIT(FALSE);

      CurrencyExchRate3[Number].TESTFIELD("Exchange Rate Amount");
      CurrencyExchRate3[Number].TESTFIELD("Relational Exch. Rate Amount");
      EXIT(TRUE);
    END;

    PROCEDURE GetCurrentCurrencyFactor@14(CurrencyCode@1000 : Code[10]) : Decimal;
    BEGIN
      SETRANGE("Currency Code",CurrencyCode);
      IF FINDLAST THEN
        IF "Relational Exch. Rate Amount" <> 0 THEN
          EXIT("Exchange Rate Amount" / "Relational Exch. Rate Amount")
    END;

    PROCEDURE SetCurrentCurrencyFactor@15(CurrencyCode@1000 : Code[10];CurrencyFactor@1001 : Decimal);
    VAR
      RateForTodayExists@1002 : Boolean;
    BEGIN
      "Currency Code" := CurrencyCode;
      TESTFIELD("Currency Code");
      RateForTodayExists := GET(CurrencyCode,TODAY);
      "Exchange Rate Amount" := 1;
      "Relational Exch. Rate Amount" := 1 / CurrencyFactor;
      "Adjustment Exch. Rate Amount" := "Exchange Rate Amount";
      "Relational Adjmt Exch Rate Amt" := "Relational Exch. Rate Amount";
      IF RateForTodayExists THEN BEGIN
        "Relational Currency Code" := '';
        MODIFY;
      END ELSE BEGIN
        "Starting Date" := TODAY;
        INSERT;
      END;
    END;

    PROCEDURE ExchangeRateFactorFRS21@11(Date@1500002 : Date;CurrencyCode@1500001 : Code[10];VendorExchRate@1500000 : Decimal) : Decimal;
    BEGIN
      IF CurrencyCode = '' THEN
        EXIT(1);
      FindCurrency(Date,CurrencyCode,1);
      IF NOT UseAdjmtAmounts THEN BEGIN
        TESTFIELD("Exchange Rate Amount");
        TESTFIELD("Relational Exch. Rate Amount");
      END ELSE BEGIN
        TESTFIELD("Adjustment Exch. Rate Amount");
        TESTFIELD("Relational Adjmt Exch Rate Amt");
        "Exchange Rate Amount" := "Adjustment Exch. Rate Amount";
        "Relational Exch. Rate Amount" := "Relational Adjmt Exch Rate Amt";
      END;
      RelExchangeRateAmt := "Relational Exch. Rate Amount";
      ExchangeRateAmt := "Exchange Rate Amount";
      RelCurrencyCode := "Relational Currency Code";
      IF "Relational Currency Code" = '' THEN BEGIN
        IF VendorExchRate<>0 THEN
          CurrencyFactor := VendorExchRate
        ELSE
          CurrencyFactor := "Exchange Rate Amount" / "Relational Exch. Rate Amount";
      END ELSE BEGIN
        FindCurrency(Date,RelCurrencyCode,2);
        IF NOT UseAdjmtAmounts THEN BEGIN
          TESTFIELD("Exchange Rate Amount");
          TESTFIELD("Relational Exch. Rate Amount");
        END ELSE BEGIN
          TESTFIELD("Adjustment Exch. Rate Amount");
          TESTFIELD("Relational Adjmt Exch Rate Amt");
          "Exchange Rate Amount" := "Adjustment Exch. Rate Amount";
          "Relational Exch. Rate Amount" := "Relational Adjmt Exch Rate Amt";
        END;
        CurrencyFactor := (ExchangeRateAmt * "Exchange Rate Amount") /
                          (RelExchangeRateAmt * "Relational Exch. Rate Amount")
      END;
      EXIT(CurrencyFactor);
    END;

    PROCEDURE ExchangeRateFRS21@10(Date@1500003 : Date;CurrencyCodeFCY@1500002 : Code[10];CurrencyCode@1500001 : Code[10];VendorExchRate@1500000 : Decimal) : Decimal;
    BEGIN
      IF CurrencyCode = '' THEN
        EXIT(1);
      FindCurrency(Date,CurrencyCodeFCY,1);
      ExchangeRateAmtFCY := "Exchange Rate Amount";
      RelExchangeRateAmtFCY := "Relational Exch. Rate Amount";
      FindCurrency(Date,CurrencyCode,1);
      IF NOT UseAdjmtAmounts THEN BEGIN
        TESTFIELD("Exchange Rate Amount");
        TESTFIELD("Relational Exch. Rate Amount");
      END ELSE BEGIN
        TESTFIELD("Adjustment Exch. Rate Amount");
        TESTFIELD("Relational Adjmt Exch Rate Amt");
        "Exchange Rate Amount" := "Adjustment Exch. Rate Amount";
        "Relational Exch. Rate Amount" := "Relational Adjmt Exch Rate Amt";
      END;
      RelExchangeRateAmt :=
        "Relational Exch. Rate Amount" * VendorExchRate / "Exchange Rate Amount";
      ExchangeRateAmt := "Exchange Rate Amount";
      RelCurrencyCode := "Relational Currency Code";
      IF "Relational Currency Code" = '' THEN
        CurrencyFactor := 1 / RelExchangeRateAmt
      ELSE BEGIN
        FindCurrency(Date,RelCurrencyCode,2);
        IF NOT UseAdjmtAmounts THEN BEGIN
          TESTFIELD("Exchange Rate Amount");
          TESTFIELD("Relational Exch. Rate Amount");
        END ELSE BEGIN
          TESTFIELD("Adjustment Exch. Rate Amount");
          TESTFIELD("Relational Adjmt Exch Rate Amt");
          "Exchange Rate Amount" := "Adjustment Exch. Rate Amount";
          "Relational Exch. Rate Amount" := "Relational Adjmt Exch Rate Amt";
        END;
        CurrencyFactor := (ExchangeRateAmt * "Exchange Rate Amount") / (RelExchangeRateAmt * "Relational Exch. Rate Amount");
      END;
      EXIT(CurrencyFactor);
    END;

    BEGIN
    {
      //YIMMNBTR

      1. Two fields added for bank / tax rate calculation.
      //YEID1.0- CODE WRITTEN FOR COMPANY SPECIFIC EXCHNAGE RATE FOR FOREIGN CURRENCY.( ON INSERT TRIGGER)
      //YMNI1.0- CODE WRITTEN FOR COMPANY SPECIFIC EXCHNAGE RATE FOR FOREIGN CURRENCY.( ON INSERT TRIGGER)
      //UPG09R2
      5.0 to 2009 R2 Merged Code in objects identification.
      //UPG13
      2009R2 to 2013 Merged Code.
      //UPG13R2
      2013 to 2013R2 Merged Code.
    }
    END.
  }
}

