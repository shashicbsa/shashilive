OBJECT Report 28167 BAS - Import/Export Setup
{
  OBJECT-PROPERTIES
  {
    Date=09/07/12;
    Time=12:00:00;
    Version List=NAVAPAC7.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=BAS - Import/Export Setup;
               ENA=BAS - Import/Export Setup];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  FileMgt@1500000 : Codeunit 419;
                BEGIN
                  IF (BASDirection = BASDirection::Import) OR (BASDirection = BASDirection::"Update BAS XML Field ID") THEN BEGIN
                    ReadFromFile(BASFileName);
                    IF BASFileName = '' THEN
                      ERROR(Text001);
                  END;
                  IF BASDirection = BASDirection::Export THEN
                    BASFileName := FileMgt.ServerTempFileName('xml');

                  CASE BASDirection OF
                    BASDirection::Import:
                      BASMngmt.ImportBAS(BASCalcSheet,BASFileName);
                    BASDirection::Export:
                      BASMngmt.ExportBAS(BASCalcSheet,BASFileName);
                    BASDirection::"Update BAS XML Field ID":
                      BASMngmt.UpdateXMLFieldSetup(BASFileName,CurrentBASSetupName);
                    ELSE
                      CurrReport.QUIT;
                  END;
                END;

    OnPostReport=VAR
                   ToFile@1500000 : Text[1024];
                 BEGIN
                   IF BASDirection = BASDirection::Export THEN BEGIN
                     ToFile := Text013 + '.xml';
                     DOWNLOAD(BASFileName,Text011,'',Text035,ToFile);
                   END;

                   CLEAR(BASMngmt);
                 END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      BASCalcSheet@1500004 : Record 11601;
      BASMngmt@1500003 : Codeunit 11601;
      BASDirection@1500002 : 'Import,Export,Update BAS XML Field ID';
      BASFileName@1500001 : Text[250];
      CurrentBASSetupName@1500000 : Code[20];
      Text034@1500009 : TextConst 'ENU=Import from XML File;ENA=Import from XML File';
      Text001@1500008 : TextConst 'ENU=Enter the file name.;ENA=Enter the file name.';
      Text035@1500007 : TextConst 'ENU=XML Files (*.xml)|*.xml|All Files (*.*)|*.*;ENA=XML Files (*.xml)|*.xml|All Files (*.*)|*.*';
      Text011@1500011 : TextConst 'ENU=Export to XML File;ENA=Export to XML File';
      Text013@1500010 : TextConst 'ENU=Default;ENA=Default';

    PROCEDURE SetBASCalcSheetRecord@1450000(NewBASCalcSheet@1500000 : Record 11601);
    BEGIN
      BASCalcSheet := NewBASCalcSheet;
      BASFileName := NewBASCalcSheet."File Name";
    END;

    PROCEDURE SetDirection@1450001(NewBASDirection@1500000 : 'Import,Export,Update BAS XML Field ID');
    BEGIN
      BASDirection := NewBASDirection;
    END;

    PROCEDURE ReturnRecord@1450002(VAR NewBASCalcSheet@1500000 : Record 11601);
    BEGIN
      NewBASCalcSheet := BASCalcSheet;
    END;

    PROCEDURE SetCurrentBASSetupName@1260000(OldCurrentBASSetupName@1500000 : Code[20]);
    BEGIN
      CurrentBASSetupName := OldCurrentBASSetupName;
    END;

    PROCEDURE ReadFromFile@1500000(VAR FileName2@1102601000 : Text[1024]);
    VAR
      FileMgt@1450000 : Codeunit 419;
      NewFileName@1500003 : Text[1024];
    BEGIN
      IF FileName2 = '' THEN
        FileName2 := '.xml';
      NewFileName := FileMgt.OpenFileDialog(Text034,FileName2,'');
      IF NewFileName <> '' THEN
        FileName2 := NewFileName;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

