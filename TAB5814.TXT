OBJECT Table 5814 Inventory Period
{
  OBJECT-PROPERTIES
  {
    Date=09/07/12;
    Time=12:00:00;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF NOT IsValidDate("Ending Date") THEN
                 ERROR(Text002,TABLECAPTION,"Ending Date");
             END;

    OnDelete=BEGIN
               TESTFIELD(Closed,FALSE);
               InvtPeriodEntry.SETRANGE("Ending Date","Ending Date");
               InvtPeriodEntry.DELETEALL;
             END;

    OnRename=BEGIN
               TESTFIELD(Closed,FALSE);
               IF InvtPeriodEntryExists(xRec."Ending Date") THEN
                 ERROR(Text001,TABLECAPTION,InvtPeriodEntry.TABLECAPTION);

               IF NOT IsValidDate("Ending Date") THEN
                 ERROR(Text001,TABLECAPTION,"Ending Date");
             END;

    CaptionML=[ENU=Inventory Period;
               ENA=Inventory Period];
    LookupPageID=Page5828;
  }
  FIELDS
  {
    { 1   ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                Name := FORMAT("Ending Date",0,Text000);
                                                              END;

                                                   CaptionML=[ENU=Ending Date;
                                                              ENA=Ending Date];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ENA=Name] }
    { 3   ;   ;Closed              ;Boolean       ;CaptionML=[ENU=Closed;
                                                              ENA=Closed];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Ending Date                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Ending Date,Name,Closed                  }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=<Month Text> <Year4>;ENA=<Month Text> <Year4>';
      Text001@1002 : TextConst 'ENU=You cannot rename the %1 because there is at least one %2 in this period.;ENA=You cannot rename the %1 because there is at least one %2 in this period.';
      InvtPeriodEntry@1003 : Record 5815;
      Text002@1004 : TextConst 'ENU=You are not allowed to insert an %1 that ends before %2.;ENA=You are not allowed to insert an %1 that ends before %2.';
      Text003@1005 : TextConst 'ENU=You cannot post before %1 because the %2 is already closed. You must re-open the period first.;ENA=You cannot post before %1 because the %2 is already closed. You must re-open the period first.';

    LOCAL PROCEDURE InvtPeriodEntryExists@1(EndingDate@1001 : Date) : Boolean;
    VAR
      InvtPeriodEntry@1000 : Record 5815;
    BEGIN
      InvtPeriodEntry.SETRANGE("Ending Date",EndingDate);
      EXIT(NOT InvtPeriodEntry.ISEMPTY);
    END;

    PROCEDURE IsValidDate@56(VAR EndingDate@1000 : Date) : Boolean;
    VAR
      InvtPeriod@1001 : Record 5814;
    BEGIN
      InvtPeriod.SETFILTER("Ending Date",'>=%1',EndingDate);
      InvtPeriod.SETRANGE(Closed,TRUE);
      IF InvtPeriod.FINDLAST THEN
        EndingDate := InvtPeriod."Ending Date"
      ELSE
        EXIT(TRUE);
    END;

    PROCEDURE ShowError@2(PostingDate@1001 : Date);
    BEGIN
      ERROR(Text003,CALCDATE('<+1D>',PostingDate),TABLECAPTION);
    END;

    PROCEDURE IsInvtPeriodClosed@3(EndingDate@1000 : Date) : Boolean;
    VAR
      AccPeriod@1001 : Record 50;
    BEGIN
      AccPeriod.SETFILTER("Starting Date",'>=%1',EndingDate);
      IF NOT AccPeriod.FIND('-') THEN
        EXIT(FALSE);
      IF AccPeriod.NEXT <> 0 THEN
        EndingDate := CALCDATE('<-1D>',AccPeriod."Starting Date");

      SETFILTER("Ending Date",'>=%1',EndingDate);
      SETRANGE(Closed,TRUE);
      EXIT(NOT ISEMPTY);
    END;

    BEGIN
    END.
  }
}

