OBJECT Table 382 CV Ledger Entry Buffer
{
  OBJECT-PROPERTIES
  {
    Date=07/29/15;
    Time=13:31:12;
    Modified=Yes;
    Version List=NAVW17.10,YIMMNTT,YIMMNNPWP,TCH,Mel1.0,UPG09R2,UPG13,UPG13R2;
  }
  PROPERTIES
  {
    CaptionML=[ENU=CV Ledger Entry Buffer;
               ENA=CV Ledger Entry Buffer];
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              ENA=Entry No.] }
    { 3   ;   ;CV No.              ;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=CV No.;
                                                              ENA=CV No.] }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              ENA=Posting Date] }
    { 5   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ENA=Document Type];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    ENA=" ,Payment,Invoice,CR/Adj Note,Finance Charge Memo,Reminder,Refund"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 6   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ENA=Document No.] }
    { 7   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ENA=Description] }
    { 11  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              ENA=Currency Code] }
    { 13  ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              ENA=Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 14  ;   ;Remaining Amount    ;Decimal       ;CaptionML=[ENU=Remaining Amount;
                                                              ENA=Remaining Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 15  ;   ;Original Amt. (LCY) ;Decimal       ;CaptionML=[ENU=Original Amt. (LCY);
                                                              ENA=Original Amt. (LCY)];
                                                   AutoFormatType=1 }
    { 16  ;   ;Remaining Amt. (LCY);Decimal       ;CaptionML=[ENU=Remaining Amt. (LCY);
                                                              ENA=Remaining Amt. (LCY)];
                                                   AutoFormatType=1 }
    { 17  ;   ;Amount (LCY)        ;Decimal       ;CaptionML=[ENU=Amount (LCY);
                                                              ENA=Amount (LCY)];
                                                   AutoFormatType=1 }
    { 18  ;   ;Sales/Purchase (LCY);Decimal       ;CaptionML=[ENU=Sales/Purchase (LCY);
                                                              ENA=Sales/Purchase (LCY)];
                                                   AutoFormatType=1 }
    { 19  ;   ;Profit (LCY)        ;Decimal       ;CaptionML=[ENU=Profit (LCY);
                                                              ENA=Profit (LCY)];
                                                   AutoFormatType=1 }
    { 20  ;   ;Inv. Discount (LCY) ;Decimal       ;CaptionML=[ENU=Inv. Discount (LCY);
                                                              ENA=Inv. Discount (LCY)];
                                                   AutoFormatType=1 }
    { 21  ;   ;Bill-to/Pay-to CV No.;Code20       ;TableRelation=Customer;
                                                   CaptionML=[ENU=Bill-to/Pay-to CV No.;
                                                              ENA=Bill-to/Pay-to CV No.] }
    { 22  ;   ;CV Posting Group    ;Code10        ;TableRelation="Customer Posting Group";
                                                   CaptionML=[ENU=CV Posting Group;
                                                              ENA=CV Posting Group] }
    { 23  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              ENA=Global Dimension 1 Code];
                                                   CaptionClass='1,1,1' }
    { 24  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              ENA=Global Dimension 2 Code];
                                                   CaptionClass='1,1,2' }
    { 25  ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Salesperson Code;
                                                              ENA=Salesperson Code] }
    { 27  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              ENA=User ID] }
    { 28  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              ENA=Source Code] }
    { 33  ;   ;On Hold             ;Code3         ;CaptionML=[ENU=On Hold;
                                                              ENA=On Hold] }
    { 34  ;   ;Applies-to Doc. Type;Option        ;CaptionML=[ENU=Applies-to Doc. Type;
                                                              ENA=Applies-to Doc. Type];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    ENA=" ,Payment,Invoice,CR/Adj Note,Finance Charge Memo,Reminder,Refund"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 35  ;   ;Applies-to Doc. No. ;Code20        ;CaptionML=[ENU=Applies-to Doc. No.;
                                                              ENA=Applies-to Doc. No.] }
    { 36  ;   ;Open                ;Boolean       ;CaptionML=[ENU=Open;
                                                              ENA=Open] }
    { 37  ;   ;Due Date            ;Date          ;CaptionML=[ENU=Due Date;
                                                              ENA=Due Date] }
    { 38  ;   ;Pmt. Discount Date  ;Date          ;CaptionML=[ENU=Pmt. Discount Date;
                                                              ENA=Pmt. Discount Date] }
    { 39  ;   ;Original Pmt. Disc. Possible;Decimal;
                                                   CaptionML=[ENU=Original Pmt. Disc. Possible;
                                                              ENA=Original Pmt. Disc. Possible];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 40  ;   ;Pmt. Disc. Given (LCY);Decimal     ;CaptionML=[ENU=Pmt. Disc. Given (LCY);
                                                              ENA=Pmt. Disc. Given (LCY)];
                                                   AutoFormatType=1 }
    { 43  ;   ;Positive            ;Boolean       ;CaptionML=[ENU=Positive;
                                                              ENA=Positive] }
    { 44  ;   ;Closed by Entry No. ;Integer       ;TableRelation="Cust. Ledger Entry";
                                                   CaptionML=[ENU=Closed by Entry No.;
                                                              ENA=Closed by Entry No.] }
    { 45  ;   ;Closed at Date      ;Date          ;CaptionML=[ENU=Closed at Date;
                                                              ENA=Closed at Date] }
    { 46  ;   ;Closed by Amount    ;Decimal       ;CaptionML=[ENU=Closed by Amount;
                                                              ENA=Closed by Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 47  ;   ;Applies-to ID       ;Code50        ;CaptionML=[ENU=Applies-to ID;
                                                              ENA=Applies-to ID] }
    { 49  ;   ;Journal Batch Name  ;Code10        ;CaptionML=[ENU=Journal Batch Name;
                                                              ENA=Journal Batch Name] }
    { 50  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              ENA=Reason Code] }
    { 51  ;   ;Bal. Account Type   ;Option        ;CaptionML=[ENU=Bal. Account Type;
                                                              ENA=Bal. Account Type];
                                                   OptionCaptionML=[ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset;
                                                                    ENA=G/L Account,Customer,Vendor,Bank Account,Fixed Asset];
                                                   OptionString=G/L Account,Customer,Vendor,Bank Account,Fixed Asset }
    { 52  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Customer)) Customer
                                                                 ELSE IF (Bal. Account Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Fixed Asset)) "Fixed Asset";
                                                   CaptionML=[ENU=Bal. Account No.;
                                                              ENA=Bal. Account No.] }
    { 53  ;   ;Transaction No.     ;Integer       ;CaptionML=[ENU=Transaction No.;
                                                              ENA=Transaction No.] }
    { 54  ;   ;Closed by Amount (LCY);Decimal     ;CaptionML=[ENU=Closed by Amount (LCY);
                                                              ENA=Closed by Amount (LCY)];
                                                   AutoFormatType=1 }
    { 58  ;   ;Debit Amount        ;Decimal       ;CaptionML=[ENU=Debit Amount;
                                                              ENA=Debit Amount];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 59  ;   ;Credit Amount       ;Decimal       ;CaptionML=[ENU=Credit Amount;
                                                              ENA=Credit Amount];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 60  ;   ;Debit Amount (LCY)  ;Decimal       ;CaptionML=[ENU=Debit Amount (LCY);
                                                              ENA=Debit Amount (LCY)];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 61  ;   ;Credit Amount (LCY) ;Decimal       ;CaptionML=[ENU=Credit Amount (LCY);
                                                              ENA=Credit Amount (LCY)];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 62  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              ENA=Document Date] }
    { 63  ;   ;External Document No.;Code35       ;CaptionML=[ENU=External Document No.;
                                                              ENA=External Document No.] }
    { 64  ;   ;Calculate Interest  ;Boolean       ;CaptionML=[ENU=Calculate Interest;
                                                              ENA=Calculate Interest] }
    { 65  ;   ;Closing Interest Calculated;Boolean;CaptionML=[ENU=Closing Interest Calculated;
                                                              ENA=Closing Interest Calculated] }
    { 66  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ENA=No. Series] }
    { 67  ;   ;Closed by Currency Code;Code10     ;TableRelation=Currency;
                                                   CaptionML=[ENU=Closed by Currency Code;
                                                              ENA=Closed by Currency Code] }
    { 68  ;   ;Closed by Currency Amount;Decimal  ;CaptionML=[ENU=Closed by Currency Amount;
                                                              ENA=Closed by Currency Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Closed by Currency Code" }
    { 70  ;   ;Rounding Currency   ;Code10        ;CaptionML=[ENU=Rounding Currency;
                                                              ENA=Rounding Currency] }
    { 71  ;   ;Rounding Amount     ;Decimal       ;CaptionML=[ENU=Rounding Amount;
                                                              ENA=Rounding Amount];
                                                   AutoFormatType=1 }
    { 72  ;   ;Rounding Amount (LCY);Decimal      ;CaptionML=[ENU=Rounding Amount (LCY);
                                                              ENA=Rounding Amount (LCY)];
                                                   AutoFormatType=1 }
    { 73  ;   ;Adjusted Currency Factor;Decimal   ;CaptionML=[ENU=Adjusted Currency Factor;
                                                              ENA=Adjusted Currency Factor];
                                                   AutoFormatType=1 }
    { 74  ;   ;Original Currency Factor;Decimal   ;CaptionML=[ENU=Original Currency Factor;
                                                              ENA=Original Currency Factor];
                                                   AutoFormatType=1 }
    { 75  ;   ;Original Amount     ;Decimal       ;CaptionML=[ENU=Original Amount;
                                                              ENA=Original Amount];
                                                   AutoFormatType=1 }
    { 77  ;   ;Remaining Pmt. Disc. Possible;Decimal;
                                                   CaptionML=[ENU=Remaining Pmt. Disc. Possible;
                                                              ENA=Remaining Pmt. Disc. Possible];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 78  ;   ;Pmt. Disc. Tolerance Date;Date     ;CaptionML=[ENU=Pmt. Disc. Tolerance Date;
                                                              ENA=Pmt. Disc. Tolerance Date] }
    { 79  ;   ;Max. Payment Tolerance;Decimal     ;CaptionML=[ENU=Max. Payment Tolerance;
                                                              ENA=Max. Payment Tolerance] }
    { 81  ;   ;Accepted Payment Tolerance;Decimal ;CaptionML=[ENU=Accepted Payment Tolerance;
                                                              ENA=Accepted Payment Tolerance] }
    { 82  ;   ;Accepted Pmt. Disc. Tolerance;Boolean;
                                                   CaptionML=[ENU=Accepted Pmt. Disc. Tolerance;
                                                              ENA=Accepted Pmt. Disc. Tolerance] }
    { 83  ;   ;Pmt. Tolerance (LCY);Decimal       ;CaptionML=[ENU=Pmt. Tolerance (LCY);
                                                              ENA=Pmt. Tolerance (LCY)] }
    { 84  ;   ;Amount to Apply     ;Decimal       ;CaptionML=[ENU=Amount to Apply;
                                                              ENA=Amount to Apply];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 90  ;   ;Prepayment          ;Boolean       ;CaptionML=[ENU=Prepayment;
                                                              ENA=Prepayment] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   CaptionML=[ENU=Dimension Set ID;
                                                              ENA=Dimension Set ID];
                                                   Editable=No }
    { 50001;  ;Kwitansi No.        ;Code20        ;Description=YIMMNTT }
    { 50002;  ;Commercial Invoice No.;Code20      ;Description=YIMMNTT }
    { 50003;  ;Commercial Invoice Date;Date       ;Description=YIMMNTT }
    { 50004;  ;Tax Invoice No.     ;Code30        ;Description=YIMMNTT,YIMMNTCH }
    { 50005;  ;Tax Invoice Date    ;Date          ;Description=YIMMNTT }
    { 50006;  ;Narration           ;Text250       ;Description=YIMMNTT }
    { 50007;  ;Ship-to Code        ;Code20        ;CaptionML=ENU=Ship-to Code;
                                                   Description=YIMMNNPWP }
    { 50008;  ;Ship-to Address     ;Text50        ;CaptionML=ENU=Ship-to Address;
                                                   Description=YIMM }
    { 50009;  ;Ship-to Address 2   ;Text50        ;CaptionML=ENU=Ship-to Address 2;
                                                   Description=YIMM }
    { 52000;  ;Quote No ( Project No.);Code20     ;Description=For Melco to Capture the Quote No. }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE CopyFromCustLedgEntry@1(CustLedgEntry@1001 : Record 21);
    BEGIN
      TRANSFERFIELDS(CustLedgEntry);
      Amount := CustLedgEntry.Amount;
      "Amount (LCY)" := CustLedgEntry."Amount (LCY)";
      "Remaining Amount" := CustLedgEntry."Remaining Amount";
      "Remaining Amt. (LCY)" := CustLedgEntry."Remaining Amt. (LCY)";
      "Original Amount" := CustLedgEntry."Original Amount";
      "Original Amt. (LCY)" := CustLedgEntry."Original Amt. (LCY)";
    END;

    PROCEDURE CopyToCustLedgEntry@2(VAR CustLedgEntry@1000 : Record 21);
    BEGIN
      CustLedgEntry.TRANSFERFIELDS(Rec);
      CustLedgEntry.Amount := Amount;
      CustLedgEntry."Amount (LCY)" := "Amount (LCY)";
      CustLedgEntry."Remaining Amount" := "Remaining Amount";
      CustLedgEntry."Remaining Amt. (LCY)" := "Remaining Amt. (LCY)";
      CustLedgEntry."Original Amount" := "Original Amount";
      CustLedgEntry."Original Amt. (LCY)" := "Original Amt. (LCY)";
      CustLedgEntry."Slip Date" := "Posting Date";//nd
    END;

    PROCEDURE CopyFromVendLedgEntry@4(VendLedgEntry@1000 : Record 25);
    BEGIN
      "Entry No." := VendLedgEntry."Entry No.";
      "CV No." := VendLedgEntry."Vendor No.";
      "Posting Date" := VendLedgEntry."Posting Date";
      "Document Type" := VendLedgEntry."Document Type";
      "Document No." := VendLedgEntry."Document No.";
      Description := VendLedgEntry.Description;
      "Currency Code" := VendLedgEntry."Currency Code";
      Amount := VendLedgEntry.Amount;
      "Remaining Amount" := VendLedgEntry."Remaining Amount";
      "Original Amount" := VendLedgEntry."Original Amount";
      "Original Amt. (LCY)" := VendLedgEntry."Original Amt. (LCY)";
      "Remaining Amt. (LCY)" := VendLedgEntry."Remaining Amt. (LCY)";
      "Amount (LCY)" := VendLedgEntry."Amount (LCY)";
      "Sales/Purchase (LCY)" := VendLedgEntry."Purchase (LCY)";
      "Inv. Discount (LCY)" := VendLedgEntry."Inv. Discount (LCY)";
      "Bill-to/Pay-to CV No." := VendLedgEntry."Buy-from Vendor No.";
      "CV Posting Group" := VendLedgEntry."Vendor Posting Group";
      "Global Dimension 1 Code" := VendLedgEntry."Global Dimension 1 Code";
      "Global Dimension 2 Code" := VendLedgEntry."Global Dimension 2 Code";
      "Dimension Set ID" := VendLedgEntry."Dimension Set ID";
      "Salesperson Code" := VendLedgEntry."Purchaser Code";
      // UPG09R2.begin //UPG13R2.begin
      //YIMMNTTST
        "Kwitansi No.":=VendLedgEntry."Kwitansi No.";
        "Commercial Invoice No.":=VendLedgEntry."Commercial Invoice No.";
        "Commercial Invoice Date":=VendLedgEntry."Commercial Invoice Date";
        "Tax Invoice No.":=VendLedgEntry."Tax Invoice No.";
        "Tax Invoice Date":=VendLedgEntry."Tax Invoice Date";
        Narration:=VendLedgEntry.Narration;
      //YIMMNTTEN


      //Mel1.0-Start
         "Quote No ( Project No.)":=VendLedgEntry."Quote No ( Project No.)";
      //Mel1.0-End

      //YIMMNNPWPST
       //"Ship-to Code":=VendLedgEntry."Ship-to Code";//UPG13R2 Commented.
      //YIMMNNPWPEN
       //"Ship-to Address":=VendLedgEntry."Ship-to Address";//UPG13R2 Commented.
       //"Ship-to Address 2":=VendLedgEntry."Ship-to Address 2";//UPG13R2 Commented.
       // UPG09R2.end //UPG13R2.end

      "User ID" := VendLedgEntry."User ID";
      "Source Code" := VendLedgEntry."Source Code";
      "On Hold" := VendLedgEntry."On Hold";
      "Applies-to Doc. Type" := VendLedgEntry."Applies-to Doc. Type";
      "Applies-to Doc. No." := VendLedgEntry."Applies-to Doc. No.";
      Open := VendLedgEntry.Open;
      "Due Date" := VendLedgEntry."Due Date" ;
      "Pmt. Discount Date" := VendLedgEntry."Pmt. Discount Date";
      "Original Pmt. Disc. Possible" := VendLedgEntry."Original Pmt. Disc. Possible";
      "Remaining Pmt. Disc. Possible" := VendLedgEntry."Remaining Pmt. Disc. Possible";
      "Pmt. Disc. Given (LCY)" := VendLedgEntry."Pmt. Disc. Rcd.(LCY)";
      Positive := VendLedgEntry.Positive;
      "Closed by Entry No." := VendLedgEntry."Closed by Entry No.";
      "Closed at Date" := VendLedgEntry."Closed at Date";
      "Closed by Amount" := VendLedgEntry."Closed by Amount";
      "Applies-to ID" := VendLedgEntry."Applies-to ID";
      "Journal Batch Name" := VendLedgEntry."Journal Batch Name";
      "Reason Code" := VendLedgEntry."Reason Code";
      "Bal. Account Type" := VendLedgEntry."Bal. Account Type";
      "Bal. Account No." := VendLedgEntry."Bal. Account No.";
      "Transaction No." := VendLedgEntry."Transaction No.";
      "Closed by Amount (LCY)" := VendLedgEntry."Closed by Amount (LCY)";
      "Debit Amount" := VendLedgEntry."Debit Amount";
      "Credit Amount" := VendLedgEntry."Credit Amount";
      "Debit Amount (LCY)" := VendLedgEntry."Debit Amount (LCY)";
      "Credit Amount (LCY)" := VendLedgEntry."Credit Amount (LCY)";
      "Document Date" := VendLedgEntry."Document Date";
      "External Document No." := VendLedgEntry."External Document No.";
      "No. Series" := VendLedgEntry."No. Series";
      "Closed by Currency Code" := VendLedgEntry."Closed by Currency Code";
      "Closed by Currency Amount" := VendLedgEntry."Closed by Currency Amount";
      "Adjusted Currency Factor" := VendLedgEntry."Adjusted Currency Factor";
      "Original Currency Factor" := VendLedgEntry."Original Currency Factor";
      "Pmt. Disc. Tolerance Date" := VendLedgEntry."Pmt. Disc. Tolerance Date";
      "Max. Payment Tolerance" := VendLedgEntry."Max. Payment Tolerance";
      "Accepted Payment Tolerance" := VendLedgEntry."Accepted Payment Tolerance";
      "Accepted Pmt. Disc. Tolerance" := VendLedgEntry."Accepted Pmt. Disc. Tolerance";
      "Amount to Apply" := VendLedgEntry."Amount to Apply";
      Prepayment := VendLedgEntry.Prepayment;
    END;

    PROCEDURE CopyToVendLedgEntry@3(VAR VendLedgEntry@1000 : Record 25);
    BEGIN
      VendLedgEntry."Entry No." := "Entry No.";
      VendLedgEntry."Vendor No." := "CV No.";
      VendLedgEntry."Posting Date" := "Posting Date";
      VendLedgEntry."Document Type" := "Document Type";
      VendLedgEntry."Document No." := "Document No.";
      VendLedgEntry.Description := Description;
      VendLedgEntry."Currency Code" := "Currency Code";
      VendLedgEntry.Amount := Amount;
      VendLedgEntry."Remaining Amount" := "Remaining Amount";
      VendLedgEntry."Original Amount" := "Original Amount";
      VendLedgEntry."Original Amt. (LCY)" := "Original Amt. (LCY)";
      VendLedgEntry."Remaining Amt. (LCY)" := "Remaining Amt. (LCY)";
      VendLedgEntry."Amount (LCY)" := "Amount (LCY)";
      VendLedgEntry."Purchase (LCY)" := "Sales/Purchase (LCY)";
      VendLedgEntry."Inv. Discount (LCY)" := "Inv. Discount (LCY)";
      VendLedgEntry."Buy-from Vendor No." := "Bill-to/Pay-to CV No.";
      VendLedgEntry."Vendor Posting Group" := "CV Posting Group";
      VendLedgEntry."Global Dimension 1 Code" := "Global Dimension 1 Code";
      VendLedgEntry."Global Dimension 2 Code" := "Global Dimension 2 Code";
      VendLedgEntry."Dimension Set ID" := "Dimension Set ID";
      VendLedgEntry."Purchaser Code" := "Salesperson Code";
       // UPG09R2.begin //UPG13R2.begin
       //YIMMNTTST
        VendLedgEntry."Kwitansi No.":="Kwitansi No.";
        VendLedgEntry."Commercial Invoice No.":="Commercial Invoice No.";
        VendLedgEntry."Commercial Invoice Date":="Commercial Invoice Date";
        VendLedgEntry."Tax Invoice No.":= "Tax Invoice No.";
        VendLedgEntry."Tax Invoice Date":="Tax Invoice Date";
        VendLedgEntry.Narration:=Narration;
       //YIMMNTTEN


      //Mel1.0-Start
        VendLedgEntry."Quote No ( Project No.)":="Quote No ( Project No.)";

      //Mel1.0-End
      //YIMMNNPWPST
        VendLedgEntry."Order Address Code" := "Ship-to Code";
      //YIMMNNPWPEN
      // UPG09R2.end //UPG13R2.end
      VendLedgEntry."User ID" := "User ID";
      VendLedgEntry."Source Code" := "Source Code";
      VendLedgEntry."On Hold" := "On Hold";
      VendLedgEntry."Applies-to Doc. Type" := "Applies-to Doc. Type";
      VendLedgEntry."Applies-to Doc. No." := "Applies-to Doc. No.";
      VendLedgEntry.Open := Open;
      VendLedgEntry."Due Date" := "Due Date" ;
      VendLedgEntry."Pmt. Discount Date" := "Pmt. Discount Date";
      VendLedgEntry."Original Pmt. Disc. Possible" := "Original Pmt. Disc. Possible";
      VendLedgEntry."Remaining Pmt. Disc. Possible" := "Remaining Pmt. Disc. Possible";
      VendLedgEntry."Pmt. Disc. Rcd.(LCY)" := "Pmt. Disc. Given (LCY)";
      VendLedgEntry.Positive := Positive;
      VendLedgEntry."Closed by Entry No." := "Closed by Entry No.";
      VendLedgEntry."Closed at Date" := "Closed at Date";
      VendLedgEntry."Closed by Amount" := "Closed by Amount";
      VendLedgEntry."Applies-to ID" := "Applies-to ID";
      VendLedgEntry."Journal Batch Name" := "Journal Batch Name";
      VendLedgEntry."Reason Code" := "Reason Code";
      VendLedgEntry."Bal. Account Type" := "Bal. Account Type";
      VendLedgEntry."Bal. Account No." := "Bal. Account No.";
      VendLedgEntry."Transaction No." := "Transaction No.";
      VendLedgEntry."Closed by Amount (LCY)" := "Closed by Amount (LCY)";
      VendLedgEntry."Debit Amount" := "Debit Amount";
      VendLedgEntry."Credit Amount" := "Credit Amount";
      VendLedgEntry."Debit Amount (LCY)" := "Debit Amount (LCY)";
      VendLedgEntry."Credit Amount (LCY)" := "Credit Amount (LCY)";
      VendLedgEntry."Document Date" := "Document Date";
      VendLedgEntry."External Document No." := "External Document No.";
      VendLedgEntry."No. Series" := "No. Series";
      VendLedgEntry."Closed by Currency Code" := "Closed by Currency Code";
      VendLedgEntry."Closed by Currency Amount" := "Closed by Currency Amount";
      VendLedgEntry."Adjusted Currency Factor" := "Adjusted Currency Factor";
      VendLedgEntry."Original Currency Factor" := "Original Currency Factor";
      VendLedgEntry."Pmt. Disc. Tolerance Date" := "Pmt. Disc. Tolerance Date";
      VendLedgEntry."Max. Payment Tolerance" := "Max. Payment Tolerance";
      VendLedgEntry."Accepted Payment Tolerance" := "Accepted Payment Tolerance";
      VendLedgEntry."Accepted Pmt. Disc. Tolerance" := "Accepted Pmt. Disc. Tolerance";
      VendLedgEntry."Pmt. Tolerance (LCY)" := "Pmt. Tolerance (LCY)";
      VendLedgEntry."Amount to Apply" := "Amount to Apply";
      VendLedgEntry.Prepayment := Prepayment;
    END;

    PROCEDURE RecalculateAmounts@41(FromCurrencyCode@1002 : Code[10];ToCurrencyCode@1001 : Code[10];PostingDate@1000 : Date);
    VAR
      CurrExchRate@1004 : Record 330;
    BEGIN
      IF ToCurrencyCode = FromCurrencyCode THEN
        EXIT;

      "Remaining Amount" :=
        CurrExchRate.ExchangeAmount("Remaining Amount",FromCurrencyCode,ToCurrencyCode,PostingDate);
      "Remaining Pmt. Disc. Possible" :=
        CurrExchRate.ExchangeAmount("Remaining Pmt. Disc. Possible",FromCurrencyCode,ToCurrencyCode,PostingDate);
      "Amount to Apply" :=
        CurrExchRate.ExchangeAmount("Amount to Apply",FromCurrencyCode,ToCurrencyCode,PostingDate);
    END;

    BEGIN
    {
      //YIMMNTT
         1) Fields added in the standard table for maintaining the information related to Tender Terima.
          a) Kwitansi No.
          b) Commercial Invoice No.
          c) Commercial Invoice Date
          d) Tax Invoice No.
          e) Tax Invoice Date
          f) Narration

      //YIMMNNPWP
       Field added for Multiple NPWP No.(ID-50007)

      //YIMMNTCH
       1) CHANGE THE LENGTH OF TAX INVOICE NO. FROM 20 TO 30 DIGITS
      //UPG09R2
      5.0 to 2009 R2 Merged Code in objects identification.
      //UPG13
      2009R2 to 2013 Merged Code.
      //UPG13R2
      2013 to 2013R2 Merged Code.
    }
    END.
  }
}

