OBJECT Table 60045 Cust. Ledger Entry-YIMM Consol
{
  OBJECT-PROPERTIES
  {
    Date=08/31/15;
    Time=15:52:10;
    Modified=Yes;
    Version List=YIMM-CONSOL_1.0,UPG13;
  }
  PROPERTIES
  {
    CaptionML=ENU=Cust. Ledger Entry;
    LookupPageID=Page25;
    DrillDownPageID=Page25;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=ENU=Entry No. }
    { 3   ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Customer No. }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 5   ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 6   ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No. }
    { 7   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 11  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=ENU=Currency Code }
    { 13  ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 14  ;   ;Remaining Amount    ;Decimal       ;CaptionML=ENU=Remaining Amount;
                                                   AutoFormatType=1 }
    { 15  ;   ;Original Amt. (LCY) ;Decimal       ;CaptionML=ENU=Original Amt. (LCY);
                                                   AutoFormatType=1 }
    { 16  ;   ;Remaining Amt. (LCY);Decimal       ;CaptionML=ENU=Remaining Amt. (LCY);
                                                   AutoFormatType=1 }
    { 17  ;   ;Amount (LCY)        ;Decimal       ;CaptionML=ENU=Amount (LCY);
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 18  ;   ;Sales (LCY)         ;Decimal       ;CaptionML=ENU=Sales (LCY);
                                                   AutoFormatType=1 }
    { 19  ;   ;Profit (LCY)        ;Decimal       ;CaptionML=ENU=Profit (LCY);
                                                   AutoFormatType=1 }
    { 20  ;   ;Inv. Discount (LCY) ;Decimal       ;CaptionML=ENU=Inv. Discount (LCY);
                                                   AutoFormatType=1 }
    { 21  ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Sell-to Customer No. }
    { 22  ;   ;Customer Posting Group;Code10      ;TableRelation="Customer Posting Group";
                                                   CaptionML=ENU=Customer Posting Group }
    { 23  ;   ;Global Dimension 1 Code;Code20     ;CaptionML=ENU=Global Dimension 1 Code }
    { 24  ;   ;Global Dimension 2 Code;Code20     ;CaptionML=ENU=Global Dimension 2 Code }
    { 25  ;   ;Salesperson Code    ;Code10        ;CaptionML=ENU=Salesperson Code }
    { 27  ;   ;User ID             ;Code20        ;OnLookup=VAR
                                                              LoginMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              LoginMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=ENU=User ID }
    { 28  ;   ;Source Code         ;Code10        ;CaptionML=ENU=Source Code }
    { 33  ;   ;On Hold             ;Code3         ;CaptionML=ENU=On Hold }
    { 34  ;   ;Applies-to Doc. Type;Option        ;CaptionML=ENU=Applies-to Doc. Type;
                                                   OptionCaptionML=ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 35  ;   ;Applies-to Doc. No. ;Code20        ;CaptionML=ENU=Applies-to Doc. No. }
    { 36  ;   ;Open                ;Boolean       ;CaptionML=ENU=Open }
    { 37  ;   ;Due Date            ;Date          ;OnValidate=VAR
                                                                ReminderEntry@1000 : Record 300;
                                                              BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                IF "Due Date" <> xRec."Due Date" THEN BEGIN
                                                                  ReminderEntry.SETCURRENTKEY("Customer Entry No.",Type);
                                                                  ReminderEntry.SETRANGE("Customer Entry No.","Entry No.");
                                                                  ReminderEntry.SETRANGE(Type,ReminderEntry.Type::Reminder);
                                                                  ReminderEntry.SETRANGE("Reminder Level","Last Issued Reminder Level");
                                                                  IF ReminderEntry.FIND('-') THEN BEGIN
                                                                    ReminderEntry."Due Date" := "Due Date";
                                                                    ReminderEntry.MODIFY;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Due Date }
    { 38  ;   ;Pmt. Discount Date  ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=ENU=Pmt. Discount Date }
    { 39  ;   ;Original Pmt. Disc. Possible;Decimal;
                                                   CaptionML=ENU=Original Pmt. Disc. Possible;
                                                   AutoFormatType=1 }
    { 40  ;   ;Pmt. Disc. Given (LCY);Decimal     ;CaptionML=ENU=Pmt. Disc. Given (LCY);
                                                   AutoFormatType=1 }
    { 43  ;   ;Positive            ;Boolean       ;CaptionML=ENU=Positive }
    { 44  ;   ;Closed by Entry No. ;Integer       ;CaptionML=ENU=Closed by Entry No. }
    { 45  ;   ;Closed at Date      ;Date          ;CaptionML=ENU=Closed at Date }
    { 46  ;   ;Closed by Amount    ;Decimal       ;CaptionML=ENU=Closed by Amount;
                                                   AutoFormatType=1 }
    { 47  ;   ;Applies-to ID       ;Code20        ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=ENU=Applies-to ID }
    { 49  ;   ;Journal Batch Name  ;Code10        ;CaptionML=ENU=Journal Batch Name }
    { 50  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=ENU=Reason Code }
    { 51  ;   ;Bal. Account Type   ;Option        ;CaptionML=ENU=Bal. Account Type;
                                                   OptionCaptionML=ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset;
                                                   OptionString=G/L Account,Customer,Vendor,Bank Account,Fixed Asset }
    { 52  ;   ;Bal. Account No.    ;Code20        ;CaptionML=ENU=Bal. Account No. }
    { 53  ;   ;Transaction No.     ;Integer       ;CaptionML=ENU=Transaction No. }
    { 54  ;   ;Closed by Amount (LCY);Decimal     ;CaptionML=ENU=Closed by Amount (LCY);
                                                   AutoFormatType=1 }
    { 58  ;   ;Debit Amount        ;Decimal       ;CaptionML=ENU=Debit Amount;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 59  ;   ;Credit Amount       ;Decimal       ;CaptionML=ENU=Credit Amount;
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 60  ;   ;Debit Amount (LCY)  ;Decimal       ;CaptionML=ENU=Debit Amount (LCY);
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 61  ;   ;Credit Amount (LCY) ;Decimal       ;CaptionML=ENU=Credit Amount (LCY);
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 62  ;   ;Document Date       ;Date          ;CaptionML=ENU=Document Date }
    { 63  ;   ;External Document No.;Code20       ;CaptionML=ENU=External Document No. }
    { 64  ;   ;Calculate Interest  ;Boolean       ;CaptionML=ENU=Calculate Interest }
    { 65  ;   ;Closing Interest Calculated;Boolean;CaptionML=ENU=Closing Interest Calculated }
    { 66  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series }
    { 67  ;   ;Closed by Currency Code;Code10     ;TableRelation=Currency;
                                                   CaptionML=ENU=Closed by Currency Code }
    { 68  ;   ;Closed by Currency Amount;Decimal  ;CaptionML=ENU=Closed by Currency Amount;
                                                   AutoFormatType=1 }
    { 73  ;   ;Adjusted Currency Factor;Decimal   ;CaptionML=ENU=Adjusted Currency Factor;
                                                   DecimalPlaces=0:15 }
    { 74  ;   ;Original Currency Factor;Decimal   ;CaptionML=ENU=Original Currency Factor;
                                                   DecimalPlaces=0:15 }
    { 75  ;   ;Original Amount     ;Decimal       ;CaptionML=ENU=Original Amount;
                                                   AutoFormatType=1 }
    { 76  ;   ;Date Filter         ;Date          ;CaptionML=ENU=Date Filter }
    { 77  ;   ;Remaining Pmt. Disc. Possible;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                CALCFIELDS(Amount,"Original Amount");

                                                                IF "Remaining Pmt. Disc. Possible" * Amount < 0 THEN
                                                                  FIELDERROR("Remaining Pmt. Disc. Possible",STRSUBSTNO(Text000,FIELDCAPTION(Amount)));

                                                                IF ABS("Remaining Pmt. Disc. Possible") > ABS("Original Amount") THEN
                                                                  FIELDERROR("Remaining Pmt. Disc. Possible",STRSUBSTNO(Text001,FIELDCAPTION("Original Amount")));
                                                              END;

                                                   CaptionML=ENU=Remaining Pmt. Disc. Possible;
                                                   AutoFormatType=1 }
    { 78  ;   ;Pmt. Disc. Tolerance Date;Date     ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=ENU=Pmt. Disc. Tolerance Date }
    { 79  ;   ;Max. Payment Tolerance;Decimal     ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                CALCFIELDS(Amount,"Remaining Amount");

                                                                IF "Max. Payment Tolerance" * Amount < 0 THEN
                                                                  FIELDERROR("Max. Payment Tolerance",STRSUBSTNO(Text000,FIELDCAPTION(Amount)));

                                                                IF ABS("Max. Payment Tolerance") > ABS("Remaining Amount") THEN
                                                                  FIELDERROR("Max. Payment Tolerance",STRSUBSTNO(Text001,FIELDCAPTION("Remaining Amount")));
                                                              END;

                                                   CaptionML=ENU=Max. Payment Tolerance;
                                                   AutoFormatType=1 }
    { 80  ;   ;Last Issued Reminder Level;Integer ;CaptionML=ENU=Last Issued Reminder Level }
    { 81  ;   ;Accepted Payment Tolerance;Decimal ;CaptionML=ENU=Accepted Payment Tolerance;
                                                   AutoFormatType=1 }
    { 82  ;   ;Accepted Pmt. Disc. Tolerance;Boolean;
                                                   CaptionML=ENU=Accepted Pmt. Disc. Tolerance }
    { 83  ;   ;Pmt. Tolerance (LCY);Decimal       ;CaptionML=ENU=Pmt. Tolerance (LCY);
                                                   AutoFormatType=1 }
    { 84  ;   ;Amount to Apply     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                CALCFIELDS("Remaining Amount");

                                                                IF "Amount to Apply" * "Remaining Amount" < 0 THEN
                                                                  FIELDERROR("Amount to Apply",STRSUBSTNO(Text000,FIELDCAPTION("Remaining Amount")));

                                                                IF ABS("Amount to Apply") > ABS("Remaining Amount") THEN
                                                                  FIELDERROR("Amount to Apply",STRSUBSTNO(Text001,FIELDCAPTION("Remaining Amount")));
                                                              END;

                                                   CaptionML=ENU=Amount to Apply;
                                                   AutoFormatType=1 }
    { 85  ;   ;IC Partner Code     ;Code20        ;CaptionML=ENU=IC Partner Code }
    { 86  ;   ;Applying Entry      ;Boolean       ;CaptionML=ENU=Applying Entry }
    { 87  ;   ;Reversed            ;Boolean       ;CaptionML=ENU=Reversed;
                                                   BlankZero=Yes }
    { 88  ;   ;Reversed by Entry No.;Integer      ;CaptionML=ENU=Reversed by Entry No.;
                                                   BlankZero=Yes }
    { 89  ;   ;Reversed Entry No.  ;Integer       ;CaptionML=ENU=Reversed Entry No.;
                                                   BlankZero=Yes }
    { 90  ;   ;Prepayment          ;Boolean       ;CaptionML=ENU=Prepayment }
    { 11620;  ;Adjustment          ;Boolean       ;CaptionML=ENU=Adjustment }
    { 11621;  ;BAS Adjustment      ;Boolean       ;CaptionML=ENU=BAS Adjustment }
    { 11626;  ;Adjustment Applies-to;Code20       ;CaptionML=ENU=Adjustment Applies-to }
    { 11628;  ;Pre Adjmt. Reason Code;Code10      ;CaptionML=ENU=Pre Adjmt. Reason Code }
    { 28040;  ;Rem. Amt for WHT    ;Decimal       ;CaptionML=ENU=Rem. Amt for WHT }
    { 28041;  ;Rem. Amt            ;Decimal       ;CaptionML=ENU=Rem. Amt }
    { 28042;  ;WHT Amount          ;Decimal       ;CaptionML=ENU=WHT Amount }
    { 28043;  ;WHT Amount (LCY)    ;Decimal       ;CaptionML=ENU=WHT Amount (LCY) }
    { 50001;  ;Kwitansi No.        ;Code20        ;Description=YIMMNTT }
    { 50002;  ;Commercial Invoice No.;Code20      ;Description=YIMMNTT }
    { 50003;  ;Commercial Invoice Date;Date       ;Description=YIMMNTT }
    { 50004;  ;Tax Invoice No.     ;Code30        ;Description=YIMMNTT,YIMMNTCH }
    { 50005;  ;Tax Invoice Date    ;Date          ;Description=YIMMNTT }
    { 50006;  ;Narration           ;Text250       ;Description=YIMMNTT }
    { 50007;  ;Ship-to Code        ;Code20        ;CaptionML=ENU=Ship-to Code;
                                                   Description=YIMMNNPWP }
    { 50008;  ;Ship-to Address     ;Text50        ;CaptionML=ENU=Ship-to Address;
                                                   Description=YIMM }
    { 50009;  ;Ship-to Address 2   ;Text50        ;CaptionML=ENU=Ship-to Address 2;
                                                   Description=YIMM }
    { 50010;  ;Type Of Transaction ;Option        ;OptionCaptionML=ENU=" ,Selling In,Selling Out,Direct,Indirect,Adm.MKT,Free Service,Claim,Promotion,Sharing,Import,FA,Others,Imacs,Propac,Gport,TMS,Other YMKI,Propac Ex.,Intrst_Deposit,Imacs-ATV,Imacs-Generator,Imacs-CBU,Campaign,DDS1 Vendor,DDS2 Vendor,DDS3 Vendor,DDS4 Vendor,DDS5 Vendor,DDS6 Vendor,DDS7 Vendor,DDS8 Vendor,DDS9 Vendor,MKT Vendor,SVC Vendor,MS Vendor,POD Vendor,Others Purchase,Ekspedisi Log-POD";
                                                   OptionString=[ ,Selling In,Selling Out,Direct,Indirect,Adm.MKT,Free Service,Claim,Promotion,Sharing,Import,FA,Others,Imacs,Propac,Gport,TMS,Other YMKI,Propac Ex.,Intrst_Deposit,Imacs-ATV,Imacs-Generator,Imacs-CBU,Campaign,DDS1 Vendor,DDS2 Vendor,DDS3 Vendor,DDS4 Vendor,DDS5 Vendor,DDS6 Vendor,DDS7 Vendor,DDS8 Vendor,DDS9 Vendor,MKT Vendor,SVC Vendor,MS Vendor,POD Vendor,Others Purchase,Ekspedisi Log-POD];
                                                   Description=YIMMAEXP }
    { 50011;  ;Incentive Month     ;Option        ;OptionCaptionML=ENU=" ,Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec";
                                                   OptionString=[ ,Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec];
                                                   Description=YIMMAEXP }
    { 50012;  ;Total Applied Amount;Decimal       ;Description=YIMMARM }
    { 50015;  ;Original Tax Inv. No.;Code30       ;Description=FIELD ADDED FOR CAPTURING THE ORIGINAL TAX INVOICE NO. }
    { 50016;  ;DocType             ;Text30        ;Description=YIMMYEXP }
    { 50017;  ;Bank Code           ;Code20        ;Description=YIMMRBDTL }
    { 50018;  ;Bank Account No     ;Code50        ;Description=YIMMRBDTL }
    { 50019;  ;Vend/Cust Bank Name ;Text50        ;Description=YIMMRBDTL }
    { 50020;  ;Bank Address        ;Text50        ;Description=YIMMRBDTL }
    { 50021;  ;BeniName            ;Text50        ;Description=YIMMRBDTL }
    { 50022;  ;Company Name        ;Code20        ;Description=YIMM CONSOL Customer Aging Report. }
  }
  KEYS
  {
    {    ;Entry No.,Company Name                  ;Clustered=Yes }
    {    ;Customer No.,Posting Date,Currency Code ;SumIndexFields=Sales (LCY),Profit (LCY),Inv. Discount (LCY);
                                                   SIFTLevelsToMaintain=[{Customer No.},
                                                                         {Customer No.,Posting Date:Year},
                                                                         {Customer No.,Posting Date:Month}] }
    { No ;Customer No.,Currency Code,Posting Date ;KeyGroups=Cust(Curr) }
    {    ;Document No.,Posting Date                }
    {    ;External Document No.                    }
    {    ;Customer No.,Open,Positive,Due Date,Currency Code }
    {    ;Open,Due Date                            }
    {    ;Document Type,Customer No.,Posting Date,Currency Code;
                                                   SumIndexFields=Sales (LCY),Profit (LCY),Inv. Discount (LCY);
                                                   MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
    {    ;Salesperson Code,Posting Date           ;KeyGroups=Cust(Comm) }
    {    ;Closed by Entry No.                      }
    {    ;Transaction No.                          }
    { No ;Customer No.,Open,Positive,Calculate Interest,Due Date;
                                                   KeyGroups=Cust(int) }
    { No ;Customer No.,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date,Currency Code;
                                                   SumIndexFields=Sales (LCY),Profit (LCY),Inv. Discount (LCY);
                                                   KeyGroups=Cust(Dim) }
    { No ;Customer No.,Open,Global Dimension 1 Code,Global Dimension 2 Code,Positive,Due Date,Currency Code;
                                                   KeyGroups=Cust(Dim) }
    { No ;Open,Global Dimension 1 Code,Global Dimension 2 Code,Due Date;
                                                   KeyGroups=Cust(Dim) }
    { No ;Document Type,Customer No.,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date,Currency Code;
                                                   KeyGroups=Cust(Dim) }
    {    ;Customer No.,Applies-to ID,Open,Positive,Due Date }
    {    ;Customer No.,Document Date,BAS Adjustment }
    {    ;Customer No.,Positive,Applies-to Doc. Type,Applies-to Doc. No.,Due Date }
    {    ;Document No.,Document Type,Customer No.  }
    {    ;Customer No.,Document Type,Type Of Transaction,Incentive Month }
    {    ;Customer Posting Group,Customer No.      }
    {    ;Customer No.,Type Of Transaction,Posting Date,Currency Code }
    {    ;Customer Posting Group,Customer No.,Type Of Transaction,Posting Date,Currency Code }
    {    ;Customer No.,Customer Posting Group,Company Name }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=must have the same sign as %1';
      Text001@1001 : TextConst 'ENU=must not be larger than %1';

    PROCEDURE DrillDownOnEntries@1(VAR DtldCustLedgEntry@1000 : Record 379);
    VAR
      CustLedgEntry@1001 : Record 21;
    BEGIN
      CustLedgEntry.RESET;
      DtldCustLedgEntry.COPYFILTER("Customer No.",CustLedgEntry."Customer No.");
      DtldCustLedgEntry.COPYFILTER("Currency Code",CustLedgEntry."Currency Code");
      DtldCustLedgEntry.COPYFILTER("Initial Entry Global Dim. 1",CustLedgEntry."Global Dimension 1 Code");
      DtldCustLedgEntry.COPYFILTER("Initial Entry Global Dim. 2",CustLedgEntry."Global Dimension 2 Code");
      CustLedgEntry.SETCURRENTKEY("Customer No.","Posting Date");
      CustLedgEntry.SETRANGE(Open,TRUE);
      PAGE.RUN(0,CustLedgEntry); // UPG13
    END;

    PROCEDURE DrillDownOnOverdueEntries@4(VAR DtldCustLedgEntry@1000 : Record 379);
    VAR
      CustLedgEntry@1001 : Record 21;
    BEGIN
      CustLedgEntry.RESET;
      DtldCustLedgEntry.COPYFILTER("Customer No.",CustLedgEntry."Customer No.");
      DtldCustLedgEntry.COPYFILTER("Currency Code",CustLedgEntry."Currency Code");
      DtldCustLedgEntry.COPYFILTER("Initial Entry Global Dim. 1",CustLedgEntry."Global Dimension 1 Code");
      DtldCustLedgEntry.COPYFILTER("Initial Entry Global Dim. 2",CustLedgEntry."Global Dimension 2 Code");
      CustLedgEntry.SETCURRENTKEY("Customer No.","Posting Date");
      CustLedgEntry.SETFILTER("Date Filter",'..%1',WORKDATE);
      CustLedgEntry.SETFILTER("Due Date",'..%1',WORKDATE);
      CustLedgEntry.SETFILTER("Remaining Amount",'<>%1',0);
      PAGE.RUN(0,CustLedgEntry); // UPG13
    END;

    BEGIN
    {
      //This table is designed to capture the data from all other companies : and to generate the aging report for customer.
      // UPG13
    }
    END.
  }
}

