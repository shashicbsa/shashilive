OBJECT Table 287 Customer Bank Account
{
  OBJECT-PROPERTIES
  {
    Date=12/01/15;
    Time=19:18:10;
    Modified=Yes;
    Version List=NAVW17.00,NAVAPAC7.00,UPG09R2,UPG13,UPG13R2,YIMMDEVIP1.0,UPG13R2DEV,CR001;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    DataCaptionFields=Customer No.,Code,Name;
    OnModify=BEGIN
               //YIMMDEVIP1.0 S
               "Last Modified Date" := CURRENTDATETIME;
               MODIFY;
               //YIMMDEVIP1.0 E
             END;

    OnDelete=BEGIN
               PostCodeCheck.DeleteAllAddressID(DATABASE::"Customer Bank Account",Rec.GETPOSITION);
             END;

    OnRename=BEGIN
               PostCodeCheck.MoveAllAddressID(
                 DATABASE::"Customer Bank Account",xRec.GETPOSITION,
                 DATABASE::"Customer Bank Account",Rec.GETPOSITION);
             END;

    CaptionML=[ENU=Customer Bank Account;
               ENA=Customer Bank Account];
    LookupPageID=Page424;
    DrillDownPageID=Page424;
  }
  FIELDS
  {
    { 1   ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Customer No.;
                                                              ENA=Customer No.];
                                                   NotBlank=Yes }
    { 2   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ENA=Code];
                                                   NotBlank=Yes }
    { 3   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ENA=Name] }
    { 5   ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              ENA=Name 2] }
    { 6   ;   ;Address             ;Text50        ;OnValidate=BEGIN
                                                                PostCodeCheck.ValidateAddress(
                                                                  CurrFieldNo,DATABASE::"Customer Bank Account",Rec.GETPOSITION,0,
                                                                  Name,"Name 2",Contact,Address,"Address 2",City,"Post Code",County,"Country/Region Code");
                                                              END;

                                                   CaptionML=[ENU=Address;
                                                              ENA=Address] }
    { 7   ;   ;Address 2           ;Text50        ;OnValidate=BEGIN
                                                                PostCodeCheck.ValidateAddress(
                                                                  CurrFieldNo,DATABASE::"Customer Bank Account",Rec.GETPOSITION,0,
                                                                  Name,"Name 2",Contact,Address,"Address 2",City,"Post Code",County,"Country/Region Code");
                                                              END;

                                                   CaptionML=[ENU=Address 2;
                                                              ENA=Address 2] }
    { 8   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCodeCheck.ValidateCity(
                                                                  CurrFieldNo,DATABASE::"Customer Bank Account",Rec.GETPOSITION,0,
                                                                  Name,"Name 2",Contact,Address,"Address 2",City,"Post Code",County,"Country/Region Code");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              ENA=City] }
    { 9   ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCodeCheck.ValidatePostCode(
                                                                  CurrFieldNo,DATABASE::"Customer Bank Account",Rec.GETPOSITION,0,
                                                                  Name,"Name 2",Contact,Address,"Address 2",City,"Post Code",County,"Country/Region Code");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              ENA=Post Code] }
    { 10  ;   ;Contact             ;Text50        ;CaptionML=[ENU=Contact;
                                                              ENA=Contact] }
    { 11  ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              ENA=Phone No.] }
    { 12  ;   ;Telex No.           ;Text20        ;CaptionML=[ENU=Telex No.;
                                                              ENA=Telex No.] }
    { 13  ;   ;Bank Branch No.     ;Text20        ;CaptionML=[ENU=Bank Branch No.;
                                                              ENA=Bank Branch No.] }
    { 14  ;   ;Bank Account No.    ;Text50        ;OnValidate=VAR
                                                                lenth_INT@1102159001 : Integer;
                                                                I_INT@1102159002 : Integer;
                                                                VAR1_CHAR@1102159003 : ARRAY [50] OF Char;
                                                                J_INT@1102159004 : Integer;
                                                              BEGIN
                                                                //YIMMDEVIP1.0 S
                                                                lenth_INT := STRLEN("Bank Account No.");
                                                                FOR I_INT := 1 TO lenth_INT DO
                                                                  BEGIN
                                                                    EVALUATE(VAR1_CHAR[I_INT],COPYSTR("Bank Account No.",I_INT,1));
                                                                    EVALUATE(J_INT,FORMAT(VAR1_CHAR[I_INT],0,'<Number>'));
                                                                   IF J_INT IN[32..47] THEN
                                                                      ERROR('You have entered wrong character at position %1', I_INT);
                                                                   IF J_INT IN[58..64] THEN
                                                                      ERROR('You have entered wrong character at position %1', I_INT);
                                                                   IF J_INT IN[91..96] THEN
                                                                      ERROR('You have entered wrong character at position %1', I_INT);
                                                                   IF J_INT IN[123..127] THEN
                                                                      ERROR('You have entered wrong character at position %1', I_INT);
                                                                  END;
                                                                //YIMMDEVIP1.0 E
                                                              END;

                                                   CaptionML=[ENU=Bank Account No.;
                                                              ENA=Bank Account No.];
                                                   Description=YIMM BANk Acc No }
    { 15  ;   ;Transit No.         ;Text20        ;CaptionML=[ENU=Transit No.;
                                                              ENA=Transit No.] }
    { 16  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              ENA=Currency Code] }
    { 17  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              ENA=Country/Region Code] }
    { 18  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              ENA=State] }
    { 19  ;   ;Fax No.             ;Text30        ;CaptionML=[ENU=Fax No.;
                                                              ENA=Fax No.] }
    { 20  ;   ;Telex Answer Back   ;Text20        ;CaptionML=[ENU=Telex Answer Back;
                                                              ENA=Telex Answer Back] }
    { 21  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              ENA=Language Code] }
    { 22  ;   ;E-Mail              ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=E-Mail;
                                                              ENA=E-Mail] }
    { 23  ;   ;Home Page           ;Text80        ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Home Page;
                                                              ENA=Home Page] }
    { 24  ;   ;IBAN                ;Code50        ;OnValidate=VAR
                                                                CompanyInfo@1000 : Record 79;
                                                              BEGIN
                                                                CompanyInfo.CheckIBAN(IBAN);
                                                              END;

                                                   CaptionML=[ENU=IBAN;
                                                              ENA=IBAN] }
    { 25  ;   ;SWIFT Code          ;Code20        ;CaptionML=[ENU=SWIFT Code;
                                                              ENA=SWIFT Code] }
    { 50000;  ;Default Account     ;Boolean       ;Description=YIMM }
    { 52000;  ;Last Modified Date  ;DateTime      ;Description=YIMMDEVIP1.0 }
    { 52001;  ;Valid Upto          ;Date          ;Description=YIMMDEVIP1.0 }
    { 52002;  ;Category            ;Option        ;OptionCaptionML=ENU=" ,Tools,Activity Unit,KSG,Etc.";
                                                   OptionString=[ ,Tools,Activity Unit,KSG,Etc.];
                                                   Description=YIMMDEVIP1.0 }
    { 52003;  ;Type Of Transaction ;Option        ;OptionCaptionML=ENU=" ,Selling In,Selling Out,Direct,Indirect,Adm.MKT,Free Service,Claim,Promotion,Sharing,Import,FA,Others,Imacs,Propac,Gport,TMS,Other YMKI,Propac Ex.,Intrst_Deposit,Imacs-ATV,Imacs-Generator,Imacs-CBU";
                                                   OptionString=[ ,Selling In,Selling Out,Direct,Indirect,Adm.MKT,Free Service,Claim,Promotion,Sharing,Import,FA,Others,Imacs,Propac,Gport,TMS,Other YMKI,Propac Ex.,Intrst_Deposit,Imacs-ATV,Imacs-Generator,Imacs-CBU];
                                                   Description=YIMMDEVIP1.0 }
    { 52004;  ;M/C                 ;Boolean       ;Description=Bank code validation }
    { 52005;  ;S/P                 ;Boolean       ;Description=Bank code validation }
    { 52006;  ;Service             ;Boolean       ;Description=Bank code validation }
    { 52007;  ;Purchase            ;Boolean       ;Description=Bank code validation }
    { 52008;  ;Resident            ;Option        ;OptionCaptionML=ENU=" ,Resident,Non-Resident";
                                                   OptionString=[ ,Resident,Non-Resident];
                                                   Description=CR001 }
    { 52009;  ;Citizenship/Beneficiary Type;Option;OptionCaptionML=ENU=" ,Individual / Indonesia,Corporate / Indonesia,Government / Indonesia,Individual / Foreigner,Corporate / Foreigner,Government / Foreigner";
                                                   OptionString=[ ,Individual / Indonesia,Corporate / Indonesia,Government / Indonesia,Individual / Foreigner,Corporate / Foreigner,Government / Foreigner];
                                                   Description=CR001 }
  }
  KEYS
  {
    {    ;Customer No.,Code                       ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Customer No.,Code,Name,Currency Code,Address,Bank Account No.,Contact,Valid Upto,M/C,S/P,Service,Purchase,Category }
  }
  CODE
  {
    VAR
      PostCode@1000 : Record 225;
      PostCodeCheck@1500000 : Codeunit 28000;

    BEGIN
    {
      //UPG09R2
      5.0 to 2009 R2 Merged Code in objects identification.
      //UPG13
      2009R2 to 2013 Merged Code.
      //UPG13R2
      2013 to 2013R2 Merged Code.
      //YIMMDEVIP1.0
      Point No - 6 Added Two New fields Last Modified Date & Valid Upto and added code to update Last Modified field.
      Point No - 15 Added Code to Validate "Bank account No." So that user can only enter Numerical Values or Alphabetic Values.
      Point No - 7 Added new Field Name Category.
      Point No - 22 Added New field Type of Transaction Copied field from sales header type of transaction.---Not Required

      ////UPG13R2DEV  SV Bank code new validation
      New Requirement
      Fields add
      Field No.  Field Name           Data Type        Description
      52004       M/C                 Boolean          Bankcode validation
      52005       S/P                 Boolean          Bankcode validation
      52006       Service             Boolean          Bankcode validation
      52007       Purchase            Boolean          Bankcode validation

      [Ver.] : CR001
      [SIGN] : SV
      [desc] : Resident and citizenship/beneficiary type added in the report preview and excel based on the combinations.
                Field No.   Field Name
                52008       Resident
                52009       Citizenship/Beneficiary Type
    }
    END.
  }
}

