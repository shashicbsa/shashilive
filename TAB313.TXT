OBJECT Table 313 Inventory Setup
{
  OBJECT-PROPERTIES
  {
    Date=09/23/13;
    Time=12:00:00;
    Version List=NAVW17.10;
  }
  PROPERTIES
  {
    Permissions=TableData 5896=m;
    CaptionML=[ENU=Inventory Setup;
               ENA=Inventory Setup];
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              ENA=Primary Key] }
    { 2   ;   ;Automatic Cost Posting;Boolean     ;OnValidate=VAR
                                                                GLSetup@1000 : Record 98;
                                                              BEGIN
                                                                IF "Automatic Cost Posting" THEN BEGIN
                                                                  IF GLSetup.GET THEN
                                                                    IF NOT GLSetup."Use Legacy G/L Entry Locking" THEN
                                                                      MESSAGE(Text006,
                                                                        FIELDCAPTION("Automatic Cost Posting"),
                                                                        "Automatic Cost Posting",
                                                                        GLSetup.FIELDCAPTION("Use Legacy G/L Entry Locking"),
                                                                        GLSetup.TABLECAPTION,
                                                                        GLSetup."Use Legacy G/L Entry Locking");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Automatic Cost Posting;
                                                              ENA=Automatic Cost Posting] }
    { 3   ;   ;Location Mandatory  ;Boolean       ;CaptionML=[ENU=Location Mandatory;
                                                              ENA=Location Mandatory] }
    { 4   ;   ;Item Nos.           ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Item Nos.;
                                                              ENA=Item Nos.] }
    { 30  ;   ;Automatic Cost Adjustment;Option   ;OnValidate=BEGIN
                                                                IF "Automatic Cost Adjustment" <> "Automatic Cost Adjustment"::Never THEN BEGIN
                                                                  Item.SETCURRENTKEY("Cost is Adjusted","Allow Online Adjustment");
                                                                  Item.SETRANGE("Cost is Adjusted",FALSE);
                                                                  Item.SETRANGE("Allow Online Adjustment",FALSE);

                                                                  UpdateInvtAdjmtEntryOrder;

                                                                  InvtAdjmtEntryOrder.SETCURRENTKEY("Cost is Adjusted","Allow Online Adjustment");
                                                                  InvtAdjmtEntryOrder.SETRANGE("Cost is Adjusted",FALSE);
                                                                  InvtAdjmtEntryOrder.SETRANGE("Allow Online Adjustment",FALSE);
                                                                  InvtAdjmtEntryOrder.SETRANGE("Is Finished",TRUE);

                                                                  IF NOT (Item.ISEMPTY AND InvtAdjmtEntryOrder.ISEMPTY) THEN
                                                                    MESSAGE(Text000);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Automatic Cost Adjustment;
                                                              ENA=Automatic Cost Adjustment];
                                                   OptionCaptionML=[ENU=Never,Day,Week,Month,Quarter,Year,Always;
                                                                    ENA=Never,Day,Week,Month,Quarter,Year,Always];
                                                   OptionString=Never,Day,Week,Month,Quarter,Year,Always }
    { 40  ;   ;Prevent Negative Inventory;Boolean ;CaptionML=[ENU=Prevent Negative Inventory;
                                                              ENA=Prevent Negative Inventory] }
    { 5700;   ;Transfer Order Nos. ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Transfer Order Nos.;
                                                              ENA=Transfer Order Nos.] }
    { 5701;   ;Posted Transfer Shpt. Nos.;Code10  ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Posted Transfer Shpt. Nos.;
                                                              ENA=Posted Transfer Shpt. Nos.] }
    { 5702;   ;Posted Transfer Rcpt. Nos.;Code10  ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Posted Transfer Rcpt. Nos.;
                                                              ENA=Posted Transfer Rcpt. Nos.] }
    { 5703;   ;Copy Comments Order to Shpt.;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=[ENU=Copy Comments Order to Shpt.;
                                                              ENA=Copy Comments Order to Shpt.] }
    { 5704;   ;Copy Comments Order to Rcpt.;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=[ENU=Copy Comments Order to Rcpt.;
                                                              ENA=Copy Comments Order to Rcpt.] }
    { 5718;   ;Nonstock Item Nos.  ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Nonstock Item Nos.;
                                                              ENA=Nonstock Item Nos.] }
    { 5790;   ;Outbound Whse. Handling Time;DateFormula;
                                                   CaptionML=[ENU=Outbound Whse. Handling Time;
                                                              ENA=Outbound Whse. Handling Time] }
    { 5791;   ;Inbound Whse. Handling Time;DateFormula;
                                                   CaptionML=[ENU=Inbound Whse. Handling Time;
                                                              ENA=Inbound Whse. Handling Time] }
    { 5800;   ;Expected Cost Posting to G/L;Boolean;
                                                   OnValidate=VAR
                                                                ChangeExpCostPostToGL@1000 : Codeunit 5811;
                                                              BEGIN
                                                                IF "Expected Cost Posting to G/L" <> xRec."Expected Cost Posting to G/L" THEN BEGIN
                                                                  IF ItemLedgEntry.FINDFIRST THEN BEGIN
                                                                    ChangeExpCostPostToGL.ChangeExpCostPostingToGL(Rec,"Expected Cost Posting to G/L");
                                                                    FIND;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Expected Cost Posting to G/L;
                                                              ENA=Expected Cost Posting to G/L] }
    { 5804;   ;Average Cost Calc. Type;Option     ;InitValue=Item;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Average Cost Calc. Type");
                                                                IF "Average Cost Calc. Type" <> xRec."Average Cost Calc. Type" THEN
                                                                  UpdateAvgCostItemSettings(FIELDCAPTION("Average Cost Calc. Type"),FORMAT("Average Cost Calc. Type"));
                                                              END;

                                                   CaptionML=[ENU=Average Cost Calc. Type;
                                                              ENA=Average Cost Calc. Type];
                                                   OptionCaptionML=[ENU=" ,Item,Item & Location & Variant";
                                                                    ENA=" ,Item,Item & Location & Variant"];
                                                   OptionString=[ ,Item,Item & Location & Variant];
                                                   NotBlank=Yes }
    { 5805;   ;Average Cost Period ;Option        ;InitValue=Day;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Average Cost Period");
                                                                IF "Average Cost Period" <> xRec."Average Cost Period" THEN
                                                                  UpdateAvgCostItemSettings(FIELDCAPTION("Average Cost Period"),FORMAT("Average Cost Period"));
                                                              END;

                                                   CaptionML=[ENU=Average Cost Period;
                                                              ENA=Average Cost Period];
                                                   OptionCaptionML=[ENU=" ,Day,Week,Month,Quarter,Year,Accounting Period";
                                                                    ENA=" ,Day,Week,Month,Quarter,Year,Accounting Period"];
                                                   OptionString=[ ,Day,Week,Month,Quarter,Year,Accounting Period];
                                                   NotBlank=Yes }
    { 7101;   ;Item Group Dimension Code;Code20   ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Item Group Dimension Code;
                                                              ENA=Item Group Dimension Code] }
    { 7300;   ;Inventory Put-away Nos.;Code10     ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Inventory Put-away Nos.;
                                                              ENA=Inventory Put-away Nos.] }
    { 7301;   ;Inventory Pick Nos. ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Inventory Pick Nos.;
                                                              ENA=Inventory Pick Nos.] }
    { 7302;   ;Posted Invt. Put-away Nos.;Code10  ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Posted Invt. Put-away Nos.;
                                                              ENA=Posted Invt. Put-away Nos.] }
    { 7303;   ;Posted Invt. Pick Nos.;Code10      ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Posted Invt. Pick Nos.;
                                                              ENA=Posted Invt. Pick Nos.] }
    { 7304;   ;Inventory Movement Nos.;Code10     ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Inventory Movement Nos.;
                                                              ENA=Inventory Movement Nos.] }
    { 7305;   ;Registered Invt. Movement Nos.;Code10;
                                                   TableRelation="No. Series";
                                                   CaptionML=[ENU=Registered Invt. Movement Nos.;
                                                              ENA=Registered Invt. Movement Nos.] }
    { 7306;   ;Internal Movement Nos.;Code10      ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Internal Movement Nos.;
                                                              ENA=Internal Movement Nos.] }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ItemLedgEntry@1000 : Record 32;
      Text000@1001 : TextConst 'ENU=Some unadjusted value entries will not be covered with the new setting. You must run the Adjust Cost - Item Entries batch job once to adjust these.;ENA=Some unadjusted value entries will not be covered with the new setting. You must run the Adjust Cost - Item Entries batch job once to adjust these.';
      Item@1002 : Record 27;
      InvtAdjmtEntryOrder@1003 : Record 5896;
      Text001@1005 : TextConst 'ENU=If you change the %1, the program must adjust all item entries.;ENA=If you change the %1, the program must adjust all item entries.';
      Text002@1006 : TextConst 'ENU=The adjustment of all entries can take several hours.\;ENA=The adjustment of all entries can take several hours.\';
      Text003@1007 : TextConst 'ENU=Do you really want to change the %1?;ENA=Do you really want to change the %1?';
      Text004@1008 : TextConst 'ENU=The program has cancelled the change that would have caused an adjustment of all items.;ENA=The program has cancelled the change that would have caused an adjustment of all items.';
      Text005@1009 : TextConst 'ENU=%1 has been changed to %2. You should now run %3.;ENA=%1 has been changed to %2. You should now run %3.';
      ObjTransl@1011 : Record 377;
      Text006@1004 : TextConst 'ENU=The field %1 should not be set to %2 if field %3 in %4 table is set to %5 because of possibility of deadlocks.;ENA=The field %1 should not be set to %2 if field %3 in %4 table is set to %5 because of possibility of deadlocks.';

    LOCAL PROCEDURE UpdateInvtAdjmtEntryOrder@2();
    VAR
      InvtAdjmtEntryOrder@1000 : Record 5896;
    BEGIN
      InvtAdjmtEntryOrder.SETCURRENTKEY("Cost is Adjusted","Allow Online Adjustment");
      InvtAdjmtEntryOrder.SETRANGE("Cost is Adjusted",FALSE);
      InvtAdjmtEntryOrder.SETRANGE("Allow Online Adjustment",FALSE);
      InvtAdjmtEntryOrder.SETRANGE("Is Finished",FALSE);
      InvtAdjmtEntryOrder.SETRANGE("Order Type",InvtAdjmtEntryOrder."Order Type"::Production);
      InvtAdjmtEntryOrder.MODIFYALL("Allow Online Adjustment",TRUE);
    END;

    PROCEDURE UpdateAvgCostItemSettings@1(FieldCaption@1000 : Text[80];FieldValue@1001 : Text[80]);
    BEGIN
      IF NOT
         CONFIRM(
           STRSUBSTNO(
             Text001 +
             Text002 +
             Text003,FieldCaption),FALSE)
      THEN
        ERROR(Text004);

      CODEUNIT.RUN(CODEUNIT::"Change Average Cost Setting",Rec);

      MESSAGE(
        Text005,FieldCaption,FieldValue,
        ObjTransl.TranslateObject(ObjTransl."Object Type"::Report,REPORT::"Adjust Cost - Item Entries"));
    END;

    BEGIN
    END.
  }
}

