OBJECT Report 60066 Import Gen from Excel-2
{
  OBJECT-PROPERTIES
  {
    Date=12/26/14;
    Time=16:00:54;
    Modified=Yes;
    Version List=YIMMDEVIP1.0;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import Gen from Excel-2;
               ENA=Import Gen from Excel];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  BusUnit@1000 : Record 220;
                BEGIN
                  ExcelBuf.LOCKTABLE;

                  GLSetup.GET;
                  GlobalDim1Code := GLSetup."Global Dimension 1 Code";
                  GlobalDim2Code := GLSetup."Global Dimension 2 Code";

                  ExcelBuf.OpenBook(ServerFileName,SheetName);
                  ExcelBuf.ReadSheet;
                  Bool := TRUE;
                  AnalyzeData2;
                END;

    OnPostReport=BEGIN
                   ExcelBuf.DELETEALL;
                 END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   Description := Text005 + FORMAT(WORKDATE);
                 END;

      OnQueryClosePage=VAR
                         FileMgt@1001 : Codeunit 419;
                       BEGIN
                         IF CloseAction = ACTION::OK THEN BEGIN
                           ServerFileName := FileMgt.UploadFile(Text006,ExcelFileExtensionTok);
                           IF ServerFileName = '' THEN
                             EXIT(FALSE);

                           SheetName := ExcelBuf.SelectSheetsName(ServerFileName);
                           IF SheetName = '' THEN
                             EXIT(FALSE);
                         END;
                       END;

    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You must specify a budget name to import to.;ENA=You must specify a budget name to import to.';
      Text001@1001 : TextConst 'ENU=Do you want to create a %1 with the name %2?;ENA=Do you want to create a %1 with the name %2?';
      Text002@1002 : TextConst 'ENU=%1 %2 is blocked. You cannot import entries.;ENA=%1 %2 is blocked. You cannot import entries.';
      Text003@1003 : TextConst 'ENU=Are you sure that you want to %1 for the budget name %2?;ENA=Are you sure that you want to %1 for the budget name %2?';
      Text004@1004 : TextConst 'ENU=%1 table has been successfully updated with %2 entries.;ENA=%1 table has been successfully updated with %2 entries.';
      Text005@1005 : TextConst 'ENU="Imported from Excel ";ENA="Imported from Excel "';
      Text006@1006 : TextConst 'ENU=Import Excel File;ENA=Import Excel File';
      Text007@1007 : TextConst 'ENU=Analyzing Data...\\;ENA=Analysing Data...\\';
      Text008@1008 : TextConst 'ENU=You cannot specify more than 8 dimensions in your Excel worksheet.;ENA=You cannot specify more than 8 dimensions in your Excel worksheet.';
      Text009@1009 : TextConst 'ENU=G/L ACCOUNT NO;ENA=G/L ACCOUNT NO';
      Text010@1010 : TextConst 'ENU=G/L Account No.;ENA=G/L Account No.';
      Text011@1011 : TextConst 'ENU=The text G/L Account No. can only be specified once in the Excel worksheet.;ENA=The text G/L Account No. can only be specified once in the Excel worksheet.';
      Text012@1012 : TextConst 'ENU=The dimensions specified by worksheet must be placed in the lines before the table.;ENA=The dimensions specified by worksheet must be placed in the lines before the table.';
      Text013@1013 : TextConst 'ENU="Dimension ";ENA="Dimension "';
      Text014@1014 : TextConst 'ENU=Date;ENA=Date';
      Text015@1015 : TextConst 'ENU=Dimension 1;ENA=Dimension 1';
      Text016@1016 : TextConst 'ENU=Dimension 2;ENA=Dimension 2';
      Text017@1017 : TextConst 'ENU=Dimension 3;ENA=Dimension 3';
      Text018@1018 : TextConst 'ENU=Dimension 4;ENA=Dimension 4';
      Text019@1019 : TextConst 'ENU=Dimension 5;ENA=Dimension 5';
      Text020@1020 : TextConst 'ENU=Dimension 6;ENA=Dimension 6';
      Text021@1021 : TextConst 'ENU=Dimension 7;ENA=Dimension 7';
      Text022@1022 : TextConst 'ENU=Dimension 8;ENA=Dimension 8';
      Text023@1023 : TextConst 'ENU=You cannot import the same information twice.\;ENA=You cannot import the same information twice.\';
      Text024@1024 : TextConst 'ENU=The combination G/L Account No. - Dimensions - Date must be unique.;ENA=The combination G/L Account No. - Dimensions - Date must be unique.';
      Text025@1025 : TextConst 'ENU=G/L Accounts have not been found in the Excel worksheet.;ENA=G/L Accounts have not been found in the Excel worksheet.';
      Text026@1026 : TextConst 'ENU=Dates have not been recognized in the Excel worksheet.;ENA=Dates have not been recognised in the Excel worksheet.';
      ExcelBuf@1027 : Record 370;
      Dim@1028 : Record 348;
      TempDim@1030 : TEMPORARY Record 348;
      GLBudgetEntry@1032 : Record 96;
      TempDimSetEntry@1029 : TEMPORARY Record 480;
      GLSetup@1034 : Record 98;
      GLAcc@1035 : Record 15;
      TempGLAcc@1036 : TEMPORARY Record 15;
      GLBudgetName@1048 : Record 95;
      GLBudgetEntry3@1049 : Record 96;
      AnalysisView@1057 : Record 363;
      DimMgt@1061 : Codeunit 408;
      ServerFileName@1033 : Text;
      SheetName@1038 : Text[250];
      ToGLBudgetName@1039 : Code[10];
      DimCode@1040 : ARRAY [8] OF Code[20];
      EntryNo@1041 : Integer;
      LastEntryNoBeforeImport@1058 : Integer;
      GlobalDim1Code@1042 : Code[20];
      GlobalDim2Code@1043 : Code[20];
      TotalRecNo@1044 : Integer;
      RecNo@1045 : Integer;
      Window@1046 : Dialog;
      Description@1047 : Text[50];
      BusUnitDimCode@1031 : Code[20];
      BudgetDim1Code@1050 : Code[20];
      BudgetDim2Code@1051 : Code[20];
      BudgetDim3Code@1052 : Code[20];
      BudgetDim4Code@1053 : Code[20];
      ImportOption@1054 : 'Replace entries,Add entries';
      Text027@1055 : TextConst 'ENU=Replace entries,Add entries;ENA=Replace entries,Add entries';
      Text028@1056 : TextConst 'ENU=A filter has been used on the %1 when the budget was exported. When a filter on a dimension has been used, a column with the same dimension must be present in the worksheet imported. The column in the worksheet must specify the dimension value codes the program should use when importing the budget.;ENA=A filter has been used on the %1 when the budget was exported. When a filter on a dimension has been used, a column with the same dimension must be present in the worksheet imported. The column in the worksheet must specify the dimension value codes the program should use when importing the budget.';
      ExcelFileExtensionTok@1037 : TextConst '@@@={Locked};ENU=.xlsx;ENA=.xlsx';
      TextUP001@1102159001 : TextConst 'ENU=Template';
      TextUP002@1102159002 : TextConst 'ENU=Batch';
      TextUP003@1102159003 : TextConst 'ENU=Line';
      TextUP004@1102159004 : TextConst 'ENU=Description';
      Bool@1102159005 : Boolean;
      NoSeriesMgt@1102159006 : Codeunit 396;
      NoSeriesLoc@1102159007 : Code[20];

    LOCAL PROCEDURE FormatData@8(TextToFormat@1000 : Text[250]) : Text[250];
    VAR
      FormatInteger@1001 : Integer;
      FormatDecimal@1002 : Decimal;
      FormatDate@1003 : Date;
    BEGIN
      CASE TRUE OF
        EVALUATE(FormatInteger,TextToFormat):
          EXIT(FORMAT(FormatInteger));
        EVALUATE(FormatDecimal,TextToFormat):
          EXIT(FORMAT(FormatDecimal));
        EVALUATE(FormatDate,TextToFormat):
          EXIT(FORMAT(FormatDate));
        ELSE
          EXIT(TextToFormat);
      END;
    END;

    LOCAL PROCEDURE AnalyzeData2@1102159005();
    VAR
      TempExcelBuf@1000 : Record 370;
      BudgetBuf@1001 : Record 371;
      TempBudgetBuf@1002 : TEMPORARY Record 371;
      HeaderRowNo@1003 : Integer;
      CountDim@1004 : Integer;
      TestDateTime@1005 : DateTime;
      OldRowNo@1006 : Integer;
      DimRowNo@1007 : Integer;
      DimCode3@1008 : Code[20];
      GenJnlLine@1102159001 : Record 81;
      GenJnlLineLoc@1102159002 : Record 81;
      LineNo@1102159004 : Integer;
      GenJournalBatch@1102159003 : Record 232;
      NoSeries@1102159005 : Record 308;
      NoSeriesLine@1102159006 : Record 309;
      DocNo@1102159007 : Code[20];
    BEGIN
      Window.OPEN(
        Text007 +
        '@1@@@@@@@@@@@@@@@@@@@@@@@@@\');
      Window.UPDATE(1,0);
      TotalRecNo := ExcelBuf.COUNT;
      RecNo := 0;
        ExcelBuf.RESET;

       HeaderRowNo := 0;
      IF ExcelBuf.FIND('-') THEN BEGIN

        REPEAT

      IF (HeaderRowNo = 0) OR (HeaderRowNo <> ExcelBuf."Row No.") THEN BEGIN
          GenJnlLine.INIT;

          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));

          TempExcelBuf.RESET;
          TempExcelBuf.SETRANGE("Row No.",ExcelBuf."Row No.");
          IF TempExcelBuf.FINDSET THEN

          REPEAT

              IF TempExcelBuf."Column No." = 1 THEN BEGIN
                GenJnlLine."Journal Template Name" := TempExcelBuf."Cell Value as Text";
                GenJnlLine.VALIDATE( "Journal Template Name");
                END;

              IF TempExcelBuf."Column No." = 2 THEN BEGIN
                GenJnlLine."Journal Batch Name":=  TempExcelBuf."Cell Value as Text";
                GenJnlLine.VALIDATE( "Journal Batch Name");
                END;

              IF TempExcelBuf."Column No." = 3 THEN BEGIN
                EVALUATE(GenJnlLine."Account Type",TempExcelBuf."Cell Value as Text");
                GenJnlLine.VALIDATE( "Account Type");
                END;
              IF TempExcelBuf."Column No." = 4 THEN BEGIN
                EVALUATE(GenJnlLine."Account No.", TempExcelBuf."Cell Value as Text");
                GenJnlLine.VALIDATE( "Account No.");
                END;
              IF TempExcelBuf."Column No." = 5 THEN BEGIN
                EVALUATE(GenJnlLine."Posting Date", TempExcelBuf."Cell Value as Text");
                GenJnlLine.VALIDATE( "Posting Date");
                END;
              IF TempExcelBuf."Column No." = 6 THEN BEGIN
                EVALUATE(GenJnlLine."Document Type",TempExcelBuf."Cell Value as Text");
                GenJnlLine.VALIDATE( "Document Type");
                END;
              IF TempExcelBuf."Column No." = 7 THEN BEGIN
                GenJnlLine.Description:=  TempExcelBuf."Cell Value as Text";
                GenJnlLine.VALIDATE( Description);
                END;
              IF TempExcelBuf."Column No." = 8 THEN BEGIN
                 EVALUATE(GenJnlLine."Bal. Account Type",TempExcelBuf."Cell Value as Text");
                GenJnlLine.VALIDATE( "Bal. Account Type" );
                END;

              IF TempExcelBuf."Column No." = 9 THEN BEGIN
                 GenJnlLine."Bal. Account No." :=  TempExcelBuf."Cell Value as Text";
                GenJnlLine.VALIDATE( "Bal. Account No." );
                END;
              IF TempExcelBuf."Column No." = 10 THEN BEGIN
                GenJnlLine."Currency Code":=  TempExcelBuf."Cell Value as Text";
                GenJnlLine.VALIDATE( "Currency Code");
                END;
              IF TempExcelBuf."Column No." = 11 THEN BEGIN
                EVALUATE(GenJnlLine.Amount, TempExcelBuf."Cell Value as Text");
                GenJnlLine.VALIDATE(Amount);
                END;
              IF TempExcelBuf."Column No." = 12 THEN BEGIN
                GenJnlLine."Shortcut Dimension 1 Code":=  TempExcelBuf."Cell Value as Text";
                GenJnlLine.VALIDATE( "Shortcut Dimension 1 Code");
                END;
              IF TempExcelBuf."Column No." = 13 THEN BEGIN
                GenJnlLine."Shortcut Dimension 2 Code":=  TempExcelBuf."Cell Value as Text";
                GenJnlLine.VALIDATE( "Shortcut Dimension 2 Code");
                END;
              IF TempExcelBuf."Column No." = 14 THEN BEGIN
                EVALUATE(GenJnlLine."Applies-to Doc. Type",TempExcelBuf."Cell Value as Text");
                GenJnlLine.VALIDATE( "Applies-to Doc. Type");
                END;

              IF TempExcelBuf."Column No." = 15 THEN BEGIN
                GenJnlLine."Applies-to Doc. No.":=  TempExcelBuf."Cell Value as Text";
                GenJnlLine.VALIDATE( "Applies-to Doc. No.");
                END;
              IF TempExcelBuf."Column No." = 16 THEN BEGIN
                EVALUATE(GenJnlLine.  "Due Date",  TempExcelBuf."Cell Value as Text");
                GenJnlLine.VALIDATE( "Due Date");
                END;
              IF TempExcelBuf."Column No." = 17 THEN BEGIN
                GenJnlLine."Payment Terms Code":=  TempExcelBuf."Cell Value as Text";
                GenJnlLine.VALIDATE( "Payment Terms Code");
                END;
              IF TempExcelBuf."Column No." = 18 THEN BEGIN
                GenJnlLine."Applies-to ID":=  TempExcelBuf."Cell Value as Text";
                GenJnlLine.VALIDATE( "Applies-to ID");
                END;
          UNTIL TempExcelBuf.NEXT =0;

          IF Bool THEN BEGIN
            GenJnlLineLoc.RESET;
            GenJnlLineLoc.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
            GenJnlLineLoc.SETRANGE("Journal Batch Name",GenJnlLine."Journal Batch Name");
            IF GenJnlLineLoc.FINDLAST THEN
              LineNo := GenJnlLineLoc."Line No." + 10000
            ELSE
              LineNo := 10000;

            Bool := FALSE;
          END ELSE BEGIN
            LineNo := LineNo + 1000;
          END;

            GenJnlLine."Line No." := LineNo;

            GenJournalBatch.RESET;
            GenJournalBatch.SETRANGE("Journal Template Name",GenJnlLine."Journal Template Name");
            GenJournalBatch.SETRANGE(GenJournalBatch.Name,GenJnlLine."Journal Batch Name");
            IF GenJournalBatch.FINDFIRST THEN
              IF NoSeries.GET(GenJournalBatch."No. Series") THEN BEGIN
                NoSeriesMgt.InitSeries(GenJournalBatch."No. Series",'',GenJnlLine."Posting Date",GenJnlLine."Document No.",NoSeriesLoc);
              END;

         GenJnlLine.INSERT(TRUE);
         END;

        HeaderRowNo := ExcelBuf."Row No.";
        UNTIL ExcelBuf.NEXT = 0;
      END;

      Window.CLOSE;
      TempExcelBuf.RESET;
    END;

    BEGIN
    {
      //YIMMDEVIP1.0
      Point 26- Import Gen Journal Data from Excel into Navision.
    }
    END.
  }
  RDLDATA
  {
  }
}

