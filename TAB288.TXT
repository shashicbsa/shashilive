OBJECT Table 288 Vendor Bank Account
{
  OBJECT-PROPERTIES
  {
    Date=09/07/12;
    Time=12:00:00;
    Version List=NAVW17.00,NAVAPAC7.00,UPG09R2,UPG13,UPG13R2;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    DataCaptionFields=Vendor No.,Code,Name;
    OnDelete=BEGIN
               PostCodeCheck.DeleteAllAddressID(DATABASE::"Vendor Bank Account",Rec.GETPOSITION);
             END;

    OnRename=BEGIN
               PostCodeCheck.MoveAllAddressID(
                 DATABASE::"Vendor Bank Account",xRec.GETPOSITION,
                 DATABASE::"Vendor Bank Account",Rec.GETPOSITION);
             END;

    CaptionML=[ENU=Vendor Bank Account;
               ENA=Vendor Bank Account];
    LookupPageID=Page426;
    DrillDownPageID=Page426;
  }
  FIELDS
  {
    { 1   ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Vendor No.;
                                                              ENA=Vendor No.];
                                                   NotBlank=Yes }
    { 2   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ENA=Code];
                                                   NotBlank=Yes }
    { 3   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ENA=Name] }
    { 5   ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              ENA=Name 2] }
    { 6   ;   ;Address             ;Text50        ;OnValidate=BEGIN
                                                                PostCodeCheck.ValidateAddress(
                                                                  CurrFieldNo,DATABASE::"Vendor Bank Account",Rec.GETPOSITION,0,
                                                                  Name,"Name 2",Contact,Address,"Address 2",City,"Post Code",County,"Country/Region Code");
                                                              END;

                                                   CaptionML=[ENU=Address;
                                                              ENA=Address] }
    { 7   ;   ;Address 2           ;Text50        ;OnValidate=BEGIN
                                                                PostCodeCheck.ValidateAddress(
                                                                  CurrFieldNo,DATABASE::"Vendor Bank Account",Rec.GETPOSITION,0,
                                                                  Name,"Name 2",Contact,Address,"Address 2",City,"Post Code",County,"Country/Region Code");
                                                              END;

                                                   CaptionML=[ENU=Address 2;
                                                              ENA=Address 2] }
    { 8   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCodeCheck.ValidateCity(
                                                                  CurrFieldNo,DATABASE::"Vendor Bank Account",Rec.GETPOSITION,0,
                                                                  Name,"Name 2",Contact,Address,"Address 2",City,"Post Code",County,"Country/Region Code");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              ENA=City] }
    { 9   ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCodeCheck.ValidatePostCode(
                                                                  CurrFieldNo,DATABASE::"Vendor Bank Account",Rec.GETPOSITION,0,
                                                                  Name,"Name 2",Contact,Address,"Address 2",City,"Post Code",County,"Country/Region Code");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              ENA=Post Code] }
    { 10  ;   ;Contact             ;Text50        ;CaptionML=[ENU=Contact;
                                                              ENA=Contact] }
    { 11  ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              ENA=Phone No.] }
    { 12  ;   ;Telex No.           ;Text20        ;CaptionML=[ENU=Telex No.;
                                                              ENA=Telex No.] }
    { 13  ;   ;Bank Branch No.     ;Text20        ;CaptionML=[ENU=Bank Branch No.;
                                                              ENA=Bank Branch No.] }
    { 14  ;   ;Bank Account No.    ;Text50        ;CaptionML=[ENU=Bank Account No.;
                                                              ENA=Bank Account No.];
                                                   Description=YIMM BANk Acc No }
    { 15  ;   ;Transit No.         ;Text20        ;CaptionML=[ENU=Transit No.;
                                                              ENA=Transit No.] }
    { 16  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              ENA=Currency Code] }
    { 17  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              ENA=Country/Region Code] }
    { 18  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              ENA=State] }
    { 19  ;   ;Fax No.             ;Text30        ;CaptionML=[ENU=Fax No.;
                                                              ENA=Fax No.] }
    { 20  ;   ;Telex Answer Back   ;Text20        ;CaptionML=[ENU=Telex Answer Back;
                                                              ENA=Telex Answer Back] }
    { 21  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              ENA=Language Code] }
    { 22  ;   ;E-Mail              ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=E-Mail;
                                                              ENA=E-Mail] }
    { 23  ;   ;Home Page           ;Text80        ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Home Page;
                                                              ENA=Home Page] }
    { 24  ;   ;IBAN                ;Code50        ;OnValidate=VAR
                                                                CompanyInfo@1000 : Record 79;
                                                              BEGIN
                                                                CompanyInfo.CheckIBAN(IBAN);
                                                              END;

                                                   CaptionML=[ENU=IBAN;
                                                              ENA=IBAN] }
    { 25  ;   ;SWIFT Code          ;Code20        ;CaptionML=[ENU=SWIFT Code;
                                                              ENA=SWIFT Code] }
    { 11600;  ;EFT BSB No.         ;Code10        ;CaptionML=[ENU=EFT BSB No.;
                                                              ENA=EFT BSB No.] }
  }
  KEYS
  {
    {    ;Vendor No.,Code                         ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PostCode@1000 : Record 225;
      PostCodeCheck@1500000 : Codeunit 28000;

    BEGIN
    {
      //UPG09R2
      5.0 to 2009 R2 Merged Code in objects identification.
      //UPG13
      2009R2 to 2013 Merged Code.
      //UPG13R2
      2013 to 2013R2 Merged Code.
    }
    END.
  }
}

