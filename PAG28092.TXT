OBJECT Page 28092 Post Dated Checks-Purchases
{
  OBJECT-PROPERTIES
  {
    Date=09/23/13;
    Time=12:00:00;
    Version List=NAVAPAC7.10;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Post Dated Checks-Purchases;
               ENA=Post Dated Cheques-Purchases];
    SaveValues=Yes;
    SourceTable=Table28090;
    DelayedInsert=Yes;
    SourceTableView=SORTING(Line Number)
                    WHERE(Account Type=FILTER(' '|Vendor|G/L Account));
    PageType=Worksheet;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       UpdateBalance;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1500062 ;1   ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 ENA=&Line];
                      Image=Line }
      { 1500063 ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENA=Dimensions];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 1500002 ;1   ;ActionGroup;
                      CaptionML=[ENU=&Account;
                                 ENA=&Account];
                      Image=ChartOfAccounts }
      { 1500044 ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 ENA=Card];
                      Promoted=Yes;
                      Image=EditLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CASE "Account Type" OF
                                   "Account Type"::"G/L Account":
                                     BEGIN
                                       GLAccount.GET("Account No.");
                                       PAGE.RUNMODAL(PAGE::"G/L Account Card",GLAccount);
                                     END;
                                   "Account Type"::Vendor:
                                     BEGIN
                                       Vendor.GET("Account No.");
                                       PAGE.RUNMODAL(PAGE::"Vendor Card",Vendor);
                                     END;
                                 END;
                               END;
                                }
      { 1500006 ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unction;
                                 ENA=F&unction];
                      Image=Action }
      { 1500046 ;2   ;Action    ;
                      CaptionML=[ENU=&Suggest Checks to Bank;
                                 ENA=&Suggest Cheques to Bank];
                      Promoted=Yes;
                      Image=FilterLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 VendorNo := '';
                                 DateFilter := '';
                                 SETVIEW('SORTING(Line Number) WHERE(Account Type=FILTER(Vendor|G/L Account))');

                                 BankDate := '..' + FORMAT(WORKDATE);
                                 SETFILTER("Date Filter",BankDate);
                                 SETFILTER("Check Date",GETFILTER("Date Filter"));
                                 CurrPage.UPDATE(FALSE);
                                 CountCheck := COUNT;
                                 MESSAGE(Text002,CountCheck);
                               END;
                                }
      { 1500047 ;2   ;Action    ;
                      CaptionML=[ENU=Show &All;
                                 ENA=Show &All];
                      Promoted=Yes;
                      Image=RemoveFilterLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 VendorNo := '';
                                 DateFilter := '';
                                 SETVIEW('SORTING(Line Number) WHERE(Account Type=FILTER(Vendor|G/L Account))');
                               END;
                                }
      { 1500048 ;2   ;Action    ;
                      Name=ApplyEntries;
                      ShortCutKey=Shift+F11;
                      CaptionML=[ENU=Apply &Entries;
                                 ENA=Apply &Entries];
                      Promoted=Yes;
                      Image=ApplyEntries;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 PostDatedCheckMgt.ApplyEntries(Rec);
                               END;
                                }
      { 1500004 ;1   ;ActionGroup;
                      CaptionML=[ENU=&Payment;
                                 ENA=&Payment] }
      { 1500057 ;2   ;Action    ;
                      Name=SuggestVendorPayments;
                      CaptionML=[ENU=Suggest Vendor Payments;
                                 ENA=Suggest Vendor Payments];
                      Image=SuggestVendorPayments;
                      OnAction=BEGIN
                                 TESTFIELD("Account Type","Account Type"::Vendor);
                                 PostDatedCheckMgt.SuggestVendorPayments;
                               END;
                                }
      { 1500058 ;2   ;Action    ;
                      CaptionML=[ENU=Preview Check;
                                 ENA=Preview Cheque];
                      Promoted=Yes;
                      Image=ViewCheck;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 PostDatedCheckMgt.PreviewCheck(Rec);
                               END;
                                }
      { 1500059 ;2   ;Action    ;
                      CaptionML=[ENU=Print Check;
                                 ENA=Print Cheque];
                      Promoted=Yes;
                      Image=PrintCheck;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 PostDatedCheckMgt.PrintCheck(Rec);
                               END;
                                }
      { 1500060 ;2   ;Action    ;
                      CaptionML=[ENU=Void Check;
                                 ENA=Void Cheque];
                      Promoted=Yes;
                      Image=VoidCheck;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 PostDatedCheckMgt.VoidCheck(Rec);
                               END;
                                }
      { 1500061 ;2   ;Action    ;
                      Name=CreateCheckInstallments;
                      CaptionML=[ENU=Create Check Installments;
                                 ENA=Create Cheque Installments];
                      Promoted=Yes;
                      Image=Installments;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 TESTFIELD("Check Date");
                                 TESTFIELD("Account Type","Account Type"::Vendor);
                                 TESTFIELD("Bank Account");
                                 TESTFIELD("Document No.");
                                 TESTFIELD("Check Printed",FALSE);
                                 CreateInstallments.SetPostDatedCheckLine(Rec);
                                 CreateInstallments.RUNMODAL;
                                 CLEAR(CreateInstallments);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1500064 ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 ENA=P&osting];
                      Image=Post }
      { 1500065 ;2   ;Action    ;
                      Name=CreatePaymentJournal;
                      CaptionML=[ENU=&Create Payment Journal;
                                 ENA=&Create Payment Journal];
                      Promoted=Yes;
                      Image=SuggestVendorPayments;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF CONFIRM(Text001,FALSE) THEN BEGIN
                                   PostDatedCheckMgt.Post(Rec);
                                   VendorNo := '';
                                   DateFilter := '';
                                   RESET;
                                 END;
                                 SETFILTER("Account Type",'Vendor|G/L Account');
                               END;
                                }
      { 1500066 ;2   ;Action    ;
                      CaptionML=[ENU=Print Report;
                                 ENA=Print Report];
                      OnAction=BEGIN
                                 REPORT.RUNMODAL(REPORT::"Post Dated Checks",TRUE,TRUE,Rec);
                               END;
                                }
      { 1500003 ;2   ;Action    ;
                      CaptionML=[ENU=Print Acknowledgement Receipt;
                                 ENA=Print Acknowledgement Receipt];
                      Image=PrintAcknowledgement;
                      OnAction=BEGIN
                                 PostDatedCheck.COPYFILTERS(Rec);
                                 PostDatedCheck.SETRANGE("Account Type","Account Type");
                                 PostDatedCheck.SETRANGE("Account No.","Account No.");
                                 IF PostDatedCheck.FINDFIRST THEN
                                   REPORT.RUNMODAL(REPORT::"PDC Acknowledgement Receipt",TRUE,TRUE,PostDatedCheck);
                               END;
                                }
      { 1900839804;1 ;Action    ;
                      CaptionML=[ENU=Cash Receipt Journal;
                                 ENA=Cash Receipt Journal];
                      RunObject=Page 255;
                      Promoted=No;
                      Image=CashReceiptJournal;
                      PromotedCategory=Process }
      { 1900000006;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 1903081206;1 ;Action    ;
                      CaptionML=[ENU=PDC Acknowledgement Receipt;
                                 ENA=PDC Acknowledgement Receipt];
                      RunObject=Report 28092;
                      Promoted=No;
                      Image=Report;
                      PromotedCategory=Report }
      { 1904240906;1 ;Action    ;
                      CaptionML=[ENU=Post Dated Checks;
                                 ENA=Post Dated Cheques];
                      RunObject=Report 28090;
                      Promoted=No;
                      Image=Report;
                      PromotedCategory=Report }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1500005;1;Group     ;
                CaptionML=[ENU=Options;
                           ENA=Options] }

    { 1500016;2;Field     ;
                CaptionML=[ENU=Date Filter;
                           ENA=Date Filter];
                SourceExpr=DateFilter;
                OnValidate=BEGIN
                             DateFilterOnAfterValidate;
                           END;
                            }

    { 1500018;2;Field     ;
                CaptionML=[ENU=Vendor;
                           ENA=Vendor];
                SourceExpr=VendorNo;
                OnValidate=BEGIN
                             VendorNoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           CLEAR(VendorList);
                           VendorList.LOOKUPMODE(TRUE);
                           IF NOT (VendorList.RUNMODAL = ACTION::LookupOK) THEN
                             EXIT(FALSE);

                           Text := VendorList.GetSelectionFilter;
                           EXIT(TRUE);

                           UpdateVendor;
                           SETFILTER("Check Date",DateFilter);
                           IF NOT FINDFIRST THEN
                             UpdateBalance;
                         END;
                          }

    { 1500007;1;Group     ;
                GroupType=Repeater }

    { 1500020;2;Field     ;
                SourceExpr="Account Type" }

    { 1500022;2;Field     ;
                SourceExpr="Account No." }

    { 1500053;2;Field     ;
                SourceExpr="Document No." }

    { 1500024;2;Field     ;
                SourceExpr=Description }

    { 1500028;2;Field     ;
                SourceExpr="Check Date";
                Visible=TRUE }

    { 1500030;2;Field     ;
                SourceExpr="Check No.";
                Visible=TRUE }

    { 1500032;2;Field     ;
                SourceExpr="Currency Code" }

    { 1500034;2;Field     ;
                SourceExpr=Amount }

    { 1500036;2;Field     ;
                SourceExpr="Amount (LCY)" }

    { 1500038;2;Field     ;
                SourceExpr="Date Received" }

    { 1500040;2;Field     ;
                SourceExpr="Replacement Check" }

    { 1500049;2;Field     ;
                SourceExpr="Applies-to Doc. Type" }

    { 1500051;2;Field     ;
                SourceExpr="Applies-to Doc. No." }

    { 1500042;2;Field     ;
                SourceExpr=Comment }

    { 1500026;2;Field     ;
                SourceExpr="Bank Account";
                Visible=TRUE }

    { 1500067;2;Field     ;
                SourceExpr="Bank Payment Type" }

    { 1500055;2;Field     ;
                SourceExpr="Batch Name" }

    { 1500001;1;Group      }

    { 1500014;2;Field     ;
                Name=Description2;
                SourceExpr=Description;
                Editable=FALSE }

    { 1500012;2;Field     ;
                CaptionML=[ENU=Balance (LCY);
                           ENA=Balance (LCY)];
                SourceExpr=VendorBalance;
                Editable=FALSE }

    { 1500010;2;Field     ;
                CaptionML=[ENU=Count;
                           ENA=Count];
                SourceExpr=LineCount;
                Editable=FALSE }

    { 1500008;2;Field     ;
                CaptionML=[ENU=Amount;
                           ENA=Amount];
                SourceExpr=LineAmount;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1905532107;1;Part   ;
                PagePartID=Page9083;
                Visible=FALSE;
                Editable=FALSE;
                PartType=Page }

  }
  CODE
  {
    VAR
      Text001@1500024 : TextConst 'ENU=Are you sure you want to create Cash Journal Lines?;ENA=Are you sure you want to create Cash Journal Lines?';
      Text002@1500023 : TextConst 'ENU=There are %1 check(s) to bank.;ENA=There are %1 cheque(s) to bank.';
      VendorNo@1500029 : Code[250];
      Vendor@1500028 : Record 23;
      PostDatedCheck@1500027 : Record 28090;
      GLAccount@1500026 : Record 15;
      VendorList@1000 : Page 27;
      CreateInstallments@1500014 : Report 28091;
      PostDatedCheckMgt@1500013 : Codeunit 28090;
      ApplicationManagement@1001 : Codeunit 1;
      CountCheck@1500007 : Integer;
      LineCount@1500006 : Integer;
      VendorBalance@1500005 : Decimal;
      LineAmount@1500004 : Decimal;
      DateFilter@1500003 : Text[250];
      BankDate@1500002 : Text[30];

    PROCEDURE UpdateBalance@1500000();
    BEGIN
      LineAmount := 0;
      LineCount := 0;
      IF Vendor.GET("Account No.") THEN BEGIN
        Vendor.CALCFIELDS("Balance (LCY)");
        VendorBalance := Vendor."Balance (LCY)";
      END ELSE
        VendorBalance := 0;
      PostDatedCheck.RESET;
      PostDatedCheck.SETCURRENTKEY("Account Type","Account No.");
      IF DateFilter <> '' THEN
        PostDatedCheck.SETFILTER("Check Date",DateFilter);
      PostDatedCheck.SETRANGE("Account Type",PostDatedCheck."Account Type"::Vendor);
      IF VendorNo <> '' THEN
        PostDatedCheck.SETRANGE("Account No.",VendorNo);
      IF PostDatedCheck.FINDSET THEN BEGIN
        REPEAT
          LineAmount := LineAmount + PostDatedCheck."Amount (LCY)";
        UNTIL PostDatedCheck.NEXT = 0;
        LineCount := PostDatedCheck.COUNT;
      END;
    END;

    PROCEDURE UpdateVendor@1500001();
    BEGIN
      IF VendorNo = '' THEN
        SETRANGE("Account No.")
      ELSE
        SETRANGE("Account No.",VendorNo);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE DateFilterOnAfterValidate@19006009();
    BEGIN
      IF ApplicationManagement.MakeDateFilter(DateFilter) = 0 THEN;
      SETFILTER("Check Date",DateFilter);
      UpdateVendor;
      UpdateBalance;
    END;

    LOCAL PROCEDURE VendorNoOnAfterValidate@19009338();
    BEGIN
      SETFILTER("Check Date",DateFilter);
      UpdateVendor;
      UpdateBalance;
    END;

    BEGIN
    END.
  }
}

