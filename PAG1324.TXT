OBJECT Page 1324 Mini Sales Quote
{
  OBJECT-PROPERTIES
  {
    Date=09/23/13;
    Time=12:00:00;
    Version List=NAVW17.10;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Quote;
               ENA=Sales Quote];
    SourceTable=Table36;
    SourceTableView=WHERE(Document Type=FILTER(Quote));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Quote,Posting,View;
                                ENA=New,Process,Report,Quote,Posting,View];
    OnInit=BEGIN
             ShowBillToShipToTab := FALSE;
             ShowDetailsTab := FALSE;
           END;

    OnOpenPage=VAR
                 FileManagement@1000 : Codeunit 419;
               BEGIN
                 IF UserSetupManagement.GetSalesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserSetupManagement.GetSalesFilter);
                   FILTERGROUP(0);
                 END;

                 AllowDotNetAddIn := FileManagement.CanRunDotNetOnClient;
               END;

    OnAfterGetRecord=BEGIN
                       CustomerSelected := "Sell-to Customer No." <> '';
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserSetupManagement.GetSalesFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 31      ;1   ;ActionGroup;
                      Name=Process;
                      CaptionML=[ENU=Process;
                                 ENA=Process] }
      { 35      ;2   ;Action    ;
                      Name=MakeInvoice;
                      CaptionML=[ENU=Make Invoice;
                                 ENA=Make Invoice];
                      ToolTipML=[ENU=Convert the sales quote to a sales invoice.;
                                 ENA=Convert the sales quote to a sales invoice.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MiniLinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);
                                 CODEUNIT.RUN(CODEUNIT::"Sales-Quote to Invoice Yes/No",Rec);
                               END;
                                }
      { 37      ;2   ;Action    ;
                      Name=Print;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 ENA=&Print];
                      ToolTipML=[ENU=Print the sales quote.;
                                 ENA=Print the sales quote.];
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MiniLinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);
                                 DocPrint.PrintSalesHeader(Rec);
                               END;
                                }
      { 32      ;2   ;Action    ;
                      Name=EmailasPDF;
                      CaptionML=[ENU=&Email as PDF;
                                 ENA=&Email as PDF];
                      ToolTipML=[ENU=Attach the sales quote to an email to the customer.;
                                 ENA=Attach the sales quote to an email to the customer.];
                      Promoted=Yes;
                      Visible=AllowDotNetAddIn;
                      PromotedIsBig=Yes;
                      Image=SendEmailPDF;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReportDistributionManagement@1000 : Codeunit 452;
                               BEGIN
                                 MiniLinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);
                                 ReportDistributionManagement.EmailDocumentReport(Rec);
                               END;
                                }
      { 16      ;2   ;Action    ;
                      Name=SaveCopy;
                      CaptionML=[ENU=&Save PDF Document;
                                 ENA=&Save PDF Document];
                      ToolTipML=[ENU=Save the sales quote to your computer. You can then attach it to the email that you send to the customer.;
                                 ENA=Save the sales quote to your computer. You can then attach it to the email that you send to the customer.];
                      Promoted=Yes;
                      Visible=NOT AllowDotNetAddIn;
                      PromotedIsBig=Yes;
                      Image=Save;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReportDistributionManagement@1000 : Codeunit 452;
                               BEGIN
                                 MiniLinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);
                                 ReportDistributionManagement.SaveDocumentReport(Rec);
                               END;
                                }
      { 57      ;1   ;ActionGroup;
                      Name=Quote;
                      CaptionML=[ENU=&Quote;
                                 ENA=&Quote];
                      Image=Invoice }
      { 60      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Customer;
                                 ENA=Customer];
                      ToolTipML=[ENU=View or edit detailed information about the customer.;
                                 ENA=View or edit detailed information about the customer.];
                      RunObject=Page 1300;
                      RunPageLink=No.=FIELD(Sell-to Customer No.);
                      Promoted=Yes;
                      Enabled=CustomerSelected;
                      PromotedIsBig=Yes;
                      Image=Customer;
                      PromotedCategory=Category4 }
      { 134     ;2   ;Action    ;
                      Name=GetRecurringSalesLines;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Recurring Sales Lines;
                                 ENA=Get Recurring Sales Lines];
                      ToolTipML=[ENU=Insert sales document lines that you have set up for the customer as recurring. Recurring sales lines could be for a monthly replenishment order or a fixed freight expense.;
                                 ENA=Insert sales document lines that you have set up for the customer as recurring. Recurring sales lines could be for a monthly replenishment order or a fixed freight expense.];
                      PromotedIsBig=Yes;
                      Image=CustomerCode;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 StdCustSalesCode@1000 : Record 172;
                               BEGIN
                                 TESTFIELD("No.");
                                 TESTFIELD("Sell-to Customer No.");

                                 StdCustSalesCode.FILTERGROUP := 2;
                                 StdCustSalesCode.SETRANGE("Customer No.","Sell-to Customer No.");
                                 StdCustSalesCode.FILTERGROUP := 0;

                                 IF PAGE.RUNMODAL(PAGE::"Mini Std Customer Sales Codes",StdCustSalesCode) = ACTION::LookupOK THEN
                                   StdCustSalesCode.ApplyStdCodesToSalesLines(Rec,StdCustSalesCode);
                               END;
                                }
      { 64      ;2   ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 ENA=Copy Document];
                      ToolTipML=[ENU=Copy document lines and optionally header information from another sales document to this document. You can copy a sales invoice into a sales quote to quickly create a similar document.;
                                 ENA=Copy document lines and optionally header information from another sales document to this document. You can copy a sales invoice into a sales quote to quickly create a similar document.];
                      PromotedIsBig=Yes;
                      Image=CopyDocument;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 CopySalesDoc.SetSalesHeader(Rec);
                                 CopySalesDoc.RUNMODAL;
                                 CLEAR(CopySalesDoc);
                               END;
                                }
      { 3       ;1   ;ActionGroup;
                      Name=View;
                      CaptionML=[ENU=View;
                                 ENA=View] }
      { 4       ;2   ;Action    ;
                      Name=Ship-to and Bill-to Address;
                      CaptionML=[ENU=Ship-to and Bill-to Address;
                                 ENA=Ship-to and Bill-to Address];
                      ToolTipML=[ENU=Show fields for the customer's shipping and billing addresses. You can specify a different address where the item or service is delivered or specify a different address where the document is sent.;
                                 ENA=Show fields for the customer's shipping and billing addresses. You can specify a different address where the item or service is delivered or specify a different address where the document is sent.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ShipAddress;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ShowBillToShipToTab := NOT ShowBillToShipToTab;
                               END;
                                }
      { 5       ;2   ;Action    ;
                      Name=QuoteDetails;
                      CaptionML=[ENU=Quote Details;
                                 ENA=Quote Details];
                      ToolTipML=[ENU=Show fields for quote details, such as currency, and payment terms.;
                                 ENA=Show fields for quote details, such as currency, and payment terms.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=TaxDetail;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ShowDetailsTab := NOT ShowDetailsTab;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=SalesQuote;
                CaptionML=[ENU=Sales Quote;
                           ENA=Sales Quote];
                GroupType=Group }

    { 13  ;2   ;Group     ;
                GroupType=Group }

    { 6   ;3   ;Field     ;
                CaptionML=[ENU=Customer Name;
                           ENA=Customer Name];
                ToolTipML=[ENU=Specifies the name of the customer that the items on the invoice will be shipped to.;
                           ENA=Specifies the name of the customer that the items on the invoice will be shipped to.];
                NotBlank=Yes;
                SourceExpr="Sell-to Customer Name";
                TableRelation=Customer.Name;
                LookupPageID=Mini Customer List;
                DrillDownPageID=Mini Customer List;
                OnValidate=VAR
                             NewCustomerNo@1000 : Code[20];
                           BEGIN
                             IF "No." = '' THEN
                               InitRecord;
                             IF ("Sell-to Customer Name" <> xRec."Sell-to Customer Name")
                             THEN BEGIN
                               NewCustomerNo := MiniCustomerMgt.GetCustNoByName("Sell-to Customer Name");
                               VALIDATE("Sell-to Customer No.",NewCustomerNo);
                             END;
                             CurrPage.UPDATE;
                             SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 75  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENA=Address];
                ToolTipML=[ENU=Specifies the address of the customer that the invoice will be shipped to.;
                           ENA=Specifies the address of the customer that the invoice will be shipped to.];
                SourceExpr="Sell-to Address" }

    { 11  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENA=Address 2];
                ToolTipML=[ENU=Specifies an additional part of the address of the customer to whom the items on the invoice will be shipped.;
                           ENA=Specifies an additional part of the address of the customer to whom the items on the invoice will be shipped.];
                SourceExpr="Sell-to Address 2" }

    { 80  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENA=Post Code];
                ToolTipML=[ENU=Specifies the post code of the customer that you sell the items to.;
                           ENA=Specifies the post code of the customer that you sell the items to.];
                SourceExpr="Sell-to Post Code" }

    { 79  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ENA=City];
                ToolTipML=[ENU=Specifies the city name of the customer that the items on the invoice will be shipped to.;
                           ENA=Specifies the city name of the customer that the items on the invoice will be shipped to.];
                SourceExpr="Sell-to City" }

    { 15  ;2   ;Group     ;
                GroupType=Group }

    { 8   ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENA=Contact];
                ToolTipML=[ENU=Specifies the name of the person to contact at the customer that the items on the invoice will be shipped to.;
                           ENA=Specifies the name of the person to contact at the customer that the items on the invoice will be shipped to.];
                SourceExpr="Sell-to Contact" }

    { 43  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which you create the sales document. The date will appear on the printed sales document. By default, today's date is entered.;
                           ENA=Specifies the date on which you create the sales document. The date will appear on the printed sales document. By default, today's date is entered.];
                SourceExpr="Document Date" }

    { 12  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the date that your customer has asked for the order to be delivered.;
                           ENA=Specifies the date that your customer has asked for the order to be delivered.];
                SourceExpr="Requested Delivery Date";
                Importance=Promoted }

    { 33  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the date you expect to ship items on the sales document. By default, today's date is entered.;
                           ENA=Specifies the date you expect to ship items on the sales document. By default, today's date is entered.];
                SourceExpr="Shipment Date" }

    { 112 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies whether the document is open, waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.;
                           ENA=Specifies whether the document is open, waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.];
                SourceExpr=Status;
                Importance=Promoted;
                Visible=FALSE }

    { 28  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies when the sales invoice must be paid. By default, the field is calculated as the date in the Shipment Date field plus the period defined in the Payment Terms Code field.;
                           ENA=Specifies when the sales invoice must be paid. By default, the field is calculated as the date in the Shipment Date field plus the period defined in the Payment Terms Code field.];
                SourceExpr="Due Date";
                Importance=Promoted }

    { 7   ;1   ;Group     ;
                Name=QuoteDetails;
                CaptionML=[ENU=Quote Details;
                           ENA=Quote Details];
                Visible=ShowDetailsTab;
                GroupType=Group }

    { 107 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency of amounts on the sales lines. Leave the field empty to use the customer's default currency code.;
                           ENA=Specifies the currency of amounts on the sales lines. Leave the field empty to use the customer's default currency code.];
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 156 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's VAT specification to link transactions made for this customer with the appropriate general ledger account according to the VAT posting setup.;
                           ENA=Specifies the customer's GST specification to link transactions made for this customer with the appropriate general ledger account according to the GST posting setup.];
                SourceExpr="VAT Bus. Posting Group";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 121 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the unit price on the line should be displayed including or excluding VAT.;
                           ENA=Specifies whether the unit price on the line should be displayed including or excluding GST.];
                SourceExpr="Prices Including VAT";
                Visible=FALSE;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             CALCFIELDS("Invoice Discount Amount");
                             SalesCalcDiscByType.ApplyDefaultInvoiceDiscount("Invoice Discount Amount",Rec);
                           END;
                            }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the sales document. By default, the payment term from the customer card is entered.;
                           ENA=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the sales document. By default, the payment term from the customer card is entered.];
                SourceExpr="Payment Terms Code";
                Importance=Promoted }

    { 101 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how payment for the sales document must be submitted, such as bank transfer or check. By default, the payment method from the customer card is entered.;
                           ENA=Specifies how payment for the sales document must be submitted, such as bank transfer or cheque. By default, the payment method from the customer card is entered.];
                SourceExpr="Payment Method Code" }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Enter here a code for the sales header's transaction type. To see the transaction type codes in the Transaction Type table, click the field.;
                           ENA=Enter here a code for the sales header's transaction type. To see the transaction type codes in the Transaction Type table, click the field.];
                SourceExpr="Transaction Type" }

    { 1905885101;1;Group  ;
                Name=BillToAndShipToAddresses;
                CaptionML=[ENU=Ship-to and Bill-to Addresses;
                           ENA=Ship-to and Bill-to Addresses];
                Visible=ShowBillToShipToTab;
                GroupType=Group }

    { 41  ;2   ;Group     ;
                Name=ShipToAddress;
                CaptionML=[ENU=Ship-to Address;
                           ENA=Ship-to Address];
                GroupType=Group }

    { 40  ;3   ;Field     ;
                CaptionML=[ENU=Address Code;
                           ENA=Address Code];
                ToolTipML=[ENU=Specifies the code for another shipment address than the customer's own address, which is entered by default. To send products on the sales document to another address, choose the button in the Ship-to Code field and select a code that represents a ship-to address.;
                           ENA=Specifies the code for another shipment address than the customer's own address, which is entered by default. To send products on the sales document to another address, choose the button in the Ship-to Code field and select a code that represents a ship-to address.];
                SourceExpr="Ship-to Code";
                Importance=Promoted }

    { 38  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           ENA=Name];
                ToolTipML=[ENU=Specifies the name to which the order will be shipped.;
                           ENA=Specifies the name to which the order will be shipped.];
                SourceExpr="Ship-to Name" }

    { 39  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENA=Address];
                ToolTipML=[ENU=Specifies the address that the order will be shipped to.;
                           ENA=Specifies the address that the order will be shipped to.];
                SourceExpr="Ship-to Address" }

    { 36  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENA=Address 2];
                ToolTipML=[ENU=Contains another line of the address that the order will be shipped to.;
                           ENA=Contains another line of the address that the order will be shipped to.];
                SourceExpr="Ship-to Address 2" }

    { 34  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENA=Post Code];
                ToolTipML=[ENU=Specifies the post code of the customer's shipping address.;
                           ENA=Specifies the post code of the customer's shipping address.];
                SourceExpr="Ship-to Post Code" }

    { 21  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ENA=City];
                ToolTipML=[ENU=Specifies the city name of the address that the order will be shipped to.;
                           ENA=Specifies the city name of the address that the order will be shipped to.];
                SourceExpr="Ship-to City" }

    { 20  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENA=Contact];
                ToolTipML=[ENU=Specifies the name of a contact person for the address that the order should be shipped to.;
                           ENA=Specifies the name of a contact person for the address that the order should be shipped to.];
                SourceExpr="Ship-to Contact" }

    { 19  ;2   ;Group     ;
                Name=BillToCustomer;
                CaptionML=[ENU=Bill-to Customer;
                           ENA=Bill-to Customer];
                GroupType=Group }

    { 14  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           ENA=Name];
                ToolTipML=[ENU=Specifies the customer to whom you will send the sales invoice, when different from the customer that you are selling to. By default, the name and address of the customer that you are selling to is entered.;
                           ENA=Specifies the customer to whom you will send the sales invoice, when different from the customer that you are selling to. By default, the name and address of the customer that you are selling to is entered.];
                SourceExpr="Bill-to Name";
                TableRelation=Customer.Name;
                LookupPageID=Mini Customer List;
                DrillDownPageID=Mini Customer List;
                OnValidate=VAR
                             NewCustomerNo@1000 : Code[20];
                           BEGIN
                             IF "Bill-to Name" <> xRec."Bill-to Name" THEN BEGIN
                               NewCustomerNo := MiniCustomerMgt.GetCustNoByName("Bill-to Name");
                               VALIDATE("Bill-to Customer No.",NewCustomerNo);
                             END;
                             CurrPage.UPDATE;
                             SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 18  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENA=Address];
                ToolTipML=[ENU=Specifies the address of the customer that you will send the invoice to.;
                           ENA=Specifies the address of the customer that you will send the invoice to.];
                SourceExpr="Bill-to Address" }

    { 9   ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENA=Address 2];
                ToolTipML=[ENU=Contains another line of the address of the customer that you will send the invoice to.;
                           ENA=Contains another line of the address of the customer that you will send the invoice to.];
                SourceExpr="Bill-to Address 2" }

    { 85  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENA=Post Code];
                ToolTipML=[ENU=Specifies the post code of the customer's billing address.;
                           ENA=Specifies the post code of the customer's billing address.];
                SourceExpr="Bill-to Post Code" }

    { 22  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ENA=City];
                ToolTipML=[ENU=Specifies the city name of the customer that you will send the invoice to.;
                           ENA=Specifies the city name of the customer that you will send the invoice to.];
                SourceExpr="Bill-to City" }

    { 24  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENA=Contact];
                ToolTipML=[ENU=Specifies the name of the person you should contact at the customer that you are sending the invoice to.;
                           ENA=Specifies the name of the person you should contact at the customer that you are sending the invoice to.];
                SourceExpr="Bill-to Contact" }

    { 17  ;1   ;Part      ;
                Name=SalesLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page1325 }

  }
  CODE
  {
    VAR
      CopySalesDoc@1000 : Report 292;
      UserSetupManagement@1004 : Codeunit 5700;
      SalesCalcDiscByType@1002 : Codeunit 1300;
      MiniCustomerMgt@1003 : Codeunit 1302;
      DocPrint@1008 : Codeunit 229;
      MiniLinesInstructionMgt@1010 : Codeunit 1320;
      ChangeExchangeRate@1001 : Page 511;
      ShowBillToShipToTab@1005 : Boolean;
      ShowDetailsTab@1007 : Boolean;
      CustomerSelected@1006 : Boolean;
      AllowDotNetAddIn@1009 : Boolean;

    BEGIN
    END.
  }
}

