OBJECT Report 50062 Propac Sale/Sale Rtrn Domestic
{
  OBJECT-PROPERTIES
  {
    Date=04/22/15;
    Time=14:38:02;
    Modified=Yes;
    Version List=UPG13R2DEV,PPNPPHDEV;
  }
  PROPERTIES
  {
    ProcessingOnly=Yes;
    UseRequestPage=No;
  }
  DATASET
  {
    { 4187;    ;DataItem;                    ;
               DataItemTable=Table50022;
               DataItemTableView=SORTING(Document Type,Dealer Code,Invoice No.,Entry No.)
                                 ORDER(Ascending)
                                 WHERE(VAT Buss. Posting Group=CONST(DOMESTIC));
               OnPreDataItem=BEGIN
                               MasterSetup.GET;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF "Applied To Invoice No"='' THEN
                                  CreateSalesInvoice();

                                  IF "Applied To Invoice No"<>'' THEN
                                  CreateSalesCrMemo();
                                END;

               OnPostDataItem=BEGIN
                                IF NOT ((PreviousInviceNo='') AND (PreviousDealerCode='')) THEN
                                AssignInvoiceToCrMemo(PreviousInviceNo);
                                DELETEALL;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      PreviousInviceNo@1000000004 : Code[20];
      PreviousInviceNo1@1000000005 : Code[20];
      LineNo@1000000001 : Integer;
      MasterSetup@1000000000 : Record 50008;
      SalesHeader@1000000003 : Record 36;
      SalesLine@1000000002 : Record 37;
      PreviousDealerCode@1000000006 : Code[20];
      ConversionTableCustomer@1102159001 : Record 50004;
      ShiptoAddress@1102159002 : Record 222;

    PROCEDURE CreateSalesInvoice@1000000001();
    VAR
      ShopCode_MD_DDS@1000000000 : Code[10];
      Cust@1000000001 : Record 18;
      DDS@1000000002 : TextConst 'ENU=410100';
      MD@1000000003 : TextConst 'ENU=410200';
    BEGIN
        IF Cust.GET("Temp Table For Propac"."Dealer Code") THEN
           IF (Cust."Type of Dealer"=Cust."Type of Dealer"::DDS) THEN
               ShopCode_MD_DDS:=DDS
            ELSE
               ShopCode_MD_DDS:=MD;



      IF "Temp Table For Propac"."Invoice No."<>PreviousInviceNo THEN BEGIN

        //Assign Previous Invoice To Credit Memo
        IF NOT ((PreviousInviceNo='') AND (PreviousDealerCode='')) THEN
        AssignInvoiceToCrMemo(PreviousInviceNo);

        //Sales Header
        SalesHeader.INIT;
        SalesHeader."Document Type":=SalesHeader."Document Type"::Invoice;
        SalesHeader."No.":="Temp Table For Propac"."Invoice No.";
        SalesHeader.INSERT;
        SalesHeader.VALIDATE("Posting Date","Temp Table For Propac"."Transaction Date");
        SalesHeader.VALIDATE("Document Date","Temp Table For Propac"."Invoice Date");
        SalesHeader.VALIDATE("Sell-to Customer No.","Temp Table For Propac"."Dealer Code");
        //PPNPPHDEV.begin
        {
        IF "Temp Table For Propac"."Npwp No."<>'' THEN
        SalesHeader.VALIDATE("Ship-to Code","Temp Table For Propac"."Npwp No.");
        }//previous code blocked
        ConversionTableCustomer.RESET;
        ConversionTableCustomer.SETRANGE("Propac Code","Temp Table For Propac"."Dealer Code");
        IF ConversionTableCustomer.FINDSET THEN BEGIN
          ShiptoAddress.RESET;
          ShiptoAddress.SETRANGE("Customer No.",ConversionTableCustomer.NAV);
          ShiptoAddress.SETRANGE(PPN,TRUE);
          ShiptoAddress.SETRANGE("PPN S/P",TRUE);
          IF ShiptoAddress.FINDSET THEN
            SalesHeader.VALIDATE("Ship-to Code",ShiptoAddress.Code);
        END;
        //PPNPPHDEV.end
        SalesHeader.VALIDATE("Reason Code",MasterSetup."Reason (Normal)");
        SalesHeader.VALIDATE("Customer Posting Group","Temp Table For Propac"."Customer Posting Group");
        SalesHeader."Order Date":="Temp Table For Propac"."Transaction Date";
        SalesHeader.VALIDATE("Shipment Date","Temp Table For Propac"."Transaction Date");
        SalesHeader.VALIDATE("Due Date","Temp Table For Propac"."Due Date");
        SalesHeader.VALIDATE("Currency Code","Temp Table For Propac"."Currency Code");
        SalesHeader."Posting No.":="Temp Table For Propac"."Invoice No.";
        SalesHeader."Type Of Transaction":= SalesHeader."Type Of Transaction"::Propac;
        SalesHeader."Order Date":="Temp Table For Propac"."Transaction Date";
        SalesHeader.VALIDATE("Shipment Date","Temp Table For Propac"."Transaction Date");
        SalesHeader.VALIDATE("Payment Terms Code","Temp Table For Propac"."Payment Term");
        SalesHeader.VALIDATE("Due Date","Temp Table For Propac"."Due Date");
        SalesHeader.VALIDATE("Currency Code","Temp Table For Propac"."Currency Code");
        SalesHeader."Posting No.":="Temp Table For Propac"."Invoice No.";
        IF (Cust.TaxExampted) THEN
          SalesHeader."Tax Invoice Date":=CALCDATE(MasterSetup."Propac Tax Period","Temp Table For Propac"."Invoice Date")
        ELSE BEGIN
          IF FORMAT(MasterSetup."Propac Tax Period") <> '' THEN
            SalesHeader."Tax Invoice Date":=CALCDATE(MasterSetup."Propac Tax Period","Temp Table For Propac"."Invoice Date")
          ELSE
            SalesHeader."Tax Invoice Date":="Temp Table For Propac"."Invoice Date";
        END;
        SalesHeader."B/L Date":="Temp Table For Propac"."Transaction Date";
        SalesHeader."External Document No.":="Temp Table For Propac"."Ext.Doc.No.";
        //SalesHeader.VALIDATE("Shortcut Dimension 1 Code",ShopCode_MD_DDS);  //UPG13R2DEV
        SalesHeader.VALIDATE("Shortcut Dimension 1 Code","Temp Table For Propac"."Shop Code");  //UPG13R2DEV
        SalesHeader.VALIDATE("Shortcut Dimension 2 Code" ,"Temp Table For Propac"."Model Code");
        SalesHeader."Type Of Transaction" := SalesHeader."Type Of Transaction"::Propac;
        SalesHeader.Interfaced := TRUE;
        SalesHeader.MODIFY;
        LineNo:=0;
      END;
      //Sales Line
      LineNo += 10000;
      SalesLine.RESET;
      SalesLine.INIT;
      SalesLine."Document Type" := SalesLine."Document Type"::Invoice;
      SalesLine."Document No." := "Temp Table For Propac"."Invoice No.";
      SalesLine."Line No." := LineNo;
      SalesLine.INSERT(TRUE);
      SalesLine.Type:=SalesLine.Type::"G/L Account";
      SalesLine.VALIDATE("No.","Temp Table For Propac"."Account No.");
      SalesLine.VALIDATE("Reason Code",MasterSetup."Reason (Normal)");
      SalesLine.VALIDATE("Gen. Bus. Posting Group",MasterSetup.Domestic_Bus_Posting_Group);
      SalesLine.VALIDATE("Gen. Prod. Posting Group","Temp Table For Propac"."Gen. Prod. Posting Group");
      SalesLine.VALIDATE("VAT Prod. Posting Group","Temp Table For Propac"."VAT Prod. Posting Group");
      SalesLine.VALIDATE(Quantity,1);
      SalesLine.VALIDATE("Unit Price","Temp Table For Propac".Amount);
      //SalesLine.VALIDATE("Shortcut Dimension 1 Code",ShopCode_MD_DDS);  //UPG13R2DEV
      SalesLine.VALIDATE("Shortcut Dimension 1 Code","Temp Table For Propac"."Shop Code");  //UPG13R2DEV
      SalesLine.VALIDATE("Shortcut Dimension 2 Code","Temp Table For Propac"."Model Code");
      SalesLine.Interfaced := TRUE;
      SalesLine.MODIFY;
      PreviousInviceNo := "Temp Table For Propac"."Invoice No.";
      PreviousDealerCode := "Temp Table For Propac"."Dealer Code";
    END;

    PROCEDURE CreateSalesCrMemo@1000000000();
    VAR
      Cust@1000000000 : Record 18;
      ShopCode_MD_DDS@1000000001 : Code[10];
      DDS@1000000003 : TextConst 'ENU=410100';
      MD@1000000002 : TextConst 'ENU=410200';
    BEGIN
        IF Cust.GET("Temp Table For Propac"."Dealer Code") THEN
          IF (Cust."Type of Dealer"=Cust."Type of Dealer"::DDS) THEN
            ShopCode_MD_DDS:=DDS
          ELSE
            ShopCode_MD_DDS:=MD;
        IF "Temp Table For Propac"."Invoice No."<>PreviousInviceNo1 THEN BEGIN
        //Sales Header
        SalesHeader.INIT;
        SalesHeader."Document Type":=SalesHeader."Document Type"::"Credit Memo";
        SalesHeader."No.":="Temp Table For Propac"."Invoice No.";
        SalesHeader.INSERT;
        SalesHeader.VALIDATE("Posting Date","Temp Table For Propac"."Transaction Date");
        SalesHeader.VALIDATE("Document Date","Temp Table For Propac"."Invoice Date");
        SalesHeader.VALIDATE("Sell-to Customer No.","Temp Table For Propac"."Dealer Code");
        //PPNPPHDEV.begin
        {
        IF "Temp Table For Propac"."Npwp No."<>'' THEN
         SalesHeader.VALIDATE("Ship-to Code","Temp Table For Propac"."Npwp No.");
        }//Previous code blocked
        ConversionTableCustomer.RESET;
        ConversionTableCustomer.SETRANGE("Propac Code","Temp Table For Propac"."Dealer Code");
        IF ConversionTableCustomer.FINDSET THEN BEGIN
          ShiptoAddress.RESET;
          ShiptoAddress.SETRANGE("Customer No.",ConversionTableCustomer.NAV);
          ShiptoAddress.SETRANGE(PPN,TRUE);
          ShiptoAddress.SETRANGE("PPN S/P",TRUE);
          IF ShiptoAddress.FINDSET THEN
            SalesHeader.VALIDATE("Ship-to Code",ShiptoAddress.Code);
        END;
        //PPNPPHDEV.end
        SalesHeader.VALIDATE("Reason Code",MasterSetup."Reason (Normal)");
        SalesHeader.VALIDATE("Customer Posting Group","Temp Table For Propac"."Customer Posting Group");
        SalesHeader."Order Date":="Temp Table For Propac"."Transaction Date";
        SalesHeader.VALIDATE("Shipment Date","Temp Table For Propac"."Transaction Date");
        SalesHeader.VALIDATE("Due Date","Temp Table For Propac"."Due Date");
        SalesHeader.VALIDATE("Currency Code","Temp Table For Propac"."Currency Code");
        SalesHeader."Posting No.":="Temp Table For Propac"."Invoice No.";
        SalesHeader."Order Date":="Temp Table For Propac"."Transaction Date";
        SalesHeader.VALIDATE("Shipment Date","Temp Table For Propac"."Transaction Date");
        SalesHeader.VALIDATE("Payment Terms Code","Temp Table For Propac"."Payment Term");
        SalesHeader.VALIDATE("Due Date","Temp Table For Propac"."Due Date");
        SalesHeader.VALIDATE("Currency Code","Temp Table For Propac"."Currency Code");
        SalesHeader."Posting No.":="Temp Table For Propac"."Invoice No.";
        IF FORMAT(MasterSetup."Propac Tax Period") <> '' THEN
          SalesHeader."Tax Invoice Date":=CALCDATE(MasterSetup."Propac Tax Period","Temp Table For Propac"."Invoice Date")
        ELSE
          SalesHeader."Tax Invoice Date":="Temp Table For Propac"."Invoice Date";
        SalesHeader."B/L Date":="Temp Table For Propac"."Transaction Date";
        SalesHeader."External Document No.":="Temp Table For Propac"."Ext.Doc.No.";
        //SalesHeader.VALIDATE("Shortcut Dimension 1 Code",ShopCode_MD_DDS);  //UPG13R2DEV
        SalesHeader.VALIDATE("Shortcut Dimension 1 Code","Temp Table For Propac"."Shop Code");  //UPG13R2DEV
        SalesHeader.VALIDATE("Shortcut Dimension 2 Code","Temp Table For Propac"."Model Code");
        SalesHeader."Applies-to Doc. Type":=SalesHeader."Applies-to Doc. Type"::Invoice;
        SalesHeader."Type Of Transaction":= SalesHeader."Type Of Transaction"::Propac;
        SalesHeader."Propac Applied To Invoice No.":="Temp Table For Propac"."Applied To Invoice No";
        SalesHeader.Interfaced := TRUE;
        SalesHeader.ActualCreditMemo:=TRUE;
        SalesHeader.MODIFY;
        LineNo:=0;
      END;
      //Sales Line
      LineNo+=10000;
      SalesLine.RESET;
      SalesLine.INIT;
      SalesLine."Document Type":=SalesLine."Document Type"::"Credit Memo";
      SalesLine."Document No.":="Temp Table For Propac"."Invoice No.";
      SalesLine."Line No.":=LineNo;
      SalesLine.INSERT(TRUE);
      SalesLine.Type:=SalesLine.Type::"G/L Account";
      SalesLine.VALIDATE("No.","Temp Table For Propac"."Account No.");
      SalesLine.VALIDATE("Reason Code",MasterSetup."Reason (Normal)");
      SalesLine.VALIDATE("Gen. Bus. Posting Group",MasterSetup.Domestic_Bus_Posting_Group);
      SalesLine.VALIDATE("Gen. Prod. Posting Group","Temp Table For Propac"."Gen. Prod. Posting Group");
      SalesLine.VALIDATE("VAT Prod. Posting Group","Temp Table For Propac"."VAT Prod. Posting Group");
      SalesLine.VALIDATE(Quantity,1);
      SalesLine.VALIDATE("Unit Price","Temp Table For Propac".Amount);
      //SalesLine.VALIDATE("Shortcut Dimension 1 Code",ShopCode_MD_DDS);  //UPG13R2DEV
      SalesLine.VALIDATE("Shortcut Dimension 1 Code","Temp Table For Propac"."Shop Code");  //UPG13R2DEV
      SalesLine.VALIDATE("Shortcut Dimension 2 Code","Temp Table For Propac"."Model Code");
      SalesLine.Interfaced := TRUE;
      SalesLine.MODIFY;
      PreviousInviceNo1:="Temp Table For Propac"."Invoice No.";
    END;

    PROCEDURE AssignInvoiceToCrMemo@1000000006(InvoiceNo@1000000000 : Code[20]);
    VAR
      SalesHeader1@1000000001 : Record 36;
      SalesHeader2@1000000004 : Record 36;
      InvRemainingAmt@1000000003 : Decimal;
    BEGIN
      InvRemainingAmt:=InvoiceRemainingAmount(InvoiceNo);
      SalesHeader1.SETCURRENTKEY("Document Type","Sell-to Customer No.","Type Of Transaction","Applies-to Doc. Type","Posting Date");
      SalesHeader1.SETRANGE("Document Type",SalesHeader1."Document Type"::"Credit Memo");
      SalesHeader1.SETRANGE("Sell-to Customer No.",PreviousDealerCode);
      SalesHeader1.SETRANGE("Type Of Transaction",SalesHeader1."Type Of Transaction"::Propac);
      SalesHeader1.SETRANGE("Applies-to Doc. Type",SalesHeader1."Applies-to Doc. Type"::Invoice);
      SalesHeader1.SETRANGE("Applies-to Doc. No.",'');
      IF SalesHeader1.FINDFIRST THEN REPEAT
        IF InvRemainingAmt >= CreditMemoAmount(SalesHeader1."No.") THEN BEGIN
          SalesHeader1.VALIDATE("Applies-to Doc. No.",InvoiceNo);
          SalesHeader1.MODIFY;
          InvRemainingAmt-=CreditMemoAmount(SalesHeader1."No.");
        END;
      UNTIL SalesHeader1.NEXT=0;
    END;

    PROCEDURE InvoiceAmount@1000000002(InvoiceNo@1000000001 : Code[20]) : Decimal;
    VAR
      SalesHeader1@1000000000 : Record 36;
    BEGIN
      SalesHeader1.GET(SalesHeader1."Document Type"::Invoice,InvoiceNo);
      SalesHeader1.CALCFIELDS("Amount Propac");
      EXIT(SalesHeader1."Amount Propac");
    END;

    PROCEDURE InvoiceRemainingAmount@1000000003(InvoiceNo@1000000001 : Code[20]) InvRemainingAmt : Decimal;
    VAR
      SalesHeader1@1000000000 : Record 36;
      SalesLine1@1000000002 : Record 37;
      InvAmt@1000000003 : Decimal;
    BEGIN
      InvAmt:=InvoiceAmount(InvoiceNo);
      SalesHeader1.SETCURRENTKEY("Document Type","Sell-to Customer No.","Type Of Transaction","Applies-to Doc. Type","Posting Date");
      SalesHeader1.SETRANGE("Document Type",SalesHeader1."Document Type"::"Credit Memo");
      SalesHeader1.SETRANGE("Sell-to Customer No.",PreviousDealerCode);
      SalesHeader1.SETRANGE("Type Of Transaction",SalesHeader1."Type Of Transaction"::Propac);
      SalesHeader1.SETRANGE("Applies-to Doc. Type",SalesHeader1."Applies-to Doc. Type"::Invoice);
      SalesHeader1.SETRANGE("Applies-to Doc. No.",InvoiceNo);
      IF SalesHeader1.FINDFIRST THEN REPEAT
        SalesLine1.SETRANGE("Document Type",SalesHeader1."Document Type");
        SalesLine1.SETRANGE("Document No.",SalesHeader1."No.");
        IF SalesLine1.FINDFIRST THEN REPEAT
          InvRemainingAmt+=SalesLine1."Outstanding Amount";
        UNTIL SalesLine1.NEXT=0;
      UNTIL SalesHeader1.NEXT=0;
      InvRemainingAmt:=InvAmt-InvRemainingAmt;
    END;

    PROCEDURE CreditMemoAmount@1000000007(InvoiceNo@1000000001 : Code[20]) : Decimal;
    VAR
      SalesHeader1@1000000000 : Record 36;
    BEGIN
      SalesHeader1.GET(SalesHeader1."Document Type"::"Credit Memo",InvoiceNo);
      SalesHeader1.CALCFIELDS("Amount Propac");
      EXIT(SalesHeader1."Amount Propac");
    END;

    BEGIN
    {
      //PPNPPHDEV SV  ppnpph concept developed
      //UPG13R2DEV
      Shop Code uses Mapping concept.
    }
    END.
  }
  RDLDATA
  {
  }
}

