OBJECT Table 290 VAT Amount Line
{
  OBJECT-PROPERTIES
  {
    Date=05/10/14;
    Time=12:00:00;
    Version List=NAVW17.10.00.36703,NAVAPAC7.10.00.36703;
  }
  PROPERTIES
  {
    CaptionML=[ENU=VAT Amount Line;
               ENA=GST Amount Line];
  }
  FIELDS
  {
    { 1   ;   ;VAT %               ;Decimal       ;CaptionML=[ENU=VAT %;
                                                              ENA=GST %];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 2   ;   ;VAT Base            ;Decimal       ;CaptionML=[ENU=VAT Base;
                                                              ENA=GST Base];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 3   ;   ;VAT Amount          ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("VAT %");
                                                                TESTFIELD("VAT Base");
                                                                IF "VAT Amount" / "VAT Base" < 0 THEN
                                                                  ERROR(Text002,FIELDCAPTION("VAT Amount"));
                                                                "VAT Difference" := "VAT Amount" - "Calculated VAT Amount";
                                                              END;

                                                   CaptionML=[ENU=VAT Amount;
                                                              ENA=GST Amount];
                                                   AutoFormatType=1 }
    { 4   ;   ;Amount Including VAT;Decimal       ;CaptionML=[ENU=Amount Including VAT;
                                                              ENA=Amount Including GST];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5   ;   ;VAT Identifier      ;Code10        ;CaptionML=[ENU=VAT Identifier;
                                                              ENA=GST Identifier];
                                                   Editable=No }
    { 6   ;   ;Line Amount         ;Decimal       ;CaptionML=[ENU=Line Amount;
                                                              ENA=Line Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 7   ;   ;Inv. Disc. Base Amount;Decimal     ;CaptionML=[ENU=Inv. Disc. Base Amount;
                                                              ENA=Inv. Disc. Base Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 8   ;   ;Invoice Discount Amount;Decimal    ;OnValidate=BEGIN
                                                                TESTFIELD("Inv. Disc. Base Amount");
                                                                IF "Invoice Discount Amount" / "Inv. Disc. Base Amount" > 1 THEN
                                                                  ERROR(
                                                                    InvoiceDiscAmtIsGreaterThanBaseAmtErr,
                                                                    FIELDCAPTION("Invoice Discount Amount"),"Inv. Disc. Base Amount");
                                                                "VAT Base" := "Line Amount" - "Invoice Discount Amount";
                                                              END;

                                                   CaptionML=[ENU=Invoice Discount Amount;
                                                              ENA=Invoice Discount Amount];
                                                   AutoFormatType=1 }
    { 9   ;   ;VAT Calculation Type;Option        ;CaptionML=[ENU=VAT Calculation Type;
                                                              ENA=GST Calculation Type];
                                                   OptionCaptionML=[ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                                    ENA=Normal GST,Reverse Charge GST,Full GST,US Sales Tax];
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                   Editable=No }
    { 10  ;   ;Tax Group Code      ;Code10        ;TableRelation="Tax Group";
                                                   CaptionML=[ENU=Tax Group Code;
                                                              ENA=US Tax Group Code];
                                                   Editable=No }
    { 11  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              ENA=Quantity];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 12  ;   ;Modified            ;Boolean       ;CaptionML=[ENU=Modified;
                                                              ENA=Modified] }
    { 13  ;   ;Use Tax             ;Boolean       ;CaptionML=[ENU=Use Tax;
                                                              ENA=Use US Tax] }
    { 14  ;   ;Calculated VAT Amount;Decimal      ;CaptionML=[ENU=Calculated VAT Amount;
                                                              ENA=Calculated GST Amount];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 15  ;   ;VAT Difference      ;Decimal       ;CaptionML=[ENU=VAT Difference;
                                                              ENA=GST Difference];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 16  ;   ;Positive            ;Boolean       ;CaptionML=[ENU=Positive;
                                                              ENA=Positive] }
    { 17  ;   ;Includes Prepayment ;Boolean       ;CaptionML=[ENU=Includes Prepayment;
                                                              ENA=Includes Prepayment] }
    { 18  ;   ;VAT Clause Code     ;Code10        ;TableRelation="VAT Clause";
                                                   CaptionML=[ENU=VAT Clause Code;
                                                              ENA=GST Clause Code] }
    { 28005;  ;Full GST on Prepayment;Boolean     ;CaptionML=[ENU=Full GST on Prepayment;
                                                              ENA=Full GST on Prepayment] }
    { 28070;  ;VAT Realized        ;Decimal       ;CaptionML=[ENU=VAT Realized;
                                                              ENA=GST Realised] }
    { 28071;  ;Amount Paid         ;Decimal       ;CaptionML=[ENU=Amount Paid;
                                                              ENA=Amount Paid] }
    { 28081;  ;VAT Base (ACY)      ;Decimal       ;CaptionML=[ENU=VAT Base (ACY);
                                                              ENA=GST Base (ACY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 28082;  ;VAT Amount (ACY)    ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("VAT %");
                                                                TESTFIELD("VAT Base (ACY)");
                                                                IF "VAT Amount (ACY)" / "VAT Base (ACY)" < 0 THEN
                                                                  ERROR(Text002,FIELDCAPTION("VAT Amount (ACY)"));
                                                                "VAT Difference (ACY)" := "VAT Amount (ACY)" - "Calculated VAT Amount (ACY)";
                                                              END;

                                                   CaptionML=[ENU=VAT Amount (ACY);
                                                              ENA=GST Amount (ACY)];
                                                   AutoFormatType=1 }
    { 28083;  ;Amount Including VAT (ACY);Decimal ;CaptionML=[ENU=Amount Including VAT (ACY);
                                                              ENA=Amount Including GST (ACY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 28084;  ;Amount (ACY)        ;Decimal       ;CaptionML=[ENU=Amount (ACY);
                                                              ENA=Amount (ACY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 28085;  ;VAT Difference (ACY);Decimal       ;CaptionML=[ENU=VAT Difference (ACY);
                                                              ENA=GST Difference (ACY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 28086;  ;Calculated VAT Amount (ACY);Decimal;CaptionML=[ENU=Calculated VAT Amount (ACY);
                                                              ENA=Calculated GST Amount (ACY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
  }
  KEYS
  {
    {    ;VAT Identifier,VAT Calculation Type,Tax Group Code,Use Tax,Positive,Full GST on Prepayment;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1% VAT;ENA=%1% GST';
      Text001@1001 : TextConst 'ENU=VAT Amount;ENA=GST Amount';
      Text002@1002 : TextConst 'ENU=%1 must not be negative.;ENA=%1 must not be negative.';
      InvoiceDiscAmtIsGreaterThanBaseAmtErr@1003 : TextConst '@@@=1 Invoice Discount Amount that should be set 2 Maximum Amount that you can assign;ENU=The maximum %1 that you can apply is %2.;ENA=The maximum %1 that you can apply is %2.';
      Text004@1004 : TextConst 'ENU="%1 for %2 must not exceed %3 = %4.";ENA="%1 for %2 must not exceed %3 = %4."';
      Currency@1005 : Record 4;
      AllowVATDifference@1006 : Boolean;
      PricesIncludingVAT@1007 : Boolean;
      GlobalsInitialized@1008 : Boolean;
      Text005@1009 : TextConst 'ENU="%1 must not exceed %2 = %3.";ENA="%1 must not exceed %2 = %3."';

    PROCEDURE CheckVATDifference@11(NewCurrencyCode@1000 : Code[10];NewAllowVATDifference@1001 : Boolean;NewPricesIncludingVAT@1002 : Boolean);
    VAR
      GLSetup@1003 : Record 98;
    BEGIN
      InitGlobals(NewCurrencyCode,NewAllowVATDifference,NewPricesIncludingVAT);
      IF NOT AllowVATDifference THEN BEGIN
        TESTFIELD("VAT Difference",0);
        TESTFIELD("VAT Difference (ACY)",0);
      END;
      IF ABS("VAT Difference") > Currency."Max. VAT Difference Allowed" THEN
        IF NewCurrencyCode <> '' THEN
          ERROR(
            Text004,FIELDCAPTION("VAT Difference"),Currency.Code,
            Currency.FIELDCAPTION("Max. VAT Difference Allowed"),Currency."Max. VAT Difference Allowed")
        ELSE BEGIN
          IF GLSetup.GET THEN;
          IF ABS("VAT Difference") > GLSetup."Max. VAT Difference Allowed" THEN
            ERROR(
              Text005,FIELDCAPTION("VAT Difference"),
              GLSetup.FIELDCAPTION("Max. VAT Difference Allowed"),GLSetup."Max. VAT Difference Allowed");
        END;
    END;

    LOCAL PROCEDURE InitGlobals@4(NewCurrencyCode@1000 : Code[10];NewAllowVATDifference@1001 : Boolean;NewPricesIncludingVAT@1002 : Boolean);
    BEGIN
      SetCurrency(NewCurrencyCode);
      AllowVATDifference := NewAllowVATDifference;
      PricesIncludingVAT := NewPricesIncludingVAT;
      GlobalsInitialized := TRUE;
    END;

    LOCAL PROCEDURE SetCurrency@15(CurrencyCode@1000 : Code[10]);
    BEGIN
      IF CurrencyCode = '' THEN
        Currency.InitRoundingPrecision
      ELSE
        Currency.GET(CurrencyCode);
    END;

    PROCEDURE InsertLine@1();
    VAR
      VATAmountLine@1000 : Record 290;
      GLSetup@150000 : Record 98;
    BEGIN
      IF ("VAT Base" <> 0) OR ("Amount Including VAT" <> 0) THEN BEGIN
        Positive := "Line Amount" >= 0;
        VATAmountLine := Rec;
        IF FIND THEN BEGIN
          "Line Amount" := "Line Amount" + VATAmountLine."Line Amount";
          "Inv. Disc. Base Amount" := "Inv. Disc. Base Amount" + VATAmountLine."Inv. Disc. Base Amount";
          "Invoice Discount Amount" := "Invoice Discount Amount" + VATAmountLine."Invoice Discount Amount";
          Quantity := Quantity + VATAmountLine.Quantity;
          "VAT Base" := "VAT Base" + VATAmountLine."VAT Base";
          "Amount Including VAT" := "Amount Including VAT" + VATAmountLine."Amount Including VAT";
          "VAT Difference" := "VAT Difference" + VATAmountLine."VAT Difference";
          "VAT Amount" := "VAT Amount" + VATAmountLine."VAT Amount";
          "Amount (ACY)" := "Amount (ACY)" + VATAmountLine."Amount (ACY)";
          "VAT Base (ACY)" := "VAT Base (ACY)" + VATAmountLine."VAT Base (ACY)";
          "Amount Including VAT (ACY)" := "Amount Including VAT (ACY)" + VATAmountLine."Amount Including VAT (ACY)";
          "VAT Difference (ACY)" := "VAT Difference (ACY)" + VATAmountLine."VAT Difference (ACY)";
          "VAT Amount (ACY)" := "VAT Amount (ACY)" + VATAmountLine."VAT Amount (ACY)";
          "VAT Realized" := "VAT Realized" + VATAmountLine."VAT Realized";
          "Amount Paid" := "Amount Paid" + VATAmountLine."Amount Paid";
          "Calculated VAT Amount" := "Calculated VAT Amount" + VATAmountLine."Calculated VAT Amount";
          MODIFY;
        END ELSE BEGIN
          INSERT;
        END;
      END;
    END;

    PROCEDURE GetLine@2(Number@1000 : Integer);
    BEGIN
      IF Number = 1 THEN
        FIND('-')
      ELSE
        NEXT;
    END;

    PROCEDURE VATAmountText@3() : Text[30];
    BEGIN
      IF COUNT = 1 THEN BEGIN
        FINDFIRST;
        IF "VAT %" <> 0 THEN
          EXIT(STRSUBSTNO(Text000,"VAT %"));
      END;
      EXIT(Text001);
    END;

    PROCEDURE CopyFrom@8(VAR FromVATAmountLine@1000 : Record 290);
    BEGIN
      DELETEALL;
      IF FromVATAmountLine.FIND('-') THEN
        REPEAT
          Rec := FromVATAmountLine;
          INSERT;
        UNTIL FromVATAmountLine.NEXT = 0;
    END;

    PROCEDURE GetTotalLineAmount@10(SubtractVAT@1000 : Boolean;CurrencyCode@1001 : Code[10]) : Decimal;
    VAR
      LineAmount@1002 : Decimal;
    BEGIN
      IF SubtractVAT THEN
        SetCurrency(CurrencyCode);

      LineAmount := 0;

      IF FIND('-') THEN
        REPEAT
          IF SubtractVAT THEN
            LineAmount :=
              LineAmount + ROUND("Line Amount" / (1 + "VAT %" / 100),Currency."Amount Rounding Precision")
          ELSE
            LineAmount := LineAmount + "Line Amount";
        UNTIL NEXT = 0;

      EXIT(LineAmount);
    END;

    PROCEDURE GetTotalVATAmount@5() : Decimal;
    VAR
      VATAmount@1000 : Decimal;
    BEGIN
      VATAmount := 0;
      IF FIND('-') THEN
        REPEAT
          VATAmount := VATAmount + "VAT Amount";
        UNTIL NEXT = 0;
      EXIT(VATAmount);
    END;

    PROCEDURE GetTotalInvDiscAmount@9() : Decimal;
    VAR
      InvDiscAmount@1000 : Decimal;
    BEGIN
      InvDiscAmount := 0;
      IF FIND('-') THEN
        REPEAT
          InvDiscAmount := InvDiscAmount + "Invoice Discount Amount";
        UNTIL NEXT = 0;
      EXIT(InvDiscAmount);
    END;

    PROCEDURE GetTotalInvDiscBaseAmount@6(SubtractVAT@1000 : Boolean;CurrencyCode@1001 : Code[10]) : Decimal;
    VAR
      InvDiscBaseAmount@1002 : Decimal;
    BEGIN
      IF SubtractVAT THEN
        SetCurrency(CurrencyCode);

      InvDiscBaseAmount := 0;

      IF FIND('-') THEN
        REPEAT
          IF SubtractVAT THEN
            InvDiscBaseAmount :=
              InvDiscBaseAmount +
              ROUND("Inv. Disc. Base Amount" / (1 + "VAT %" / 100),Currency."Amount Rounding Precision")
          ELSE
            InvDiscBaseAmount := InvDiscBaseAmount + "Inv. Disc. Base Amount";
        UNTIL NEXT = 0;
      EXIT(InvDiscBaseAmount);
    END;

    PROCEDURE GetTotalVATBase@14() : Decimal;
    VAR
      VATBase@1002 : Decimal;
    BEGIN
      VATBase := 0;

      IF FIND('-') THEN
        REPEAT
          VATBase := VATBase + "VAT Base";
        UNTIL NEXT = 0;
      EXIT(VATBase);
    END;

    PROCEDURE GetTotalAmountInclVAT@17() : Decimal;
    VAR
      AmountInclVAT@1002 : Decimal;
    BEGIN
      AmountInclVAT := 0;

      IF FIND('-') THEN
        REPEAT
          AmountInclVAT := AmountInclVAT + "Amount Including VAT";
        UNTIL NEXT = 0;
      EXIT(AmountInclVAT);
    END;

    PROCEDURE GetTotalVATDiscount@19(CurrencyCode@1001 : Code[10];NewPricesIncludingVAT@1000 : Boolean) : Decimal;
    VAR
      VATDiscount@1002 : Decimal;
    BEGIN
      SetCurrency(CurrencyCode);

      VATDiscount := 0;

      IF FIND('-') THEN
        REPEAT
          IF NewPricesIncludingVAT THEN
            VATDiscount :=
              VATDiscount +
              ROUND(
                ("Line Amount" - "Invoice Discount Amount") * "VAT %" / (100 + "VAT %"),
                Currency."Amount Rounding Precision",Currency.VATRoundingDirection) -
              "VAT Amount" + "VAT Difference"
          ELSE
            VATDiscount :=
              VATDiscount +
              ROUND(
                "VAT Base" * "VAT %" / 100,
                Currency."Amount Rounding Precision",Currency.VATRoundingDirection) -
              "VAT Amount";
        UNTIL NEXT = 0;
      EXIT(VATDiscount);
    END;

    PROCEDURE GetAnyLineModified@7() : Boolean;
    BEGIN
      IF FIND('-') THEN
        REPEAT
          IF Modified THEN
            EXIT(TRUE);
        UNTIL NEXT = 0;
      EXIT(FALSE);
    END;

    PROCEDURE SetInvoiceDiscountAmount@13(NewInvoiceDiscount@1000 : Decimal;NewCurrencyCode@1001 : Code[10];NewPricesIncludingVAT@1002 : Boolean;NewVATBaseDiscPct@1005 : Decimal);
    VAR
      TotalInvDiscBaseAmount@1003 : Decimal;
      NewRemainder@1004 : Decimal;
    BEGIN
      InitGlobals(NewCurrencyCode,FALSE,NewPricesIncludingVAT);
      TotalInvDiscBaseAmount := GetTotalInvDiscBaseAmount(FALSE,Currency.Code);
      IF TotalInvDiscBaseAmount = 0 THEN
        EXIT;
      FIND('-');
      REPEAT
        IF "Inv. Disc. Base Amount" <> 0 THEN BEGIN
          IF TotalInvDiscBaseAmount = 0 THEN
            NewRemainder := 0
          ELSE
            NewRemainder :=
              NewRemainder + NewInvoiceDiscount * "Inv. Disc. Base Amount" / TotalInvDiscBaseAmount;
          IF "Invoice Discount Amount" <> ROUND(NewRemainder,Currency."Amount Rounding Precision") THEN BEGIN
            VALIDATE(
              "Invoice Discount Amount",ROUND(NewRemainder,Currency."Amount Rounding Precision"));
            CalcVATFields(NewCurrencyCode,NewPricesIncludingVAT,NewVATBaseDiscPct);
            Modified := TRUE;
            MODIFY;
          END;
          NewRemainder := NewRemainder - "Invoice Discount Amount";
        END;
      UNTIL NEXT = 0;
    END;

    PROCEDURE SetInvoiceDiscountPercent@16(NewInvoiceDiscountPct@1000 : Decimal;NewCurrencyCode@1001 : Code[10];NewPricesIncludingVAT@1002 : Boolean;CalcInvDiscPerVATID@1003 : Boolean;NewVATBaseDiscPct@1005 : Decimal);
    VAR
      NewRemainder@1004 : Decimal;
    BEGIN
      InitGlobals(NewCurrencyCode,FALSE,NewPricesIncludingVAT);
      IF FIND('-') THEN
        REPEAT
          IF "Inv. Disc. Base Amount" <> 0 THEN BEGIN
            NewRemainder :=
              NewRemainder + NewInvoiceDiscountPct * "Inv. Disc. Base Amount" / 100;
            IF "Invoice Discount Amount" <> ROUND(NewRemainder,Currency."Amount Rounding Precision") THEN BEGIN
              VALIDATE(
                "Invoice Discount Amount",ROUND(NewRemainder,Currency."Amount Rounding Precision"));
              CalcVATFields(NewCurrencyCode,NewPricesIncludingVAT,NewVATBaseDiscPct);
              "VAT Difference" := 0;
              Modified := TRUE;
              MODIFY;
            END;
            IF CalcInvDiscPerVATID THEN
              NewRemainder := 0
            ELSE
              NewRemainder := NewRemainder - "Invoice Discount Amount";
          END;
        UNTIL NEXT = 0;
    END;

    LOCAL PROCEDURE GetCalculatedVAT@12(NewCurrencyCode@1000 : Code[10];NewPricesIncludingVAT@1001 : Boolean;NewVATBaseDiscPct@1002 : Decimal) : Decimal;
    BEGIN
      IF NOT GlobalsInitialized THEN
        InitGlobals(NewCurrencyCode,FALSE,NewPricesIncludingVAT);

      IF NewPricesIncludingVAT THEN
        EXIT(
          ROUND(
            ("Line Amount" - "Invoice Discount Amount") * "VAT %" / (100 + "VAT %") * (1 - NewVATBaseDiscPct / 100),
            Currency."Amount Rounding Precision",Currency.VATRoundingDirection));

      EXIT(
        ROUND(
          ("Line Amount" - "Invoice Discount Amount") * "VAT %" / 100 * (1 - NewVATBaseDiscPct / 100),
          Currency."Amount Rounding Precision",Currency.VATRoundingDirection));
    END;

    PROCEDURE CalcVATFields@23(NewCurrencyCode@1000 : Code[10];NewPricesIncludingVAT@1001 : Boolean;NewVATBaseDiscPct@1002 : Decimal);
    BEGIN
      IF NOT GlobalsInitialized THEN
        InitGlobals(NewCurrencyCode,FALSE,NewPricesIncludingVAT);

      "VAT Amount" := GetCalculatedVAT(NewCurrencyCode,NewPricesIncludingVAT,NewVATBaseDiscPct);

      IF NewPricesIncludingVAT THEN BEGIN
        IF NewVATBaseDiscPct = 0 THEN BEGIN
          "Amount Including VAT" := "Line Amount" - "Invoice Discount Amount";
          "VAT Base" := "Amount Including VAT" - "VAT Amount";
        END ELSE BEGIN
          "VAT Base" :=
            ROUND(
              ("Line Amount" - "Invoice Discount Amount") / (1 + "VAT %" / 100),
              Currency."Amount Rounding Precision");
          "Amount Including VAT" := "VAT Base" + "VAT Amount";
        END;
      END ELSE BEGIN
        "VAT Base" := "Line Amount" - "Invoice Discount Amount";
        "Amount Including VAT" := "VAT Base" + "VAT Amount";
      END;
      "Calculated VAT Amount" := "VAT Amount";
      "VAT Difference" := 0;
      Modified := TRUE;
    END;

    PROCEDURE GetTotalLineAmountACY@1500003() : Decimal;
    VAR
      LineAmountACY@1500000 : Decimal;
    BEGIN
      LineAmountACY := 0;

      IF FIND('-') THEN
        REPEAT
          LineAmountACY := LineAmountACY + "Amount (ACY)";
        UNTIL NEXT = 0;

      EXIT(LineAmountACY);
    END;

    PROCEDURE GetTotalVATAmountACY@1500002() : Decimal;
    VAR
      VATAmountACY@1500000 : Decimal;
    BEGIN
      VATAmountACY := 0;
      IF FIND('-') THEN
        REPEAT
          VATAmountACY := VATAmountACY + "VAT Amount (ACY)";
        UNTIL NEXT = 0;
      EXIT(VATAmountACY);
    END;

    PROCEDURE GetTotalVATBaseACY@1500001() : Decimal;
    VAR
      VATBaseACY@1500000 : Decimal;
    BEGIN
      VATBaseACY := 0;

      IF FIND('-') THEN
        REPEAT
          VATBaseACY := VATBaseACY + "VAT Base (ACY)";
        UNTIL NEXT = 0;
      EXIT(VATBaseACY);
    END;

    PROCEDURE GetTotalAmountInclVATACY@1500000() : Decimal;
    VAR
      AmountInclVATACY@1500000 : Decimal;
    BEGIN
      AmountInclVATACY := 0;

      IF FIND('-') THEN
        REPEAT
          AmountInclVATACY := AmountInclVATACY + "Amount Including VAT (ACY)";
        UNTIL NEXT = 0;
      EXIT(AmountInclVATACY);
    END;

    LOCAL PROCEDURE CalcValueLCY@18(Value@1003 : Decimal;PostingDate@1006 : Date;CurrencyCode@1005 : Code[10];CurrencyFactor@1004 : Decimal) : Decimal;
    VAR
      CurrencyExchangeRate@1000 : Record 330;
    BEGIN
      EXIT(CurrencyExchangeRate.ExchangeAmtFCYToLCY(PostingDate,CurrencyCode,Value,CurrencyFactor));
    END;

    PROCEDURE GetBaseLCY@20(PostingDate@1003 : Date;CurrencyCode@1002 : Code[10];CurrencyFactor@1001 : Decimal) : Decimal;
    BEGIN
      EXIT(ROUND(CalcValueLCY("VAT Base",PostingDate,CurrencyCode,CurrencyFactor)));
    END;

    PROCEDURE GetAmountLCY@21(PostingDate@1000 : Date;CurrencyCode@1001 : Code[10];CurrencyFactor@1002 : Decimal) : Decimal;
    BEGIN
      EXIT(
        ROUND(CalcValueLCY("Amount Including VAT",PostingDate,CurrencyCode,CurrencyFactor)) -
        ROUND(CalcValueLCY("VAT Base",PostingDate,CurrencyCode,CurrencyFactor)));
    END;

    BEGIN
    END.
  }
}

