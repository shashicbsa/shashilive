OBJECT Table 1006 Job WIP Method
{
  OBJECT-PROPERTIES
  {
    Date=09/07/12;
    Time=12:00:00;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    OnDelete=VAR
               JobWIPEntry@1000 : Record 1004;
               JobWIPGLEntry@1001 : Record 1005;
               JobsSetup@1002 : Record 315;
             BEGIN
               IF "System Defined" THEN
                 ERROR(Text001,FIELDCAPTION("System Defined"));

               JobWIPEntry.SETRANGE("WIP Method Used",Code);
               JobWIPGLEntry.SETRANGE("WIP Method Used",Code);
               IF JobWIPEntry.FINDFIRST OR JobWIPGLEntry.FINDFIRST THEN
                 ERROR(Text004,JobWIPEntry.TABLECAPTION,JobWIPGLEntry.TABLECAPTION);

               JobsSetup.SETRANGE("Default WIP Method",Code);
               IF JobsSetup.FINDFIRST THEN
                 ERROR(Text006);
             END;

    CaptionML=[ENU=Job WIP Method;
               ENA=Job WIP Method];
    LookupPageID=Page1010;
    DrillDownPageID=Page1010;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;OnValidate=BEGIN
                                                                ValidateModification;
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              ENA=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                ValidateModification;
                                                              END;

                                                   CaptionML=[ENU=Description;
                                                              ENA=Description] }
    { 3   ;   ;WIP Cost            ;Boolean       ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                ValidateModification;
                                                                IF "Recognized Costs" <> "Recognized Costs"::"Usage (Total Cost)" THEN
                                                                  ERROR(Text003,FIELDCAPTION("Recognized Sales"),"Recognized Sales");
                                                              END;

                                                   CaptionML=[ENU=WIP Cost;
                                                              ENA=WIP Cost] }
    { 4   ;   ;WIP Sales           ;Boolean       ;InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                ValidateModification;
                                                                IF "Recognized Sales" <> "Recognized Sales"::"Contract (Invoiced Price)" THEN
                                                                  ERROR(Text003,FIELDCAPTION("Recognized Sales"),"Recognized Sales");
                                                              END;

                                                   CaptionML=[ENU=WIP Sales;
                                                              ENA=WIP Sales] }
    { 5   ;   ;Recognized Costs    ;Option        ;OnValidate=BEGIN
                                                                ValidateModification;
                                                                IF "Recognized Costs" <> "Recognized Costs"::"Usage (Total Cost)" THEN
                                                                  "WIP Cost" := TRUE;
                                                              END;

                                                   CaptionML=[ENU=Recognized Costs;
                                                              ENA=Recognised Costs];
                                                   OptionCaptionML=[ENU=At Completion,Cost of Sales,Cost Value,Contract (Invoiced Cost),Usage (Total Cost);
                                                                    ENA=At Completion,Cost of Sales,Cost Value,Contract (Invoiced Cost),Usage (Total Cost)];
                                                   OptionString=At Completion,Cost of Sales,Cost Value,Contract (Invoiced Cost),Usage (Total Cost) }
    { 6   ;   ;Recognized Sales    ;Option        ;OnValidate=BEGIN
                                                                ValidateModification;
                                                                IF "Recognized Sales" <> "Recognized Sales"::"Contract (Invoiced Price)" THEN
                                                                  "WIP Sales" := TRUE;
                                                              END;

                                                   CaptionML=[ENU=Recognized Sales;
                                                              ENA=Recognised Sales];
                                                   OptionCaptionML=[ENU=At Completion,Contract (Invoiced Price),Usage (Total Cost),Usage (Total Price),Percentage of Completion,Sales Value;
                                                                    ENA=At Completion,Contract (Invoiced Price),Usage (Total Cost),Usage (Total Price),Percentage of Completion,Sales Value];
                                                   OptionString=At Completion,Contract (Invoiced Price),Usage (Total Cost),Usage (Total Price),Percentage of Completion,Sales Value }
    { 7   ;   ;Valid               ;Boolean       ;InitValue=Yes;
                                                   OnValidate=VAR
                                                                JobsSetup@1000 : Record 315;
                                                              BEGIN
                                                                JobsSetup.SETRANGE("Default WIP Method",Code);
                                                                IF JobsSetup.FINDFIRST THEN
                                                                  ERROR(Text007,JobsSetup.FIELDCAPTION("Default WIP Method"));
                                                              END;

                                                   CaptionML=[ENU=Valid;
                                                              ENA=Valid] }
    { 8   ;   ;System Defined      ;Boolean       ;InitValue=No;
                                                   CaptionML=[ENU=System Defined;
                                                              ENA=System Defined];
                                                   Editable=No }
    { 9   ;   ;System-Defined Index;Integer       ;CaptionML=[ENU=System-Defined Index;
                                                              ENA=System-Defined Index];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Valid                                    }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1000 : TextConst 'ENU=You cannot delete methods that are %1.;ENA=You cannot delete methods that are %1.';
      Text002@1001 : TextConst 'ENU=You cannot modify methods that are %1.;ENA=You cannot modify methods that are %1.';
      Text003@1002 : TextConst 'ENU=You cannot modify this field when %1 is %2.;ENA=You cannot modify this field when %1 is %2.';
      Text004@1003 : TextConst 'ENU=You cannot delete methods that have entries in %1 or %2.;ENA=You cannot delete methods that have entries in %1 or %2.';
      Text005@1004 : TextConst 'ENU=You cannot modify methods that have entries in %1 or %2.;ENA=You cannot modify methods that have entries in %1 or %2.';
      Text006@1005 : TextConst 'ENU=You cannot delete the default method.;ENA=You cannot delete the default method.';
      Text007@1006 : TextConst 'ENU=This method must be valid because it is defined as the %1.;ENA=This method must be valid because it is defined as the %1.';

    LOCAL PROCEDURE ValidateModification@3();
    VAR
      JobWIPEntry@1001 : Record 1004;
      JobWIPGLEntry@1000 : Record 1005;
    BEGIN
      IF "System Defined" THEN
        ERROR(Text002,FIELDCAPTION("System Defined"));
      JobWIPEntry.SETRANGE("WIP Method Used",Code);
      JobWIPGLEntry.SETRANGE("WIP Method Used",Code);
      IF JobWIPEntry.FINDFIRST OR JobWIPGLEntry.FINDFIRST THEN
        ERROR(Text005,JobWIPEntry.TABLECAPTION,JobWIPGLEntry.TABLECAPTION);
    END;

    BEGIN
    END.
  }
}

