OBJECT Table 8616 Config. Package Field
{
  OBJECT-PROPERTIES
  {
    Date=08/16/14;
    Time=[ 6:00:00];
    Modified=Yes;
    Version List=NAVW17.10.00.36366,S-003;
  }
  PROPERTIES
  {
    CaptionML=ENU=Config. Package Field;
  }
  FIELDS
  {
    { 1   ;   ;Package Code        ;Code20        ;TableRelation="Config. Package";
                                                   CaptionML=ENU=Package Code;
                                                   NotBlank=Yes }
    { 2   ;   ;Table ID            ;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(Table));
                                                   CaptionML=ENU=Table ID;
                                                   NotBlank=Yes }
    { 3   ;   ;Field ID            ;Integer       ;TableRelation=IF (Dimension=CONST(No)) Field.No. WHERE (TableNo=FIELD(Table ID));
                                                   CaptionML=ENU=Field ID;
                                                   NotBlank=Yes }
    { 4   ;   ;Field Name          ;Text30        ;CaptionML=ENU=Field Name }
    { 5   ;   ;Field Caption       ;Text250       ;CaptionML=ENU=Field Caption }
    { 6   ;   ;Validate Field      ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT Dimension THEN BEGIN
                                                                  IF xRec."Validate Field" AND NOT "Validate Field" AND "Primary Key" THEN
                                                                    ERROR(Text000,"Field Caption");
                                                                  UpdateFieldErrors;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Validate Field }
    { 7   ;   ;Include Field       ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT Dimension THEN BEGIN
                                                                  IF xRec."Include Field" AND NOT "Include Field" AND "Primary Key" THEN
                                                                    ERROR(Text000,"Field Caption");
                                                                  "Validate Field" := "Include Field";
                                                                  UpdateFieldErrors;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Include Field }
    { 8   ;   ;Localize Field      ;Boolean       ;CaptionML=ENU=Localize Field }
    { 9   ;   ;Relation Table ID   ;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(Table));
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Relation Table ID;
                                                   Editable=No }
    { 10  ;   ;Relation Table Caption;Text250     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Name" WHERE (Object Type=CONST(Table),
                                                                                                             Object ID=FIELD(Relation Table ID)));
                                                   CaptionML=ENU=Relation Table Caption;
                                                   Editable=No }
    { 11  ;   ;Dimension           ;Boolean       ;CaptionML=ENU=Dimension;
                                                   Editable=No }
    { 12  ;   ;Primary Key         ;Boolean       ;CaptionML=ENU=Primary Key;
                                                   Editable=No }
    { 13  ;   ;Processing Order    ;Integer       ;CaptionML=ENU=Processing Order }
    { 56301;  ;Delimited Column No.;Integer       ;BlankZero=Yes;
                                                   Description=S-003 }
    { 56302;  ;Fixed Width Start At;Integer       ;MinValue=0;
                                                   BlankZero=Yes;
                                                   Description=S-003 }
    { 56303;  ;Fixed Width Length  ;Integer       ;BlankZero=Yes;
                                                   Description=S-003 }
    { 56311;  ;Field Data Type     ;Text20        ;Description=S-003 }
    { 56312;  ;Field Data Length   ;Integer       ;Description=S-003 }
  }
  KEYS
  {
    {    ;Package Code,Table ID,Field ID          ;Clustered=Yes }
    {    ;Package Code,Table ID,Include Field      }
    {    ;Package Code,Table ID,Validate Field     }
    {    ;Package Code,Table ID,Processing Order   }
    {    ;Package Code,Table ID,Delimited Column No. }
    {    ;Package Code,Table ID,Fixed Width Start At }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 is part of the primary key and must be included.';
      Text001@1001 : TextConst 'ENU=%1 value ''%2'' does not exist.';
      Text002@1003 : TextConst 'ENU=Updating validation errors';

    PROCEDURE UpdateFieldErrors@1000();
    VAR
      ConfigPackageData@1002 : Record 8615;
      ConfigPackageField@1007 : Record 8616;
      TempConfigPackageTable@1004 : TEMPORARY Record 8613;
      ConfigPackageMgt@1000 : Codeunit 8611;
      ConfigValidateMgt@1005 : Codeunit 8617;
      ConfigProgressBar@1006 : Codeunit 8615;
      RecRef@1001 : RecordRef;
      FieldRef@1003 : FieldRef;
    BEGIN
      IF NOT Dimension THEN BEGIN
        RecRef.OPEN("Table ID",TRUE);
        FieldRef := RecRef.FIELD("Field ID");

        ConfigPackageData.SETRANGE("Package Code","Package Code");
        ConfigPackageData.SETRANGE("Table ID","Table ID");
        ConfigPackageData.SETRANGE("Field ID","Field ID");
        IF ConfigPackageData.FINDSET THEN BEGIN
          ConfigProgressBar.Init(ConfigPackageData.COUNT,1,Text002);
          REPEAT
            ConfigProgressBar.Update(ConfigPackageData.Value);
            ConfigPackageMgt.CleanFieldError(ConfigPackageData);
            IF "Include Field" THEN BEGIN
              ConfigPackageMgt.FieldError(ConfigPackageData,ConfigValidateMgt.EvaluateValue(FieldRef,ConfigPackageData.Value,FALSE),0);
              IF "Validate Field" THEN BEGIN
                CLEAR(TempConfigPackageTable);
                ConfigPackageField.INIT;
                ConfigPackageField.RESET;
                ConfigPackageField.SETRANGE("Package Code","Package Code");
                ConfigPackageField.SETRANGE("Table ID","Table ID");
                ConfigPackageField.SETRANGE("Field ID","Field ID");
                IF NOT ConfigPackageMgt.ValidateFieldRelation(ConfigPackageField,TempConfigPackageTable) THEN
                  ConfigPackageMgt.FieldError(ConfigPackageData,STRSUBSTNO(Text001,FieldRef.CAPTION,ConfigPackageData.Value),0);
              END;
            END;
          UNTIL ConfigPackageData.NEXT = 0;
          ConfigProgressBar.Close;
        END;
      END;
    END;

    PROCEDURE IsDimSetIDField@3(TableID@1000 : Integer;FieldID@1001 : Integer) : Boolean;
    VAR
      ConfigValidateMgt@1002 : Codeunit 8617;
    BEGIN
      EXIT(
        (FieldID = DATABASE::"Dimension Set Entry") OR
        (ConfigValidateMgt.GetRelationTableID(TableID,FieldID) = DATABASE::"Dimension Value"));
    END;

    BEGIN
    {
      Code  | Version | Author      | Description
      -----------------------------------------------------------------------------------------------------------------------------------
      S-003   140412    4BzSoftware   Universal Data Import Export.
    }
    END.
  }
}

