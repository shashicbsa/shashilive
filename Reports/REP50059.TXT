OBJECT Report 50059 G-Port Export/Import Interface
{
  OBJECT-PROPERTIES
  {
    Date=09/10/15;
    Time=16:59:03;
    Modified=Yes;
    Version List=YIMMGexp1.0,YIMMGimp1.0,UPG13R2DEV;
  }
  PROPERTIES
  {
    ProcessingOnly=Yes;
    UseRequestPage=No;
  }
  DATASET
  {
    { 7147;    ;DataItem;                    ;
               DataItemTable=Table50018;
               DataItemTableView=SORTING(Entry No.);
               OnPreDataItem=BEGIN
                               MasterSetup.GET;
                               MasterCustomerPostingSetup.GET;
                             END;

               OnAfterGetRecord=VAR
                                  CustBankAcc@1000000000 : Record 287;
                                BEGIN
                                  IF ("Action On Line" = "Action On Line"::Insert) OR ("Action On Line" = "Action On Line"::"As Return") THEN BEGIN
                                    //For Sales. Header    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                    NewInvoiceNo1 := "Invoice No.";
                                    IF (NewInvoiceNo1 <> PreviousInvoiceNo1) OR (PreviousAction <> "Action On Line") THEN BEGIN
                                      SalesHeader.INIT;
                                      IF ((Export=TRUE) AND ("Action On Line"="Action On Line"::Insert)) OR
                                          ((Export=FALSE) AND ("Action On Line"="Action On Line"::"As Return"))
                                      THEN BEGIN
                                        SalesHeader."Document Type" := SalesHeader."Document Type"::Invoice;//new shashi credit memo to invoice
                                        IF ((Export=TRUE) AND ("Action On Line"="Action On Line"::Insert)) THEN
                                          SalesHeader."No." :=  NoSeriesMgmt.GetNextNo(MasterSetup."G-Port No. Series Export",WORKDATE,TRUE);
                                        IF ((Export=FALSE) AND ("Action On Line"="Action On Line"::"As Return")) THEN
                                          SalesHeader."No." :=  NoSeriesMgmt.GetNextNo(MasterSetup."G-Port No. Series Import",WORKDATE,TRUE);

                                         DocNo := SalesHeader."No.";
                                      END;
                                      IF ((Export=TRUE) AND ("Action On Line"="Action On Line"::"As Return")) OR
                                          ((Export=FALSE) AND ("Action On Line"="Action On Line"::Insert))
                                      THEN BEGIN
                                        SalesHeader."Document Type" := SalesHeader."Document Type"::"Credit Memo";//new shashi invoice to credit memo
                                        IF ((Export=FALSE) AND ("Action On Line"="Action On Line"::Insert)) THEN
                                          SalesHeader."No." := NoSeriesMgmt.GetNextNo(MasterSetup."G-Port No. Series Import",WORKDATE,TRUE);
                                        IF ((Export=TRUE) AND ("Action On Line"="Action On Line"::"As Return")) THEN
                                          SalesHeader."No." := NoSeriesMgmt.GetNextNo(MasterSetup."G-Port No. Series Export",WORKDATE,TRUE);
                                        DocNo := SalesHeader."No.";
                                      END;
                                      SalesHeader.INSERT(TRUE);
                                      SalesHeader."G-Port Ref No." := "Invoice No.";
                                      //PurchaseHeader.UID:=MasterSetup."G-Port Batch In-Transit";
                                      ///the above line is block for making line according to user id in Master setup for Export/Import --22-02-2010--nitin
                                      SalesHeader."New or Cancel" := "Process Flag";
                                      SalesHeader.VALIDATE("Gen. Bus. Posting Group",MasterSetup.Foreign_Bus_Posting_Group);
                                      SalesHeader.VALIDATE("VAT Bus. Posting Group",MasterSetup.Foreign_Bus_Posting_Group);
                                      SalesHeader.VALIDATE("Posting Date","B/L Date");
                                      Cust.GET("G-Port Export/Import Interface"."Customer Code");  //UPG13R2DEV
                                      SalesHeader."Entity type" := Cust."Entity type";  //UPG13R2DEV
                                      SalesHeader.VALIDATE("Sell-to Customer No.","Customer Code");
                                      SalesHeader.VALIDATE(SalesHeader."Bill-to Customer No.","Customer Code");
                                      SalesHeader."Old Vendor" := "Old Vendor";
                                      //PPNPPHDEV.begin
                                      ShipAdd.RESET;
                                      ShipAdd.SETRANGE("Customer No.",Cust."No.");
                                      ShipAdd.SETRANGE(PPN,TRUE);
                                      ShipAdd.SETRANGE("PPN Service",TRUE);
                                      IF ShipAdd.FINDSET THEN
                                        SalesHeader.VALIDATE("Ship-to Code",ShipAdd.Code);
                                      ShipAdd.RESET;
                                      ShipAdd.SETRANGE("Customer No.",Cust."No.");
                                      ShipAdd.SETRANGE(PPH,TRUE);
                                      ShipAdd.SETRANGE("PPH M/C",TRUE);
                                      IF ShipAdd.FINDSET THEN
                                        SalesHeader.VALIDATE("New NPWP No.",ShipAdd.Code);
                                      //PPNPPHDEV.end
                                      IF (Export = TRUE) THEN
                                        SalesHeader.VALIDATE(SalesHeader."Reason Code",MasterSetup."Reason (Normal)") //new shashi  old MasterSetup."Reason (Purchase as Sale)"
                                      ELSE
                                        SalesHeader.VALIDATE(SalesHeader."Reason Code",MasterSetup."Reason (Sale as Purchase)"); //new  MasterSetup."Reason (Normal)" to MasterSetup."Reason (Sale as Purchase)"
                                      IF (Export=TRUE) THEN BEGIN
                                        SalesHeader.UID := MasterSetup.DefaultDimForAdmExp;
                                        //New  Code Insert to Get the Commodity Wise Mapping
                                        GPORTImpExpInt.RESET;
                                        GPORTImpExpInt.SETRANGE(GPORTImpExpInt."Invoice No.","Invoice No.");
                                        GPORTImpExpInt.SETFILTER(GPORTImpExpInt.OriginalCommodityCode,'<>%1 & <>%2','FREIGHT','INSURANCE');
                                        IF GPORTImpExpInt.FINDFIRST THEN BEGIN
                                          CommCodeGport.RESET;
                                          IF CommCodeGport.GET(GPORTImpExpInt.OriginalCommodityCode) THEN
                                            SalesHeader.VALIDATE("Customer Posting Group",CommCodeGport."Export Group");
                                        END;
                                        //New  Code Insert to Get the Commodity Wise Mapping
                                        Cust.GET("G-Port Export/Import Interface"."Customer Code");
                                        //IF Vend."Vendor Type"=Vend."Vendor Type"::"Third Party" THEN
                                        //PurchaseHeader.VALIDATE("Vendor Posting Group",MasterCustomerPostingSetup."Vndr Pstng Grp(Vndr As Dlr) TP");
                                        // IF Vend."Vendor Type"=Vend."Vendor Type"::"Related Party" THEN
                                        // PurchaseHeader.VALIDATE("Vendor Posting Group",MasterCustomerPostingSetup."Vndr Pstng Grp(Vndr As Dlr) RP");
                                      END;
                                      //PurchaseHeader.VALIDATE("Currency Code","Currency Code");
                                      SalesHeader."Currency Code" := "G-Port Export/Import Interface"."Currency Code";




                                  //code of work

                                      {
                                      //>>SV UPG13R2DEV 25032015 Bank code must be there in header in case of purchase invoice
                                      IF (SalesHeader."Reason Code" = MasterSetup."Reason (Sale as Purchase)") THEN BEGIN
                                        ConvTableCust.RESET;
                                        IF "G-Port Export/Import Interface"."Currency Code" <> '' THEN
                                          ConvTableCust.SETRANGE(ConvTableCust.Currency,"G-Port Export/Import Interface"."Currency Code")
                                        ELSE
                                          ConvTableCust.SETRANGE(ConvTableCust.Currency,'');
                                        ConvTableCust.SETRANGE(NAV,"G-Port Export/Import Interface"."Customer Code");
                                        IF ConvTableCust.FINDFIRST THEN
                                          SalesHeader.VALIDATE("Bank Code",ConvTableCust."Bank Code");
                                      END;
                                      //<<SV UPG13R2DEV 25032015 Bank code must be there in header in case of purchase invoice
                                      }//UPG13R2DEV SV Previous code commented
                                      //>> UPG13R2DEV SV.begin
                                      IF (SalesHeader."Reason Code" = MasterSetup."Reason (Sale as Purchase)") THEN BEGIN
                                        ConvTableCust.RESET;
                                        IF "G-Port Export/Import Interface"."Currency Code" <> '' THEN
                                          ConvTableCust.SETRANGE(ConvTableCust.Currency,"G-Port Export/Import Interface"."Currency Code")
                                        ELSE
                                          ConvTableCust.SETRANGE(ConvTableCust.Currency,'');

                                        ConvTableCust.SETRANGE(NAV,"G-Port Export/Import Interface"."Customer Code");
                                        IF ConvTableCust.FINDFIRST THEN BEGIN
                                          CustBankAcc.RESET;
                                          CustBankAcc.SETRANGE("Customer No.",ConvTableCust.NAV);
                                          CustBankAcc.SETRANGE(Purchase,TRUE);
                                          IF ("G-Port Export/Import Interface"."Currency Code" = '') OR ("G-Port Export/Import Interface"."Currency Code" = 'IDR') THEN
                                            CustBankAcc.SETRANGE("Currency Code",'')
                                          ELSE
                                            CustBankAcc.SETRANGE("Currency Code","G-Port Export/Import Interface"."Currency Code");
                                          IF CustBankAcc.FINDSET THEN
                                            SalesHeader.VALIDATE("Bank Code",CustBankAcc.Code);
                                        END;
                                      END;
                                      //<<UPG13R2DEV SV.end







                                      CurrencyExchangeRate.RESET;
                                      CurrencyExchangeRate.SETRANGE("Currency Code","Currency Code");
                                      CurrencyExchangeRate.SETRANGE("Starting Date","B/L Date");
                                      IF CurrencyExchangeRate.FINDFIRST THEN
                                        //SalesHeader."Currency Factor" := 1/CurrencyExchangeRate."Relational Exch. Rate Amount"; //UPG13R2DEV
                                        SalesHeader."Currency Factor" := ROUND(1/CurrencyExchangeRate."Relational Exch. Rate Amount",0.000000000000001,'=');  //UPG13R2DEV
                                        //PurchaseHeader.VALIDATE("Document Date","Transaction Date");
                                      SalesHeader."Document Date" := "B/L Date";
                                      IF (Export = TRUE) THEN BEGIN
                                        IF ("Action On Line" = "Action On Line"::Insert) THEN
                                          SalesHeader."Vendor Order No.":="External No.";

                                        IF ("Action On Line" = "Action On Line"::"As Return") THEN BEGIN
                                          SalesHeader."Applies-to Doc. Type" := SalesHeader."Applies-to Doc. Type"::Invoice; //new shashi credt memo to inv
                                          SalesHeader.VALIDATE("Applies-to Doc. No.","Applies To Doc No.");
                                        END;
                                      END ELSE BEGIN
                                        IF ("Action On Line"="Action On Line"::Insert) THEN
                                          //SalesHeader."Vendor Invoice No." := DocNo;
                                            SalesHeader."External Document No." := DocNo;
                                        IF ("Action On Line"="Action On Line"::"As Return") THEN BEGIN
                                          SalesHeader."Applies-to Doc. Type" := SalesHeader."Applies-to Doc. Type"::"Credit Memo";//new  shashi inv to cr memo
                                          SalesHeader.VALIDATE("Applies-to Doc. No.","Applies To Doc No.");
                                        END;
                                      END;
                                      SalesHeader."B/L Date" := "G-Port Export/Import Interface"."B/L Date";
                                      SalesHeader.VALIDATE("Payment Terms Code","Payment Term");
                                      IF ("Action On Line" = "Action On Line"::Insert) THEN BEGIN
                                        IF PaymentTerms.GET("Payment Term") THEN
                                          DueDate:=CALCDATE(PaymentTerms."Due Date Calculation","B/L Date");
                                        SalesHeader."Due Date" := SalesHeader."Due Date";
                                      END;
                                      IF ("Action On Line"="Action On Line"::"As Return") THEN
                                        SalesHeader."Due Date" := "B/L Date";

                                      SalesHeader."Type Of Transaction" := SalesHeader."Type Of Transaction"::Gport;
                                      IF Export = TRUE THEN
                                        SalesHeader."Vendor Cr. Memo No." := DocNo
                                      ELSE
                                        //SalesHeader."Vendor Invoice No.":= DocNo;//new   shashi
                                        SalesHeader."External Document No." := DocNo;
                                      SalesHeader."Posting No." := DocNo;
                                      SalesHeader.Interfaced := TRUE;
                                      IF (Export = FALSE) THEN
                                        SalesHeader.UID := MasterSetup."G-Port Import UID";
                                      SalesHeader.MODIFY;
                                      LineNo:=0;
                                    END;
                                    //For Sales. Header    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

                                    /////////////////////////////////////////////////////////////////////////////////       //For sales . Line
                                    IF ((Export = TRUE) AND ("Action On Line" = "Action On Line"::Insert)) OR
                                        ((Export=FALSE) AND ("Action On Line"="Action On Line"::"As Return"))
                                    THEN
                                      SalesLine."Document Type" := SalesLine."Document Type"::Invoice; //new  shashi "credit memo" to invoice
                                    IF ((Export=TRUE) AND ("Action On Line"="Action On Line"::"As Return")) OR
                                        ((Export=FALSE) AND ("Action On Line"="Action On Line"::Insert))
                                    THEN
                                      SalesLine."Document Type" := SalesLine."Document Type"::"Credit Memo";  //shashi  invoice to credit memo
                                    LineNo+=10000;
                                    SalesLine.INIT;
                                    SalesLine."Document No." := DocNo;
                                    SalesLine."Line No." := LineNo;
                                    SalesLine.INSERT(TRUE);
                                    SalesLine.VALIDATE(Type,SalesLine.Type::"G/L Account");
                                    IF Export = TRUE THEN BEGIN
                                      SalesLine.VALIDATE("No.","Commodity Code Export");
                                    END ELSE BEGIN
                                      IF ("Commodity Code Import"='FREIGHT') OR ("Commodity Code Import"='INSURANCE') THEN BEGIN
                                        GPortExportImportInterface.RESET;
                                        GPortExportImportInterface.SETRANGE("Invoice No.","Invoice No.");
                                        GPortExportImportInterface.SETFILTER("Commodity Code Import",'<>%1 & <>%2','FREIGHT','INSURANCE');
                                        IF GPortExportImportInterface.FINDFIRST THEN BEGIN
                                          CommodityCodeGPort.GET(GPortExportImportInterface."Commodity Code Import");
                                          IF ("Commodity Code Import"='FREIGHT') THEN
                                            COmmodityCode4Import:=CommodityCodeGPort."Purch Frght InTrnst Acc No";
                                          IF ("Commodity Code Import"='INSURANCE') THEN
                                            COmmodityCode4Import:=CommodityCodeGPort."Purch Insrnc InTrnst Acc No";
                                        END;
                                      END ELSE BEGIN
                                        CommodityCodeGPort.GET("Commodity Code Import");
                                        COmmodityCode4Import:=CommodityCodeGPort."Purch. In-Transit Acc. No.";
                                      END;
                                      SalesLine.VALIDATE("No.",COmmodityCode4Import);
                                    END;
                                    SalesLine."Description 2" := "External No.";
                                    SalesLine.VALIDATE(Quantity,1);
                                    SalesLine.VALIDATE(SalesLine."Unit Price",Amount);
                                    SalesLine.VALIDATE("Shortcut Dimension 1 Code","G-Port Export/Import Interface"."Shop Code");
                                    //  PurchaseLine.VALIDATE("Shortcut Dimension 2 Code","Model Code");
                                    IF "VAT Flag" = TRUE THEN BEGIN
                                      SalesLine."Gen. Bus. Posting Group" := MasterSetup.Foreign_Bus_Posting_Group;
                                      SalesLine."Gen. Prod. Posting Group" := 'VAT';
                                      SalesLine."VAT Bus. Posting Group" := MasterSetup.Foreign_Bus_Posting_Group;
                                      //UPG13R2DEV.begin
                                      IF (SalesLine."Document Type" = SalesLine."Document Type"::"Credit Memo") THEN BEGIN // Invoice to "Credit Memo"
                                        //SalesLine."VAT Prod. Posting Group" := MasterSetup."VAT Prod. Posting Gr"
                                        TaxMapping.SETRANGE(TaxMapping."Interface Tax",MasterSetup."VAT Prod. Posting Gr");
                                        IF TaxMapping.FINDFIRST THEN
                                          SalesLine.VALIDATE("VAT Prod. Posting Group",TaxMapping."Purch. Inv. Tax");
                                      END ELSE
                                        //SalesLine."VAT Prod. Posting Group" := 'PURRT 10';
                                        SalesLine."VAT Prod. Posting Group" := 'VAT 10';
                                        //UPG13R2DEV.end
                                    END ELSE BEGIN
                                      SalesLine."VAT Bus. Posting Group" := MasterSetup.Foreign_Bus_Posting_Group;
                                      SalesLine."Gen. Bus. Posting Group" := MasterSetup.Foreign_Bus_Posting_Group;
                                      SalesLine."Gen. Prod. Posting Group" := 'NO VAT';
                                      //UP13R2DEV.begin
                                      IF (SalesLine."Document Type" = SalesLine."Document Type"::"Credit Memo") THEN  // Invoice to "Credit Memo"
                                        //SalesLine."VAT Prod. Posting Group" := 'NO VAT'
                                        SalesLine."VAT Prod. Posting Group" := 'SLRT_NOVAT'
                                      ELSE
                                        //SalesLine."VAT Prod. Posting Group" := 'PRRT_NOVAT';
                                        SalesLine."VAT Prod. Posting Group" := 'NO VAT';
                                      //UP13R2DEV.end
                                    END;
                                    SalesLine.Narration := "Invoice No."+'-'+"Model Code"+'-'+COPYSTR(Narration,1,15);
                                    SalesLine.Interfaced := TRUE;
                                    SalesLine.MODIFY;
                                    PreviousInvoiceNo1:="Invoice No.";
                                    PreviousAction:="Action On Line";
                                  END;
                                  /////////////////////////////////////////////////////////////////////                            //For sales. Line
                                  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                  IF "Action On Line" = "Action On Line"::Modify THEN BEGIN
                                    SalesHeader.RESET;
                                    SalesHeader.SETRANGE("G-Port Ref No.","Invoice No.");
                                    IF (SalesHeader.FINDLAST) AND (SalesHeader."New or Cancel" = SalesHeader."New or Cancel"::New) THEN BEGIN
                                      IF Export = TRUE THEN
                                        SalesHeader."Applies-to Doc. Type" := SalesHeader."Applies-to Doc. Type"::Invoice   //shashi "Credit Memo" to invoice
                                      ELSE SalesHeader."Applies-to Doc. Type" := SalesHeader."Applies-to Doc. Type"::"Credit Memo";    //shashi inv to credit memo
                                        //PurchaseHeader.VALIDATE("Applies-to Doc. No.","Invoice No.");
                                        SalesHeader."New or Cancel" := SalesHeader."New or Cancel"::Cancel;
                                      SalesHeader.MODIFY;
                                    END;
                                    //SHASHI MIMPIND002-001-1504-003
                                    PreviousInvoiceNo1 := "Invoice No.";
                                    PreviousAction := "Action On Line";
                                    //SHASHI MIMPIND002-001-1504-003
                                  END;
                                  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                  IF "Action On Line" = "Action On Line"::"As Cancel" THEN BEGIN
                                    NewInvoiceNo2 := "Invoice No.";
                                  //////////////////////////////////////////////////////////////////////      //For Sales. Header
                                  IF NewInvoiceNo2 <> PreviousInvoiceNo2 THEN BEGIN
                                    SalesHeader.INIT;
                                    IF Export = TRUE THEN BEGIN
                                      SalesHeader."Document Type" := SalesHeader."Document Type"::Invoice; //shashi cr memo to invoice
                                      SalesHeader."No." := NoSeriesMgmt.GetNextNo(MasterSetup."G-Port No. Series Export",WORKDATE,TRUE);
                                      DocNo := SalesHeader."No.";
                                    END;
                                    IF Export=FALSE THEN BEGIN
                                      SalesHeader."Document Type" := SalesHeader."Document Type"::"Credit Memo"; //shashi invoice to credit memo
                                      SalesHeader."No." := NoSeriesMgmt.GetNextNo(MasterSetup."G-Port No. Series Import",WORKDATE,TRUE);
                                      DocNo := SalesHeader."No.";
                                    END;
                                    SalesHeader.INSERT(TRUE);
                                    SalesHeader."G-Port Ref No." := "Invoice No.";
                                    SalesHeader."New or Cancel" := "Process Flag";
                                    SalesHeader."Posting Date" := "B/L Date";
                                    SalesHeader."Sell-to Customer No." := "Customer Code";
                                    SalesHeader."Old Vendor" := "Old Vendor";
                                    SalesHeader.VALIDATE("Gen. Bus. Posting Group",MasterSetup.Foreign_Bus_Posting_Group);
                                    SalesHeader.VALIDATE("VAT Bus. Posting Group",MasterSetup.Foreign_Bus_Posting_Group);
                                    IF (Export=TRUE) THEN
                                      SalesHeader.VALIDATE(SalesHeader."Reason Code",MasterSetup."Reason (Normal)") //new     shashi MasterSetup."Reason (Purchase as Sale)" to normal
                                    ELSE
                                      SalesHeader.VALIDATE(SalesHeader."Reason Code",MasterSetup."Reason (Sale as Purchase)");  //new  shashi MasterSetup."Reason (Normal)" to ,MasterSetup."Reason (Sale as Purchase)
                                    IF (Export=TRUE) THEN BEGIN
                                      GPORTImpExpInt.RESET;
                                      GPORTImpExpInt.SETRANGE(GPORTImpExpInt."Invoice No.","Invoice No.");
                                      GPORTImpExpInt.SETFILTER(GPORTImpExpInt.OriginalCommodityCode,'<>%1 & <>%2','FREIGHT','INSURANCE');
                                      IF GPORTImpExpInt.FINDFIRST THEN BEGIN
                                        CommCodeGport.RESET;
                                        IF CommCodeGport.GET(GPORTImpExpInt.OriginalCommodityCode) THEN
                                          SalesHeader.VALIDATE("Customer Posting Group",CommCodeGport."Export Group");
                                      END;
                                      //Vend.GET("Customer Code");
                                      //IF Vend."Vendor Type"=Vend."Vendor Type"::"Third Party" THEN
                                      // PurchaseHeader."Vendor Posting Group":=MasterCustomerPostingSetup."Vndr Pstng Grp(Vndr As Dlr) TP";
                                      // IF Vend."Vendor Type"=Vend."Vendor Type"::"Related Party" THEN
                                      // PurchaseHeader."Vendor Posting Group":=MasterCustomerPostingSetup."Vndr Pstng Grp(Vndr As Dlr) RP";
                                      SalesHeader.VALIDATE("Gen. Bus. Posting Group",MasterSetup.Foreign_Bus_Posting_Group);
                                      SalesHeader.VALIDATE("VAT Bus. Posting Group",MasterSetup.Foreign_Bus_Posting_Group);
                                    END;
                                    SalesHeader."Currency Code" := "Currency Code";
                                    //>>UPG13R2DEV SV.begin
                                    IF (SalesHeader."Reason Code" = MasterSetup."Reason (Sale as Purchase)") THEN BEGIN
                                      ConvTableCust.RESET;
                                      IF "G-Port Export/Import Interface"."Currency Code" <> '' THEN
                                        ConvTableCust.SETRANGE(ConvTableCust.Currency,"G-Port Export/Import Interface"."Currency Code")
                                      ELSE
                                        ConvTableCust.SETRANGE(ConvTableCust.Currency,'');
                                      ConvTableCust.SETRANGE(NAV,"G-Port Export/Import Interface"."Customer Code");
                                      IF ConvTableCust.FINDFIRST THEN BEGIN
                                        CustBankAcc.RESET;
                                        CustBankAcc.SETRANGE("Customer No.",ConvTableCust.NAV);
                                        CustBankAcc.SETRANGE(Purchase,TRUE);
                                        IF CustBankAcc.FINDSET THEN
                                          SalesHeader.VALIDATE("Bank Code",CustBankAcc.Code);
                                      END;
                                    END;
                                    //<<UPG13R2DEV SV.end


                                    CurrencyExchangeRate.RESET;
                                    CurrencyExchangeRate.SETRANGE("Currency Code","Currency Code");
                                    CurrencyExchangeRate.SETRANGE("Starting Date","B/L Date");
                                    IF CurrencyExchangeRate.FINDFIRST THEN
                                      SalesHeader."Currency Factor" := 1/CurrencyExchangeRate."Relational Exch. Rate Amount";
                                    PurchaseHeader."Document Date" := "B/L Date";
                                    IF (Export=TRUE) THEN BEGIN
                                      SalesHeader."Vendor Order No." := "External No.";
                                      SalesHeader."Applies-to Doc. Type" := SalesHeader."Applies-to Doc. Type"::Invoice; //shashi credit memo to inv
                                      SalesHeader."Applies-to Doc. No." := "Applies To Doc No.";
                                    END ELSE BEGIN
                                      //SalesHeader."Vendor Invoice No." := DocNo;
                                      SalesHeader."External Document No." := DocNo;
                                      SalesHeader."Applies-to Doc. Type" := SalesHeader."Applies-to Doc. Type"::"Credit Memo";// shashi inv to credit memo
                                      SalesHeader."Applies-to Doc. No." := "Applies To Doc No.";
                                    END;
                                    SalesHeader."B/L Date" := "B/L Date";
                                    SalesHeader."Type Of Transaction" := SalesHeader."Type Of Transaction"::Gport;
                                    IF Export=TRUE THEN
                                      SalesHeader."Vendor Cr. Memo No.":=DocNo
                                    ELSE
                                      //SalesHeader."Vendor Invoice No.":=DocNo;
                                      SalesHeader."External Document No." := DocNo;
                                    SalesHeader."Posting No.":=DocNo;
                                    SalesHeader.UID:=USERID;
                                    SalesHeader.Interfaced:=TRUE;
                                    SalesHeader.MODIFY;
                                    LineNo:=0;
                                  END;
                                  //////////////////////////////////////////////////////////////////////      //For Sales. Header

                                  /////////////////////////////////////////////////////////////////////       //For sales. Line
                                  IF Export = TRUE THEN
                                    SalesLine."Document Type" := SalesLine."Document Type"::Invoice; //shashi "Credit Memo" to inv
                                  IF Export = FALSE THEN
                                    SalesLine."Document Type" := SalesLine."Document Type"::"Credit Memo";  //shashi inv to "Credit Memo"
                                  LineNo += 10000;
                                  SalesLine.INIT;
                                  SalesLine."Document No." := DocNo;
                                  SalesLine."Line No." := LineNo;
                                  SalesLine.INSERT;
                                  SalesLine.Type := PurchaseLine.Type::"G/L Account";
                                  IF Export=TRUE THEN BEGIN
                                    SalesLine."No." := "Commodity Code Export";
                                  END ELSE BEGIN
                                    IF ("Commodity Code Import"='FREIGHT') OR ("Commodity Code Import"='INSURANCE') THEN BEGIN
                                      GPortExportImportInterface.RESET;
                                      GPortExportImportInterface.SETRANGE("Invoice No.","Invoice No.");
                                      GPortExportImportInterface.SETFILTER("Commodity Code Import",'<>%1 & <>%2','FREIGHT','INSURANCE');
                                      IF GPortExportImportInterface.FINDFIRST THEN BEGIN
                                        CommodityCodeGPort.GET(GPortExportImportInterface."Commodity Code Import");
                                        IF ("Commodity Code Import"='FREIGHT') THEN
                                          COmmodityCode4Import:=CommodityCodeGPort."Purch Frght InTrnst Acc No";
                                        IF ("Commodity Code Import"='INSURANCE') THEN
                                          COmmodityCode4Import:=CommodityCodeGPort."Purch Insrnc InTrnst Acc No";
                                      END;
                                    END ELSE BEGIN
                                      CommodityCodeGPort.GET("Commodity Code Import");
                                      COmmodityCode4Import:=CommodityCodeGPort."Purch. In-Transit Acc. No.";
                                    END;
                                    SalesLine."No.":=COmmodityCode4Import;
                                  END;
                                  SalesLine."Description 2" := "External No.";
                                  SalesLine.Quantity := 1;
                                  SalesLine."Unit Price" := Amount;
                                  //PurchaseLine."Shortcut Dimension 1 Code":="Shop Code";
                                  //PurchaseLine."Shortcut Dimension 2 Code":="Model Code";
                                  IF "VAT Flag" = TRUE THEN BEGIN
                                    SalesLine."VAT Bus. Posting Group" := MasterSetup.Foreign_Bus_Posting_Group;
                                    SalesLine."Gen. Bus. Posting Group" := MasterSetup.Foreign_Bus_Posting_Group;
                                    SalesLine."Gen. Prod. Posting Group" := 'VAT';
                                    //UPG13R2DEV.begin
                                    IF (SalesLine."Document Type" = SalesLine."Document Type"::"Credit Memo") THEN  //Invoice to "Credit Memo"
                                      //SalesLine."VAT Prod. Posting Group" := 'VAT 10'
                                      SalesLine."VAT Prod. Posting Group" := 'SALRT 10'
                                    ELSE
                                      //SalesLine."VAT Prod. Posting Group" := 'PURRT 10';
                                      SalesLine."VAT Prod. Posting Group" := 'VAT 10';
                                      //UPG13R2DEV.end
                                  END ELSE BEGIN
                                    SalesLine."VAT Bus. Posting Group" := MasterSetup.Foreign_Bus_Posting_Group;
                                    SalesLine."Gen. Bus. Posting Group" := MasterSetup.Foreign_Bus_Posting_Group;
                                    SalesLine."Gen. Prod. Posting Group" := 'NO VAT';
                                    //UPG13R2DEV.begin
                                    IF (SalesLine."Document Type" = SalesLine."Document Type"::"Credit Memo") THEN  //Invoice to "Credit Memo"
                                      //SalesLine."VAT Prod. Posting Group" := 'NO VAT'
                                      SalesLine."VAT Prod. Posting Group" := 'SLRT_NOVAT'
                                    ELSE
                                      //SalesLine."VAT Prod. Posting Group" := 'PRRT_NOVAT';
                                      SalesLine."VAT Prod. Posting Group" := 'NO VAT';
                                      //UPG13R2DEV.end
                                  END;
                                    SalesLine.Narration := "Invoice No."+'-'+"Model Code"+'-'+COPYSTR(Narration,1,15);
                                    SalesLine.Interfaced := TRUE;
                                    SalesLine.MODIFY;
                                    PreviousInvoiceNo2:="Invoice No.";
                                    END;
                                    /////////////////////////////////////////////////////////////////////       //For sales. Line
                                END;

               OnPostDataItem=BEGIN
                                DELETEALL;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      PurchaseHeader@1000000000 : Record 38;
      PurchaseLine@1000000001 : Record 39;
      LineNo@1000000002 : Integer;
      PreviousInvoiceNo1@1000000003 : Code[20];
      NewInvoiceNo1@1000000004 : Code[20];
      MasterSetup@1000000005 : Record 50008;
      MasterCustomerPostingSetup@1000000008 : Record 50012;
      PaymentTerms@1000000007 : Record 3;
      COmmodityCode4Import@1000000010 : Code[20];
      DueDate@1000000006 : Date;
      CommodityCodeGPort@1000000011 : Record 50019;
      NoSeriesMgmt@1000000012 : Codeunit 396;
      DocNo@1000000013 : Code[20];
      CommodityCode4Export@1000000014 : Code[20];
      Vend@1000000015 : Record 23;
      GPortExportImportInterface@1000000016 : Record 50018;
      PreviousInvoiceNo2@1000000017 : Code[20];
      NewInvoiceNo2@1000000009 : Code[20];
      CurrencyExchangeRate@1000000018 : Record 330;
      PreviousAction@1000000019 : 'Insert,Modify,As Return,As Cancel';
      CommCodeGport@1000000021 : Record 50019;
      GPORTImpExpInt@1000000020 : Record 50018;
      ">>shashi"@1102159001 : Code[10];
      SalesHeader@1102159002 : Record 36;
      Cust@1102159003 : Record 18;
      SalesLine@1102159004 : Record 37;
      TaxMapping@1102159005 : Record 60059;
      SV@1102159006 : Text;
      ConvTableCust@1102159007 : Record 50004;
      ShipAdd@1102159008 : Record 222;

    BEGIN
    {
      //UPG13R2DEV
      1.SV Customize for  sales from purchase upgrade
      2.Vat Product Posting Group flow modified.Also,VAT is mapped with a new Tax Mapping Table as per new VAT Product Posting Gr structure used for Single Master Concept.
      3."Entity Type" field is inserted before validating "Sell-to Customer No.".
      4.Currency Factor is rounded off upto 15 Decimal Places.

      SV UPG13R2DEV 25032015 Bank code must be there in header in case of purchase invoice
      //UPG13R2DEV  SV Bank code new validation
      service incident MIMPIND002-001-1504-003 shashi
    }
    END.
  }
  RDLDATA
  {
  }
}

