OBJECT Report 11605 Export BAS Setup to Excel
{
  OBJECT-PROPERTIES
  {
    Date=09/07/12;
    Time=12:00:00;
    Version List=NAVAPAC7.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Export BAS Setup to Excel;
               ENA=Export BAS Setup to Excel];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  ExcelBuf.LOCKTABLE;
                END;

  }
  DATASET
  {
    { 8531;    ;DataItem;                    ;
               DataItemTable=Table11600;
               OnPreDataItem=BEGIN
                               ExcelBuf.DELETEALL;
                               RowNo := 1;
                               EnterCell(RowNo,1,Text006,TRUE,FALSE,'',ExcelBuf."Cell Type"::Text);
                               EnterCell(RowNo,2,'',FALSE,FALSE,'',ExcelBuf."Cell Type"::Text);
                               RowNo := RowNo + 1;
                               EnterFilterInCell(GETFILTER("Setup Name"),FIELDCAPTION("Setup Name"));
                               EnterFilterInCell(FORMAT(Selection),'Include GST Entries');
                               EnterFilterInCell(FORMAT(PeriodSelection),'Include GST Entries');
                               EnterFilterInCell(FORMAT(ExcludeClosingEntries),'ExcludeClosingEntries');

                               RowNo := RowNo + 2;
                               HeaderRowNo := RowNo;
                               EnterCell(HeaderRowNo,1,FIELDCAPTION("Row No."),TRUE,FALSE,'',ExcelBuf."Cell Type"::Text);
                               EnterCell(HeaderRowNo,2,FIELDCAPTION("Field Label No."),TRUE,FALSE,'',ExcelBuf."Cell Type"::Text);
                               EnterCell(HeaderRowNo,3,FIELDCAPTION("Field Description"),TRUE,FALSE,'',ExcelBuf."Cell Type"::Text);
                               EnterCell(HeaderRowNo,4,FIELDCAPTION(Type),TRUE,FALSE,'',ExcelBuf."Cell Type"::Text);
                               EnterCell(HeaderRowNo,5,FIELDCAPTION("Amount Type"),TRUE,FALSE,'',ExcelBuf."Cell Type"::Text);
                               EnterCell(HeaderRowNo,6,FIELDCAPTION("GST Bus. Posting Group"),TRUE,FALSE,'',ExcelBuf."Cell Type"::Text);
                               EnterCell(HeaderRowNo,7,FIELDCAPTION("GST Prod. Posting Group"),TRUE,FALSE,'',ExcelBuf."Cell Type"::Text);
                               EnterCell(HeaderRowNo,8,'Column Amount',TRUE,FALSE,'',ExcelBuf."Cell Type"::Text);

                               SETFILTER(
                                 "Date Filter",
                                 BASUpdate.GetPeriodFilter(PeriodSelection,BASCalcSheet.A3,BASCalcSheet.A4));
                             END;

               OnAfterGetRecord=BEGIN
                                  RowNo := RowNo + 1;
                                  EnterCell(RowNo,1,"Row No.",FALSE,FALSE,'',ExcelBuf."Cell Type"::Text);
                                  EnterCell(RowNo,2,"Field Label No.",FALSE,FALSE,'',ExcelBuf."Cell Type"::Text);
                                  EnterCell(RowNo,3,"Field Description",FALSE,FALSE,'',ExcelBuf."Cell Type"::Text);
                                  EnterCell(RowNo,4,FORMAT(Type),FALSE,FALSE,'',ExcelBuf."Cell Type"::Text);
                                  EnterCell(RowNo,5,FORMAT("Amount Type"),FALSE,FALSE,'',ExcelBuf."Cell Type"::Text);
                                  EnterCell(RowNo,6,"GST Bus. Posting Group",FALSE,FALSE,'',ExcelBuf."Cell Type"::Text);
                                  EnterCell(RowNo,7,"GST Prod. Posting Group",FALSE,FALSE,'',ExcelBuf."Cell Type"::Text);
                                  BASUpdate.InitializeRequest(BASCalcSheet,FALSE,Selection,PeriodSelection,ExcludeClosingEntries);
                                  IF NOT BASCalcSheet.Exported THEN
                                    BASUpdate.CalcLineTotal("BAS Setup",ColumnValue,0)
                                  ELSE
                                    BASUpdate.CalcExportLineTotal("BAS Setup",ColumnValue,0,DocumentNo,VersionNo);
                                  IF "Print with" = "Print with"::"Opposite Sign" THEN
                                    ColumnValue := -ColumnValue;
                                  IF ColumnValue = 0 THEN
                                    EnterCell(RowNo,8,'',FALSE,FALSE,'',ExcelBuf."Cell Type"::Text)
                                  ELSE
                                    EnterCell(RowNo,8,FORMAT(ColumnValue),FALSE,FALSE,'',ExcelBuf."Cell Type"::Number);
                                END;

               OnPostDataItem=BEGIN
                                ExcelBuf.CreateBook(ExcelBuf.GetExcelReference(11600));
                                ExcelBuf.CreateRangeName(ExcelBuf.GetExcelReference(8),1,HeaderRowNo + 1);
                                ExcelBuf.WriteSheet(PADSTR(STRSUBSTNO('%1',"Setup Name"),30),COMPANYNAME,USERID);
                                ExcelBuf.CloseBook;
                                ExcelBuf.OpenExcel;
                                ExcelBuf.GiveUserControl;
                              END;

               CalcFields=Field Label No.,Field Description }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ExcelBuf@1016 : TEMPORARY Record 370;
      BASUpdate@1500000 : Report 11604;
      BASCalcSheet@1500005 : Record 11601;
      RowNo@1024 : Integer;
      HeaderRowNo@1500006 : Integer;
      ExcludeClosingEntries@1500002 : Boolean;
      Selection@1500004 : 'Open,Closed,Open and Closed';
      PeriodSelection@1500003 : 'Before and Within Period,Within Period';
      ColumnValue@1500001 : Decimal;
      Text006@1500007 : TextConst 'ENU=Export Filters;ENA=Export Filters';
      DocumentNo@1500008 : Code[11];
      VersionNo@1500009 : Integer;

    LOCAL PROCEDURE EnterCell@3(RowNo@1000 : Integer;ColumnNo@1001 : Integer;CellValue@1002 : Text[250];Bold@1003 : Boolean;UnderLine@1004 : Boolean;NumberFormat@1005 : Text[30];CellType@150000 : Option);
    BEGIN
      ExcelBuf.INIT;
      ExcelBuf.VALIDATE("Row No.",RowNo);
      ExcelBuf.VALIDATE("Column No.",ColumnNo);
      ExcelBuf."Cell Value as Text" := CellValue;
      ExcelBuf.Formula := '';
      ExcelBuf.Bold := Bold;
      ExcelBuf.Underline := UnderLine;
      ExcelBuf.NumberFormat := NumberFormat;
      ExcelBuf."Cell Type" := CellType;
      ExcelBuf.INSERT;
    END;

    PROCEDURE SetValues@1450000(VAR NewBASCalcSheet@1450000 : Record 11601;NewSelection@1450001 : 'Open,Closed,Open and Closed';NewPeriodSelection@1450002 : 'Before and Within Period,Within Period';NewExcludeClosingEntries@1450003 : Boolean;NewDocumentNo@1500000 : Code[11];NewVersionNo@1500001 : Integer);
    BEGIN
      BASCalcSheet.COPY(NewBASCalcSheet);
      Selection := NewSelection;
      PeriodSelection := NewPeriodSelection;
      ExcludeClosingEntries := NewExcludeClosingEntries;
      DocumentNo := NewDocumentNo;
      VersionNo := NewVersionNo;
    END;

    LOCAL PROCEDURE EnterFilterInCell@5(Filter@1000 : Text[250];FieldName@1001 : Text[100]);
    BEGIN
      IF Filter <> '' THEN BEGIN
        RowNo := RowNo + 1;
        EnterCell(RowNo,2,FieldName,TRUE,FALSE,'',ExcelBuf."Cell Type"::Text);
        EnterCell(RowNo,3,Filter,FALSE,FALSE,'',ExcelBuf."Cell Type"::Text);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

