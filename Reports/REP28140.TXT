OBJECT Report 28140 Adjust Settlement Exch. Rates
{
  OBJECT-PROPERTIES
  {
    Date=09/07/12;
    Time=12:00:00;
    Version List=NAVAPAC7.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Adjust Settlement Exch. Rates;
               ENA=Adjust Settlement Exch. Rates];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF PostingDocNo = '' THEN
                    ERROR(Text000,GenJnlLine.FIELDCAPTION("Document No."));
                END;

  }
  DATASET
  {
    { 4146;    ;DataItem;                    ;
               DataItemTable=Table4;
               DataItemTableView=SORTING(Code);
               OnPreDataItem=BEGIN
                               Window.OPEN(
                                 Text002 +
                                 Text003 +
                                 Text010);
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrExchRate.RESET;
                                  CurrExchRate.SETRANGE("Currency Code",Code);
                                  CurrExchRate.SETRANGE("Starting Date",0D,StartDate);
                                  IF CurrExchRate.FINDLAST THEN BEGIN
                                    IF CurrExchRate."Relational Currency Code" <> '' THEN BEGIN
                                      IF UseDailyRate THEN BEGIN
                                        SettRate := CurrExchRate."Settlement Rate Amount";
                                        RelSettRate := CurrExchRate."Relational Sett. Rate Amount";
                                        RelCurrCode := CurrExchRate."Relational Currency Code";
                                        CurrExchRate.SETFILTER("Currency Code",RelCurrCode);
                                        CurrExchRate.SETRANGE("Starting Date",0D,StartDate);
                                        IF CurrExchRate.FINDLAST THEN  BEGIN
                                          CurrencyCode := CurrExchRate."Currency Code";
                                          ExchRate := CurrExchRate."Exchange Rate Amount" ;
                                          RelExchRate := CurrExchRate."Relational Exch. Rate Amount";
                                          CurrencyFactor := (RelSettRate * RelExchRate) / (ExchRate * SettRate);
                                        END;
                                      END;
                                    END;
                                  END;
                                  VATCount := 0;
                                  CurrExchRate.RESET;
                                  CurrExchRate.SETRANGE("Currency Code",Code);
                                  IF NOT UseDailyRate THEN BEGIN
                                    CurrExchRate.SETFILTER("Starting Date",'..%1',CALCDATE('-1D',StartDate));
                                    CurrExchRate.FINDLAST;
                                    CurrExchRate.TESTFIELD("Settlement Rate Amount");
                                    CurrExchRate.TESTFIELD("Relational Sett. Rate Amount");
                                  END;
                                  VATEntry.LOCKTABLE;
                                  VATEntry.RESET;
                                  VATEntry.SETCURRENTKEY("Document Type",Type,"Currency Code","Posting Date",Closed);
                                  VATEntry.SETRANGE("Document Type",VATEntry."Document Type"::Payment);
                                  VATEntry.SETFILTER(Type,'<>%1',VATEntry.Type::Settlement);
                                  VATEntry.SETRANGE("Currency Code",Code);
                                  VATEntry.SETFILTER("Posting Date",'%1..%2',StartDate,EndDateReq);
                                  VATEntry.SETRANGE(Closed,FALSE);
                                  VATEntry.SETRANGE("Settlement Adjustment",FALSE);
                                  VATCountTotal := VATEntry.COUNT;
                                  IF VATEntry.FINDSET THEN
                                    REPEAT
                                      VATEntry2.RESET;
                                      VATEntry2.GET(VATEntry."Unrealized VAT Entry No.");
                                      IF VATEntry2."Posting Date" < StartDate THEN BEGIN
                                        IF UseDailyRate THEN BEGIN
                                          CurrExchRate.SETFILTER("Starting Date",'..%1',VATEntry."Posting Date");
                                          CurrExchRate.FINDLAST;
                                        END;
                                        VATCount := VATCount + 1;
                                        Window.UPDATE(1,ROUND(VATCount / VATCountTotal * 10000,1));
                                        PaymentTotal := VATEntry.Amount;
                                        BaseTotal := VATEntry.Base;
                                        IF (PaymentTotal <> 0) AND (BaseTotal <> 0) THEN BEGIN
                                          VATEntry4.RESET;
                                          VATEntry4.SETRANGE("Sett. Payment Entry No.",VATEntry."Entry No.");
                                          IF (VATEntry."Sett. Unrealized Amount" <> 0) AND (NOT VATEntry4.FINDFIRST) THEN BEGIN
                                            PaymentFactor := PaymentTotal / VATEntry."Sett. Unrealized Amount";
                                            ActualPaymentTotal := PaymentTotal + GetVatEntryPaymentTotal(VATEntry."Entry No.");
                                            IF RelCurrCode = '' THEN BEGIN
                                              FCYFactorAmount := VATEntry."Sett. Unrealised Amount (FCY)" * PaymentFactor;
                                              FCYFactorAmount := ROUND(FCYFactorAmount /
                                                  (CurrExchRate."Settlement Rate Amount" / CurrExchRate."Relational Sett. Rate Amount"));
                                            END ELSE
                                              FCYFactorAmount := VATEntry."Sett. Unrealised Amount (FCY)" * CurrencyFactor;
                                            PaymentTotal := FCYFactorAmount - ActualPaymentTotal;
                                            BaseFactor := BaseTotal / VATEntry."Sett. Unrealized Base";
                                            ActualBaseTotal := BaseTotal + GetVatEntryBaseTotal(VATEntry."Entry No.");
                                            IF RelCurrCode = '' THEN BEGIN
                                              FCYFactorBase := VATEntry."Sett. Unrealised Base (FCY)" * BaseFactor;
                                              FCYFactorBase := ROUND(FCYFactorBase /
                                                  (CurrExchRate."Settlement Rate Amount" / CurrExchRate."Relational Sett. Rate Amount"));
                                            END ELSE
                                              FCYFactorBase := VATEntry."Sett. Unrealised Base (FCY)" * CurrencyFactor;
                                            BaseTotal := FCYFactorBase - ActualBaseTotal;
                                            InsertVATEntry(VATEntry."Entry No.",PaymentTotal,BaseTotal);
                                          END;
                                        END;
                                      END;
                                    UNTIL VATEntry.NEXT = 0;
                                END;

               ReqFilterFields=Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF PostingDescription = '' THEN
                     PostingDescription := Text001;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENA=Options] }

      { 1340012;2;Field     ;
                  CaptionML=[ENU=Settlement Period;
                             ENA=Settlement Period];
                  SourceExpr=StartDate }

      { 1340010;2;Field     ;
                  CaptionML=[ENU=Ending Date;
                             ENA=Ending Date];
                  SourceExpr=EndDateReq }

      { 1340008;2;Field     ;
                  CaptionML=[ENU=Posting Description;
                             ENA=Posting Description];
                  SourceExpr=PostingDescription }

      { 1340002;2;Field     ;
                  CaptionML=[ENU=Document No.;
                             ENA=Document No.];
                  SourceExpr=PostingDocNo }

      { 1340004;2;Field     ;
                  CaptionML=[ENU=Posting Date;
                             ENA=Posting Date];
                  SourceExpr=PostingDate }

      { 1340000;2;Field     ;
                  CaptionML=[ENU=Use Daily Settlement Exch. Rate;
                             ENA=Use Daily Settlement Exch. Rate];
                  SourceExpr=UseDailyRate }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Window@1500028 : Dialog;
      VATEntry@1500027 : Record 254;
      VATEntry2@1500026 : Record 254;
      VATPostingSetup@1500025 : Record 325;
      CurrExchRate@1500024 : Record 330;
      GenJnlLine@1500023 : Record 81;
      SourceCodeSetup@1500022 : Record 242;
      GenJnlPostLine@1500021 : Codeunit 12;
      PostingDocNo@1500020 : Code[20];
      CurrencyCode@1500019 : Code[10];
      StartDate@1500018 : Date;
      EndDateReq@1500016 : Date;
      PostingDate@1500015 : Date;
      PostingDescription@1500014 : Text[50];
      VATCount@1500013 : Integer;
      VATCountTotal@1500012 : Integer;
      PaymentFactor@1500009 : Decimal;
      PaymentTotal@1500008 : Decimal;
      BaseFactor@1500007 : Decimal;
      BaseTotal@1500006 : Decimal;
      ActualPaymentTotal@1500005 : Decimal;
      ActualBaseTotal@1500004 : Decimal;
      FCYFactorAmount@1500002 : Decimal;
      FCYFactorBase@1500001 : Decimal;
      UseDailyRate@1500000 : Boolean;
      Text000@1500033 : TextConst 'ENU=You must specify %1.;ENA=You must specify %1.';
      Text001@1500032 : TextConst 'ENU=Settlement Exch. Rate Adjmt. of %1 %2;ENA=Settlement Exch. Rate Adjmt. of %1 %2';
      Text002@1500031 : TextConst 'ENU=Adjusting settlement exchange rates...\\;ENA=Adjusting settlement exchange rates...\\';
      Text003@1500030 : TextConst 'ENU=VAT Entry  @1@@@@@@@@@@@@@\\;ENA=GST Entry       @1@@@@@@@@@@@@@\\';
      Text010@1500029 : TextConst 'ENU=Adjustment      #4#############;ENA=Adjustment      #4#############';
      ExchRate@1500039 : Decimal;
      RelExchRate@1500038 : Decimal;
      RelSettRate@1500037 : Decimal;
      SettRate@1500036 : Decimal;
      RelCurrCode@1500035 : Code[10];
      CurrencyFactor@1500034 : Decimal;
      VATEntry4@1500040 : Record 254;

    PROCEDURE GetVatEntryPaymentTotal@1340000(VATEntryNo@1500000 : Integer) TotalAmt : Decimal;
    VAR
      VATEntryPay@1500001 : Record 254;
    BEGIN
      VATEntryPay.RESET;
      VATEntryPay.SETCURRENTKEY("Sett. Payment Entry No.");
      VATEntryPay.SETRANGE("Sett. Payment Entry No.",VATEntryNo);
      VATEntryPay.CALCSUMS(Amount);
      EXIT(VATEntryPay.Amount);
    END;

    PROCEDURE GetVatEntryBaseTotal@1340004(VATEntryNo@1500000 : Integer) TotalAmt : Decimal;
    VAR
      VATEntryBase@1500001 : Record 254;
    BEGIN
      VATEntryBase.RESET;
      VATEntryBase.SETCURRENTKEY("Sett. Payment Entry No.");
      VATEntryBase.SETRANGE("Sett. Payment Entry No.",VATEntryNo);
      VATEntryBase.CALCSUMS(Base);
      EXIT(VATEntryBase.Base);
    END;

    PROCEDURE InsertVATEntry@1340001(VATEntryNo@1500002 : Integer;VATAmount@1500001 : Decimal;VATBase@1500000 : Decimal);
    VAR
      VATEntry2@1500005 : Record 254;
      VATEntry3@1500004 : Record 254;
      EntryNo@1500003 : Integer;
    BEGIN
      IF (VATAmount = 0) AND (VATBase = 0) THEN
        EXIT;
      VATEntry2.RESET;
      VATEntry2.FINDLAST;
      EntryNo := VATEntry2."Entry No." + 1;
      VATEntry3.RESET;
      VATEntry3.INIT;
      VATEntry3.TRANSFERFIELDS(VATEntry);
      VATEntry3."Entry No." := EntryNo;
      VATEntry3.Amount := VATAmount;
      VATEntry3.Base := VATBase;
      VATEntry3."Sett. Unrealised Amount (FCY)" := VATEntry."Sett. Unrealised Amount (FCY)" * PaymentFactor;
      VATEntry3."Sett. Unrealised Base (FCY)" := VATEntry."Sett. Unrealised Base (FCY)" * BaseFactor;
      VATEntry3."Unrealized Amount" := 0;
      VATEntry3."Unrealized Base" := 0;
      VATEntry3."Remaining Unrealized Amount" := 0;
      VATEntry3."Remaining Unrealized Base" := 0;
      VATEntry3."Sett. Payment Entry No." := VATEntryNo;
      VATEntry3."Settlement Adjustment" := TRUE;
      VATEntry3.INSERT;

      SourceCodeSetup.GET;
      VATPostingSetup.GET(VATEntry."VAT Bus. Posting Group",VATEntry."VAT Prod. Posting Group");

      GenJnlLine.INIT;
      GenJnlLine.VALIDATE("Account Type",GenJnlLine."Account Type"::"G/L Account");
      CASE VATEntry.Type OF
        VATEntry.Type::Sale:
          GenJnlLine.VALIDATE("Account No.",VATPostingSetup."Sales VAT Account");
        VATEntry.Type::Purchase:
          GenJnlLine.VALIDATE("Account No.",VATPostingSetup."Purchase VAT Account");
      END;
      GenJnlLine.VALIDATE("Posting Date",PostingDate);
      GenJnlLine.VALIDATE("Document Type",GenJnlLine."Document Type"::" ");
      GenJnlLine."Document No." := PostingDocNo;
      GenJnlLine.Description :=
        STRSUBSTNO(
          PostingDescription,Currency.Code,VATAmount);
      GenJnlLine.Amount := VATAmount;
      GenJnlLine."Amount (LCY)" := GenJnlLine.Amount;
      GenJnlLine."Source Code" := SourceCodeSetup."Exchange Rate Adjmt.";
      GenJnlLine."System-Created Entry" := TRUE;
      GenJnlLine.VALIDATE("Bal. Account Type",GenJnlLine."Bal. Account Type"::"G/L Account");
      IF GenJnlLine."Debit Amount" <> 0 THEN
        GenJnlLine.VALIDATE("Bal. Account No.",Currency."Realized Gains Acc.")
      ELSE
        GenJnlLine.VALIDATE("Bal. Account No.",Currency."Realized Losses Acc.");
      GenJnlPostLine.RUN(GenJnlLine);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

