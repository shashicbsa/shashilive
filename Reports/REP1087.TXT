OBJECT Report 1087 Change Job Dates
{
  OBJECT-PROPERTIES
  {
    Date=09/07/12;
    Time=12:00:00;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Change Job Dates;
               ENA=Change Job Dates];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  ScheduleLine := FALSE;
                  ContractLine := FALSE;
                  IF Linetype = Linetype::Schedule THEN
                    ScheduleLine := TRUE;
                  IF Linetype = Linetype::Contract THEN
                    ContractLine := TRUE;
                  IF Linetype = Linetype::"Schedule+Contract" THEN BEGIN
                    ScheduleLine := TRUE;
                    ContractLine := TRUE;
                  END;

                  ScheduleLine2 := FALSE;
                  ContractLine2 := FALSE;
                  IF Linetype2 = Linetype2::Schedule THEN
                    ScheduleLine2 := TRUE;
                  IF Linetype2 = Linetype2::Contract THEN
                    ContractLine2 := TRUE;
                  IF Linetype2 = Linetype2::"Schedule+Contract" THEN BEGIN
                    ScheduleLine2 := TRUE;
                    ContractLine2 := TRUE;
                  END;
                  IF (Linetype = Linetype::" ") AND (Linetype2 = Linetype2::" ") THEN
                    ERROR(Text000);
                  IF NOT ChangePlanningDate AND NOT ChangeCurrencyDate THEN
                    ERROR(Text000);
                  IF ChangeCurrencyDate AND (Linetype = Linetype::" ") THEN
                    ERROR(Text001);
                  IF ChangePlanningDate AND (Linetype2 = Linetype2::" ") THEN
                    ERROR(Text002);
                END;

  }
  DATASET
  {
    { 2969;    ;DataItem;                    ;
               DataItemTable=Table1001;
               DataItemTableView=SORTING(Job No.,Job Task No.);
               OnAfterGetRecord=BEGIN
                                  CLEAR(CalculateBatches);
                                  IF ChangePlanningDate THEN
                                    IF Linetype2 <> Linetype2::" " THEN
                                      CalculateBatches.ChangePlanningDates(
                                        "Job Task",ScheduleLine2,ContractLine2,PeriodLength2,FixedDate2,StartingDate2,EndingDate2);
                                  CLEAR(CalculateBatches);
                                  IF ChangeCurrencyDate THEN
                                    IF Linetype <> Linetype::" " THEN
                                      CalculateBatches.ChangeCurrencyDates(
                                        "Job Task",ScheduleLine,ContractLine,
                                        PeriodLength,FixedDate,StartingDate,EndingDate);
                                END;

               OnPostDataItem=BEGIN
                                CalculateBatches.ChangeDatesEnd;
                              END;

               ReqFilterFields=Job No.,Job Task No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENA=Options] }

      { 11  ;2   ;Group     ;
                  CaptionML=[ENU=Currency Date;
                             ENA=Currency Date] }

      { 13  ;3   ;Field     ;
                  Name=ChangeCurrencyDate;
                  CaptionML=[ENU=Change Currency Date;
                             ENA=Change Currency Date];
                  SourceExpr=ChangeCurrencyDate }

      { 1   ;3   ;Field     ;
                  Name=ChangeDateExpressionCurrency;
                  CaptionML=[ENU=Change Date Expression;
                             ENA=Change Date Expression];
                  DateFormula=Yes;
                  BlankZero=Yes;
                  SourceExpr=PeriodLength;
                  OnValidate=BEGIN
                               FixedDate := 0D;
                             END;
                              }

      { 8   ;3   ;Field     ;
                  Name=FixedDateCurrency;
                  CaptionML=[ENU=Fixed Date;
                             ENA=Fixed Date];
                  SourceExpr=FixedDate;
                  OnValidate=BEGIN
                               CLEAR(PeriodLength);
                             END;
                              }

      { 3   ;3   ;Field     ;
                  Name=IncludeLineTypeCurrency;
                  CaptionML=[ENU=Include Line type;
                             ENA=Include Line type];
                  OptionCaptionML=[ENU=" ,Schedule,Contract,Schedule+Contract";
                                   ENA=" ,Schedule,Contract,Schedule+Contract"];
                  SourceExpr=Linetype }

      { 15  ;3   ;Field     ;
                  Name=IncludeCurrDateFrom;
                  CaptionML=[ENU=Include Curr. Date From;
                             ENA=Include Curr. Date From];
                  SourceExpr=StartingDate }

      { 22  ;3   ;Field     ;
                  Name=IncludeCurrDateTo;
                  CaptionML=[ENU=Include Curr. Date To;
                             ENA=Include Curr. Date To];
                  SourceExpr=EndingDate }

      { 7   ;2   ;Group     ;
                  CaptionML=[ENU=Planning Date;
                             ENA=Planning Date] }

      { 27  ;3   ;Field     ;
                  Name=ChangePlanningDate;
                  CaptionML=[ENU=Change Planning Date;
                             ENA=Change Planning Date];
                  SourceExpr=ChangePlanningDate }

      { 10  ;3   ;Field     ;
                  Name=ChangeDateExpressionPlanning;
                  CaptionML=[ENU=Change Date Expression;
                             ENA=Change Date Expression];
                  DateFormula=Yes;
                  BlankZero=Yes;
                  SourceExpr=PeriodLength2;
                  OnValidate=BEGIN
                               FixedDate2 := 0D;
                             END;
                              }

      { 12  ;3   ;Field     ;
                  Name=FixedDatePlanning;
                  CaptionML=[ENU=Fixed Date;
                             ENA=Fixed Date];
                  SourceExpr=FixedDate2;
                  OnValidate=BEGIN
                               CLEAR(PeriodLength2);
                             END;
                              }

      { 17  ;3   ;Field     ;
                  Name=IncludeLineTypePlanning;
                  CaptionML=[ENU=Include Line type;
                             ENA=Include Line type];
                  OptionCaptionML=[ENU=" ,Schedule,Contract,Schedule+Contract";
                                   ENA=" ,Schedule,Contract,Schedule+Contract"];
                  SourceExpr=Linetype2 }

      { 20  ;3   ;Field     ;
                  Name=IncludePlanDateFrom;
                  CaptionML=[ENU=Include Plan. Date From;
                             ENA=Include Plan. Date From];
                  SourceExpr=StartingDate2 }

      { 21  ;3   ;Field     ;
                  Name=IncludePlanDateTo;
                  CaptionML=[ENU=Include Plan. Date To;
                             ENA=Include Plan. Date To];
                  SourceExpr=EndingDate2 }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CalculateBatches@1007 : Codeunit 1005;
      PeriodLength@1010 : DateFormula;
      PeriodLength2@1014 : DateFormula;
      ScheduleLine@1008 : Boolean;
      ContractLine@1009 : Boolean;
      ScheduleLine2@1011 : Boolean;
      ContractLine2@1006 : Boolean;
      Linetype@1012 : ' ,Schedule,Contract,Schedule+Contract';
      Linetype2@1004 : ' ,Schedule,Contract,Schedule+Contract';
      FixedDate@1001 : Date;
      FixedDate2@1000 : Date;
      StartingDate@1005 : Date;
      EndingDate@1013 : Date;
      StartingDate2@1003 : Date;
      EndingDate2@1002 : Date;
      Text000@1019 : TextConst 'ENU=There is nothing to change.;ENA=There is nothing to change.';
      ChangePlanningDate@1020 : Boolean;
      ChangeCurrencyDate@1021 : Boolean;
      Text001@1022 : TextConst 'ENU=You must specify a Line Type for changing the currency date.;ENA=You must specify a Line Type for changing the currency date.';
      Text002@1023 : TextConst 'ENU=You must specify a Line Type for changing the planning date.;ENA=You must specify a Line Type for changing the planning date.';

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

