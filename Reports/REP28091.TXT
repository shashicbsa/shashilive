OBJECT Report 28091 Create Check Installments
{
  OBJECT-PROPERTIES
  {
    Date=09/23/13;
    Time=12:00:00;
    Version List=NAVAPAC7.10;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Create Check Installments;
               ENA=Create Cheque Installments];
    ProcessingOnly=Yes;
    UseRequestPage=Yes;
  }
  DATASET
  {
    { 8721;    ;DataItem;PostDatedCheckLine  ;
               DataItemTable=Table28090;
               OnPreDataItem=BEGIN
                               IF NoInstallments <= 1 THEN
                                 ERROR(Text000);
                               IF StartDocNo = '' THEN
                                 ERROR(text001);
                               PostDatedCheck.RESET;
                               IF PostDatedCheck.FINDLAST THEN
                                 LineNo := PostDatedCheck."Line Number";
                               CheckDate := "Check Date";
                               NextDocNo := StartDocNo;
                               CheckNo := "Check No.";
                               GLSetup.GET;
                               TempPostDatedCheck.RESET;
                               TempPostDatedCheck.SETRANGE("Document No.","Document No.");
                               IF TempPostDatedCheck.FINDFIRST THEN BEGIN
                                 IF NoInstallments > 1 THEN
                                   FOR i := 1 TO (NoInstallments - 1) DO
                                     BEGIN
                                     PostDatedCheck.INIT;
                                     PostDatedCheck.TRANSFERFIELDS(PostDatedCheckLine);
                                     PostDatedCheck."Line Number" := LineNo + 10000;
                                     PostDatedCheck."Check No." := INCSTR(PostDatedCheck."Check No.");
                                     PostDatedCheck.VALIDATE("Check No.",INCSTR(CheckNo));
                                     PostDatedCheck.VALIDATE("Document No.",INCSTR(NextDocNo));
                                     IF GLSetup."Interest Cal Excl. VAT" THEN BEGIN
                                       AmountExcVAT := CalAmtExcVAT;
                                       PostDatedCheck.VALIDATE(Amount,(Amount + "Interest %" * AmountExcVAT / 100) / NoInstallments);
                                       PostDatedCheck.VALIDATE("Interest Amount",ROUND(AmountExcVAT * ("Interest %" / 100) / NoInstallments));
                                     END ELSE BEGIN
                                       PostDatedCheck.VALIDATE(Amount,Amount * (1 + "Interest %" / 100) / NoInstallments);
                                       PostDatedCheck.VALIDATE("Interest Amount",ROUND(Amount * ("Interest %" / 100) / NoInstallments));
                                     END;
                                     TempAmount := TempAmount + (Amount / NoInstallments);
                                     PostDatedCheck.VALIDATE("Check Date",CALCDATE("Period Length",CheckDate));
                                     PostDatedCheck.INSERT;
                                     LineNo := LineNo + 10000;
                                     CheckNo := INCSTR(CheckNo);
                                     NextDocNo := INCSTR(NextDocNo);
                                     CheckDate := CALCDATE("Period Length",CheckDate);
                                   END;
                                 IF GLSetup."Interest Cal Excl. VAT" THEN BEGIN
                                   VALIDATE("Interest Amount",ROUND((AmountExcVAT * "Interest %" / 100) / NoInstallments));
                                   VALIDATE(Amount,ROUND((Amount - TempAmount) + (AmountExcVAT * "Interest %" / 100) / NoInstallments));
                                 END ELSE BEGIN
                                   VALIDATE("Interest Amount",ROUND((Amount - TempAmount) * ("Interest %" / 100)));
                                   VALIDATE(Amount,(Amount - TempAmount) * (1 + "Interest %" / 100));
                                 END;
                                 VALIDATE("Document No.",StartDocNo);
                                 MODIFY;
                               END;
                             END;
                              }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ENA=Options] }

      { 1380000;2;Field     ;
                  Name=NoOfInstallments;
                  CaptionML=[ENU=No. of Installments;
                             ENA=No. of Installments];
                  SourceExpr=NoInstallments }

      { 1380003;2;Field     ;
                  Name=InterestPct;
                  CaptionML=[ENU=Interest %;
                             ENA=Interest %];
                  SourceExpr="Interest %" }

      { 1380005;2;Field     ;
                  Name=PeriodLength;
                  CaptionML=[ENU=Period Length;
                             ENA=Period Length];
                  SourceExpr="Period Length" }

      { 1380007;2;Field     ;
                  Name=StartDocumentNo;
                  CaptionML=[ENU=Start Document No;
                             ENA=Start Document No];
                  SourceExpr=StartDocNo }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      NoInstallments@1500009 : Integer;
      "Interest %"@1500008 : Decimal;
      "Period Length"@1500007 : DateFormula;
      PostDatedCheck@1500006 : Record 28090;
      LineNo@1500005 : Integer;
      TempAmount@1500004 : Decimal;
      i@1500003 : Integer;
      CheckDate@1500002 : Date;
      StartDocNo@1500001 : Code[20];
      NextDocNo@1500000 : Code[20];
      Text000@1500011 : TextConst 'ENU=The number of Installments should be greater than 1;ENA=The number of Installments should be greater than 1';
      text001@1500010 : TextConst 'ENU="Please enter Start Document No ";ENA="Please enter Start Document No "';
      GLSetup@1500014 : Record 98;
      AmountExcVAT@1500013 : Decimal;
      TempPostDatedCheck@1500012 : Record 28090;
      CheckNo@1500016 : Code[20];

    PROCEDURE SetPostDatedCheckLine@1380000(VAR tempPostDatedCheckLine@1500000 : Record 28090);
    BEGIN
      PostDatedCheckLine := tempPostDatedCheckLine;
    END;

    PROCEDURE CalAmtExcVAT@1500000() VATBaseAmt : Decimal;
    VAR
      VendorLedgerEntry@1500004 : Record 25;
      AmtVAT@1500005 : Decimal;
      PurchInvLine@1500006 : Record 123;
    BEGIN
      IF TempPostDatedCheck."Account Type" = TempPostDatedCheck."Account Type"::Vendor THEN
        IF (TempPostDatedCheck."Applies-to Doc. Type" = TempPostDatedCheck."Applies-to Doc. Type"::Invoice) AND
           (TempPostDatedCheck."Applies-to Doc. No." <> '')
        THEN BEGIN
          VendorLedgerEntry.RESET;
          VendorLedgerEntry.SETRANGE(Open,TRUE);
          VendorLedgerEntry.SETRANGE("Document Type",TempPostDatedCheck."Applies-to Doc. Type");
          VendorLedgerEntry.SETRANGE("Document No.",TempPostDatedCheck."Applies-to Doc. No.");
          IF VendorLedgerEntry.FINDSET THEN
            REPEAT
              VendorLedgerEntry.CALCFIELDS(Amount);
              PurchInvLine.RESET;
              PurchInvLine.SETRANGE("Document No.",VendorLedgerEntry."Document No.");
              IF PurchInvLine.FIND('-') THEN
                REPEAT
                  AmtVAT := AmtVAT + ((PurchInvLine."Amount Including VAT" - PurchInvLine."VAT Base Amount") *
                                      TempPostDatedCheck.Amount / ABS(VendorLedgerEntry.Amount));
                UNTIL PurchInvLine.NEXT = 0;
              VATBaseAmt := (ABS(VendorLedgerEntry.Amount) - AmtVAT);
            UNTIL VendorLedgerEntry.NEXT = 0;
        END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

