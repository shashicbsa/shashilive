OBJECT Report 62072 E-FAKTUR VAT-OUT Return
{
  OBJECT-PROPERTIES
  {
    Date=09/26/15;
    Time=12:33:23;
    Modified=Yes;
    Version List=E-FAKTUR1.0;
  }
  PROPERTIES
  {
    ProcessingOnly=Yes;
    OnPreReport=BEGIN

                  Master_setup_2.GET;
                  IF GUIALLOWED THEN BEGIN
                    IF ((D1 = 0D) OR (D2 = 0D) OR (D3 = 0D) OR (D4 = 0D)) THEN
                      ERROR(Text001);
                    IF ((D1 > D2) OR (D3 > D4)) THEN
                      ERROR(Text002);
                    IF (Master_setup_2."E-FAKTUR Interface File Path" = '') THEN
                      ERROR(Text003);
                    IF (Master_setup_2."E-FAKTUR VAT - OUT Return" = '') THEN
                      ERROR(Text000);
                    Window.OPEN('Export in progress...\(Please Wait)');
                  END ELSE BEGIN
                    D1 := TODAY;
                    D2 := TODAY;
                    D3 := TODAY;
                    D4 := TODAY;
                  END;
                  InterfaceFile := Master_setup_2."E-FAKTUR Interface File Path" + '\'+ Master_setup_2."E-FAKTUR VAT - OUT Return";
                  ExcelBuf.DELETEALL;
                  CreateExlHeader();
                END;

    OnPostReport=BEGIN

                   IF GUIALLOWED THEN
                     Window.CLOSE;
                   CreateExcelbook;
                   //IF GUIALLOWED THEN
                     //MESSAGE('VAT-IN Return Export Completed!');
                 END;

  }
  DATASET
  {
    { 1000000000;;DataItem;Espt DETAILS1     ;
               DataItemTable=Table50016;
               DataItemTableView=SORTING(Document Type,Line No.,Document No.)
                                 ORDER(Ascending)
                                 WHERE(Vat Type=CONST(Out),
                                       Entry Type=CONST(Sale),
                                       Document Type=CONST(Credit Memo));
               OnPreDataItem=BEGIN

                               SETRANGE("Tax Invoice Date",D1,D2);
                               SETRANGE("Tax Period", D3, D4);
                             END;

               OnAfterGetRecord=BEGIN

                                  CreateExlData;
                                END;
                                 }

    { 1000000001;;DataItem;Espt DETAILS2     ;
               DataItemTable=Table50016;
               DataItemTableView=SORTING(Document Type,Line No.,Document No.)
                                 ORDER(Ascending)
                                 WHERE(Vat Type=CONST(Out),
                                       Entry Type=CONST(Purchase),
                                       Document Type=CONST(Invoice));
               OnPreDataItem=BEGIN

                               SETRANGE("Tax Invoice Date",D1,D2);
                               SETRANGE("Tax Period", D3, D4);
                               MESSAGE(FORMAT(COUNT));
                             END;

               OnAfterGetRecord=BEGIN

                                  CreateExlData2;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1000000000;;Container;
                  Name=VAT-OUT Return;
                  ContainerType=ContentArea }

      { 1000000006;1;Group  ;
                  CaptionML=ENU=Tax Invoice Date;
                  GroupType=Group }

      { 1000000001;2;Field  ;
                  CaptionML=ENU=From Date;
                  SourceExpr=D1 }

      { 1000000002;2;Field  ;
                  CaptionML=ENU=To date;
                  SourceExpr=D2 }

      { 1000000005;1;Group  ;
                  CaptionML=ENU=Tax Period;
                  GroupType=Group }

      { 1000000003;2;Field  ;
                  CaptionML=ENU=From Date;
                  SourceExpr=D3 }

      { 1000000004;2;Field  ;
                  CaptionML=ENU=To Date;
                  SourceExpr=D4 }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ExcelBuf@1000000023 : Record 370;
      D1@1000000022 : Date;
      D2@1000000021 : Date;
      num1@1000000020 : Text[30];
      num2@1000000019 : Text[30];
      num3@1000000018 : Text[30];
      num4@1000000017 : Text[30];
      MOT@1000000016 : Text[30];
      YOT@1000000015 : Text[30];
      TranCode@1000000014 : Text[30];
      ReplaceTaxInv@1000000013 : Text[30];
      Window@1000000012 : Dialog;
      D3@1000000011 : Date;
      D4@1000000010 : Date;
      PurchCrMeHdr@1000000009 : Record 124;
      SalesInvHdr@1000000008 : Record 112;
      Date1@1000000007 : Text[30];
      Date2@1000000006 : Text[30];
      Date3@1000000005 : Text[30];
      Date4@1000000004 : Text[30];
      Master_setup_2@1000000003 : Record 60053;
      InterfaceFile@1000000002 : Text[250];
      SalesCrMemoHdr@1000000001 : Record 114;
      PurchInvHdr@1000000000 : Record 122;
      Text000@1000000027 : TextConst 'ENU=Error: Please set valid file name in Master Setup-2';
      Text001@1000000026 : TextConst 'ENU=Error: Please insert date';
      Text002@1000000025 : TextConst 'ENU=Error: From date should be less than to date';
      Text003@1000000024 : TextConst 'ENU=Error:Please set valid path in Master Setup-2';

    PROCEDURE CreateExlHeader@1102159004();
    BEGIN

      ExcelBuf.AddColumn('RK', FALSE, '', TRUE, FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('NPWP', FALSE, '', TRUE, FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('NAMA', FALSE, '', TRUE, FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('KD_JENIS_TRANSAKSI', FALSE, '', TRUE, FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('FG_PENGGANTI', FALSE, '', TRUE, FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('NOMOR_FAKTUR', FALSE, '', TRUE, FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('TANGGAL_FAKTUR', FALSE, '', TRUE, FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      //ExcelBuf.AddColumn('IS_CREDITABLE', FALSE, '', TRUE, FALSE,TRUE,'',ExcelBuf."Cell Type"::text);
      ExcelBuf.AddColumn('NOMOR_DOKUMEN_RETUR', FALSE, '', TRUE, FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('TANGGAL_RETUR', FALSE, '', TRUE, FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('MASA_PAJAK_RETUR', FALSE, '', TRUE, FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('TAHUN_PAJAK_RETUR', FALSE, '', TRUE, FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('NILAI_RETUR_DPP', FALSE, '', TRUE, FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('NILAI_RETUR_PPN', FALSE, '', TRUE, FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('NILAI_RETUR_PPNBM', FALSE, '', TRUE, FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn('Slip_No.', FALSE, '', TRUE, FALSE,TRUE,'',ExcelBuf."Cell Type"::Text);
    END;

    PROCEDURE CreateExcelbook@1102159011();
    BEGIN

      ExcelBuf.CreateBook('VAT-OUT RETURN');
      ExcelBuf.CreateBookAndOpenExcel('VAT-OUT RETURN','VAT-OUT RETURN',COMPANYNAME,USERID);
      ExcelBuf.GiveUserControl;
      //ERROR('');

      {
      ExcelBuf.CreateBook();
      ExcelBuf.CreateSheet('VAT-OUT Return','ANALYSIS',' ',USERID);
      ExcelBuf.GiveUserControl;
      //ExcelBuf.XlsSaveAs(InterfaceFile);
      ExcelBuf.DELETEALL;
      }
    END;

    PROCEDURE CreateExlData@1102159001();
    VAR
      NewString@1000000000 : Text[50];
    BEGIN


      ExcelBuf.NewRow;
      TranCode := COPYSTR("Espt DETAILS1"."Tax Invoice No.", 1, 2);
      ReplaceTaxInv := COPYSTR("Espt DETAILS1"."Tax Invoice No.", 3, 1);
      num1 := COPYSTR("Espt DETAILS1"."Tax Invoice No.", 5, 3);
      num2 := COPYSTR("Espt DETAILS1"."Tax Invoice No.", 9, 2);
      num3 := COPYSTR("Espt DETAILS1"."Tax Invoice No.", 12, 8);
      num4 := num1 + num2 + num3;
      MOT := FORMAT(DATE2DMY("Espt DETAILS1"."Tax Invoice Date", 2));

      IF STRLEN(FORMAT(MOT)) <> 2 THEN
        MOT := '0' + FORMAT(MOT)
      ELSE
        MOT := FORMAT(MOT);

      YOT := FORMAT(DATE2DMY("Espt DETAILS1"."Tax Invoice Date", 3));
      ExcelBuf.AddColumn('RK', FALSE, '', FALSE, FALSE, TRUE,'',ExcelBuf."Cell Type"::Text);  //shashi ko shak hai

      NewString := DELCHR("Espt DETAILS1".NPWP,'=','.');
      NewString := DELCHR(NewString,'=','-');

      //ExcelBuf.AddColumn(FORMAT("Espt DETAILS1".NPWP), FALSE, '', FALSE, FALSE, TRUE, '@');
      ExcelBuf.AddColumn(FORMAT(NewString), FALSE, '', FALSE, FALSE, TRUE,'', ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn(FORMAT("Espt DETAILS1"."NPWP Name"), FALSE, '', FALSE, FALSE, TRUE, '',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn(FORMAT(TranCode), FALSE, '', FALSE, FALSE, TRUE, '',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn(FORMAT(ReplaceTaxInv), FALSE, '', FALSE, FALSE, TRUE, '',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn(FORMAT(num4), FALSE, '', FALSE, FALSE, TRUE, '',ExcelBuf."Cell Type"::Text);
      Date1 := FORMAT("Espt DETAILS1"."Tax Invoice Date", 0, '<day, 2>/<Month, 2>/<Year,4>');
      ExcelBuf.AddColumn(Date1, FALSE, '', FALSE, FALSE, TRUE, '',ExcelBuf."Cell Type"::Text);
      //ExcelBuf.AddColumn(1, FALSE, '', FALSE, FALSE, TRUE, '@');
      ExcelBuf.AddColumn("Espt DETAILS1"."Document No.", FALSE, '', FALSE, FALSE, TRUE, '',ExcelBuf."Cell Type"::Text);

      SalesCrMemoHdr.RESET;
      SalesCrMemoHdr.SETRANGE(SalesCrMemoHdr."Pre-Assigned No.","Espt DETAILS1"."Document No.");
      IF PurchCrMeHdr.FINDSET THEN
        Date2 := FORMAT(SalesCrMemoHdr."Document Date", 0, '<day, 2>/<Month, 2>/<Year4>');

      ExcelBuf.AddColumn(Date2, FALSE, '', FALSE, FALSE, TRUE, '',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn(MOT, FALSE, '', FALSE, FALSE, TRUE, '',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn(YOT, FALSE, '', FALSE, FALSE, TRUE, '',ExcelBuf."Cell Type"::Text);
      //ExcelBuf.AddColumn("Espt DETAILS1"."Base LCY", FALSE, '', FALSE, FALSE, TRUE, '');//s tr
      ExcelBuf.AddColumn(FORMAT(ROUND("Espt DETAILS1"."Base LCY",1,'<'),0,'<SIGN><INTEGER>'),FALSE,'',FALSE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Number);
      //ExcelBuf.AddColumn("Espt DETAILS1"."Amount LCY", FALSE, '', FALSE, FALSE, TRUE, ''); //s tr
      ExcelBuf.AddColumn(FORMAT(ROUND("Espt DETAILS1"."Amount LCY",1,'<'),0,'<SIGN><INTEGER>'),FALSE,'',FALSE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Number);
      ExcelBuf.AddColumn(0, FALSE, '', FALSE, FALSE, TRUE, '',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn("Espt DETAILS1"."Document No.", FALSE, '', FALSE, FALSE, TRUE, '',ExcelBuf."Cell Type"::Text);
    END;

    PROCEDURE CreateExlData2@1102159002();
    VAR
      NewString@1000000000 : Text[50];
    BEGIN


      ExcelBuf.NewRow;
      TranCode := COPYSTR("Espt DETAILS2"."Tax Invoice No.", 1, 2);
      ReplaceTaxInv := COPYSTR("Espt DETAILS2"."Tax Invoice No.", 3, 1);
      num1 := COPYSTR("Espt DETAILS2"."Tax Invoice No.", 5, 3);
      num2 := COPYSTR("Espt DETAILS2"."Tax Invoice No.", 9, 2);
      num3 := COPYSTR("Espt DETAILS2"."Tax Invoice No.", 12, 8);
      num4 := num1 + num2 + num3;
      MOT := FORMAT(DATE2DMY("Espt DETAILS2"."Tax Invoice Date", 2));

      IF STRLEN(FORMAT(MOT)) <> 2 THEN
        MOT := '0' + FORMAT(MOT)
      ELSE
        MOT := FORMAT(MOT);

      YOT := FORMAT(DATE2DMY("Espt DETAILS2"."Tax Invoice Date", 3));
      ExcelBuf.AddColumn('RK', FALSE, '', FALSE, FALSE, TRUE, '',ExcelBuf."Cell Type"::Text);

      NewString := DELCHR("Espt DETAILS2".NPWP,'=','.');
      NewString := DELCHR(NewString,'=','-');
      ExcelBuf.AddColumn(FORMAT(NewString), FALSE, '', FALSE, FALSE, TRUE, '',ExcelBuf."Cell Type"::Text);
      //ExcelBuf.AddColumn(FORMAT("Espt DETAILS2".NPWP), FALSE, '', FALSE, FALSE, TRUE, '@');
      ExcelBuf.AddColumn(FORMAT("Espt DETAILS2"."NPWP Name"), FALSE, '', FALSE, FALSE, TRUE, '',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn(FORMAT(TranCode), FALSE, '', FALSE, FALSE, TRUE, '',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn(FORMAT(ReplaceTaxInv), FALSE, '', FALSE, FALSE, TRUE, '',ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn(FORMAT(num4), FALSE, '', FALSE, FALSE, TRUE, '',ExcelBuf."Cell Type"::Text);
      Date3 := FORMAT("Espt DETAILS2"."Tax Invoice Date", 0, '<day, 2>/<Month, 2>/<Year4>');
      ExcelBuf.AddColumn(Date3, FALSE, '', FALSE, FALSE, TRUE, '',ExcelBuf."Cell Type"::Text);
      //ExcelBuf.AddColumn(1, FALSE, '', FALSE, FALSE, TRUE, '@');
      ExcelBuf.AddColumn("Espt DETAILS2"."Document No.", FALSE, '', FALSE, FALSE, TRUE, '', ExcelBuf."Cell Type"::Text);

      PurchInvHdr.RESET;
      PurchInvHdr.SETRANGE("Pre-Assigned No.","Espt DETAILS2"."Document No.");
      IF PurchInvHdr.FINDSET THEN
        Date4 := FORMAT(PurchInvHdr."Document Date", 0, '<day, 2>/<Month, 2>/<Year,4>');

      ExcelBuf.AddColumn(Date4, FALSE, '', FALSE, FALSE, TRUE, '', ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn(MOT, FALSE, '', FALSE, FALSE, TRUE, '', ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn(YOT, FALSE, '', FALSE, FALSE, TRUE, '', ExcelBuf."Cell Type"::Text);
      //ExcelBuf.AddColumn("Espt DETAILS2"."Base LCY", FALSE, '', FALSE, FALSE, TRUE, '');
      ExcelBuf.AddColumn(FORMAT(ROUND("Espt DETAILS2"."Base LCY",1,'<'),0,'<SIGN><INTEGER>'),FALSE,'',FALSE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Number);
      //ExcelBuf.AddColumn("Espt DETAILS2"."Amount LCY", FALSE, '', FALSE, FALSE, TRUE, '');
      ExcelBuf.AddColumn(FORMAT(ROUND("Espt DETAILS2"."Amount LCY",1,'<'),0,'<SIGN><INTEGER>'),FALSE,'',FALSE,FALSE,TRUE,'',ExcelBuf."Cell Type"::Number);
      ExcelBuf.AddColumn(0, FALSE, '', FALSE, FALSE, TRUE, '', ExcelBuf."Cell Type"::Text);
      ExcelBuf.AddColumn("Espt DETAILS2"."Document No.", FALSE, '', FALSE, FALSE, TRUE, '', ExcelBuf."Cell Type"::Text);
    END;

    BEGIN
    {

      //E-FAKTUR1.0 New Report created to export VAT-IN Return file for E-FAKTUR
    }
    END.
  }
  RDLDATA
  {
  }
}

