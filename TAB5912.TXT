OBJECT Table 5912 Service Document Log
{
  OBJECT-PROPERTIES
  {
    Date=09/07/12;
    Time=12:00:00;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               ServOrderLog.RESET;
               ServOrderLog.SETRANGE("Document Type","Document Type");
               ServOrderLog.SETRANGE("Document No.","Document No.");
               IF ServOrderLog.FINDLAST THEN
                 "Entry No." := ServOrderLog."Entry No." + 1
               ELSE
                 "Entry No." := 1;

               "Change Date" := TODAY;
               "Change Time" := TIME;
               "User ID" := USERID;
             END;

    CaptionML=[ENU=Service Document Log;
               ENA=Service Document Log];
    LookupPageID=Page5920;
    DrillDownPageID=Page5920;
  }
  FIELDS
  {
    { 1   ;   ;Document No.        ;Code20        ;TableRelation=IF (Document Type=CONST(Quote)) "Service Header".No. WHERE (Document Type=CONST(Quote))
                                                                 ELSE IF (Document Type=CONST(Order)) "Service Header".No. WHERE (Document Type=CONST(Order))
                                                                 ELSE IF (Document Type=CONST(Invoice)) "Service Header".No. WHERE (Document Type=CONST(Invoice))
                                                                 ELSE IF (Document Type=CONST(Credit Memo)) "Service Header".No. WHERE (Document Type=CONST(Credit Memo))
                                                                 ELSE IF (Document Type=CONST(Shipment)) "Service Shipment Header"
                                                                 ELSE IF (Document Type=CONST(Posted Invoice)) "Service Invoice Header"
                                                                 ELSE IF (Document Type=CONST(Posted Credit Memo)) "Service Cr.Memo Header";
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Document No.;
                                                              ENA=Document No.] }
    { 2   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              ENA=Entry No.] }
    { 3   ;   ;Event No.           ;Integer       ;CaptionML=[ENU=Event No.;
                                                              ENA=Event No.] }
    { 4   ;   ;Service Item Line No.;Integer      ;CaptionML=[ENU=Service Item Line No.;
                                                              ENA=Service Item Line No.] }
    { 5   ;   ;After               ;Text50        ;CaptionML=[ENU=After;
                                                              ENA=After] }
    { 6   ;   ;Before              ;Text50        ;CaptionML=[ENU=Before;
                                                              ENA=Before] }
    { 7   ;   ;Change Date         ;Date          ;CaptionML=[ENU=Change Date;
                                                              ENA=Change Date] }
    { 8   ;   ;Change Time         ;Time          ;CaptionML=[ENU=Change Time;
                                                              ENA=Change Time] }
    { 9   ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              ENA=User ID] }
    { 10  ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              ENA=Document Type];
                                                   OptionCaptionML=[ENU=Quote,Order,Invoice,Credit Memo,Shipment,Posted Invoice,Posted Credit Memo;
                                                                    ENA=Quote,Order,Invoice,CR/Adj Note,Shipment,Posted Invoice,Posted CR/Adj Note];
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Shipment,Posted Invoice,Posted Credit Memo;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Document Type,Document No.,Entry No.    ;Clustered=Yes }
    {    ;Change Date,Change Time                  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ServOrderLog@1000 : Record 5912;

    PROCEDURE FillTempServDocLog@1(VAR ServHeader@1000 : Record 5900;VAR TempServDocLog@1001 : TEMPORARY Record 5912);
    VAR
      ServDocLog@1002 : Record 5912;
    BEGIN
      WITH ServHeader DO BEGIN
        TempServDocLog.RESET;
        TempServDocLog.DELETEALL;

        IF "No." <> '' THEN BEGIN
          ServDocLog.RESET;
          ServDocLog.SETRANGE("Document Type","Document Type");
          ServDocLog.SETRANGE("Document No.","No.");
          IF ServDocLog.FINDSET THEN
            REPEAT
              TempServDocLog := ServDocLog;
              TempServDocLog.INSERT;
            UNTIL ServDocLog.NEXT = 0;

          ServDocLog.RESET;
          ServDocLog.SETRANGE(Before,"No.");
          ServDocLog.SETFILTER("Document Type",'%1|%2|%3',
            ServDocLog."Document Type"::Shipment,ServDocLog."Document Type"::"Posted Invoice",
            ServDocLog."Document Type"::"Posted Credit Memo");

          IF ServDocLog.FINDSET THEN
            REPEAT
              TempServDocLog := ServDocLog;
              TempServDocLog.INSERT;
            UNTIL ServDocLog.NEXT = 0;
        END;

        TempServDocLog.RESET;
        TempServDocLog.SETCURRENTKEY("Change Date","Change Time");
        TempServDocLog.ASCENDING(FALSE);
      END;
    END;

    PROCEDURE ShowServDocLog@2(VAR ServHeader@1000 : Record 5900);
    VAR
      TempServDocLog@1001 : TEMPORARY Record 5912;
    BEGIN
      FillTempServDocLog(ServHeader,TempServDocLog);
      PAGE.RUN(0,TempServDocLog);
    END;

    BEGIN
    END.
  }
}

