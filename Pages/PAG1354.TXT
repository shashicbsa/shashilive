OBJECT Page 1354 Mini Purchase Invoice
{
  OBJECT-PROPERTIES
  {
    Date=11/10/13;
    Time=12:00:00;
    Version List=NAVW17.10.00.35701;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Purchase Invoice;
               ENA=Purchase Invoice];
    SourceTable=Table38;
    SourceTableView=WHERE(Document Type=FILTER(Invoice));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Invoice,Posting,View;
                                ENA=New,Process,Report,Invoice,Posting,View];
    OnInit=BEGIN
             ShowCurrencyTab := FALSE;
           END;

    OnOpenPage=BEGIN
                 UpdateVisiblePayShowToTab;
                 IF UserSetupManagement.GetPurchasesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserSetupManagement.GetPurchasesFilter);
                   FILTERGROUP(0);
                 END;
               END;

    OnNextRecord=VAR
                   Outcome@1001 : Integer;
                 BEGIN
                   Outcome := NEXT(Steps);
                   IF Outcome <> 0 THEN
                     UpdateVisiblePayShowToTab;
                   EXIT(Outcome);
                 END;

    OnAfterGetRecord=BEGIN
                       VendorSelected := "Buy-from Vendor No." <> '';
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserSetupManagement.GetPurchasesFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 3       ;1   ;ActionGroup;
                      CaptionML=[ENU=Manage;
                                 ENA=Manage] }
      { 62      ;2   ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 ENA=Copy Document];
                      ToolTipML=[ENU=Copy document lines and optionally header information from another purchase document to this document. You can copy a posted purchase invoice into a new purchase invoice to quickly create a similar document.;
                                 ENA=Copy document lines and optionally header information from another purchase document to this document. You can copy a posted purchase invoice into a new purchase invoice to quickly create a similar document.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CopyDocument;
                      PromotedCategory=New;
                      OnAction=BEGIN
                                 CopyPurchDoc.SetPurchHeader(Rec);
                                 CopyPurchDoc.RUNMODAL;
                                 CLEAR(CopyPurchDoc);
                               END;
                                }
      { 55      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Invoice;
                                 ENA=&Invoice];
                      Image=Invoice }
      { 58      ;2   ;Action    ;
                      Name=Vendor;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Vendor;
                                 ENA=Vendor];
                      ToolTipML=[ENU=View or edit detailed information about the vendor on the purchase document.;
                                 ENA=View or edit detailed information about the vendor on the purchase document.];
                      RunObject=Page 1330;
                      RunPageLink=No.=FIELD(Buy-from Vendor No.);
                      Promoted=Yes;
                      Enabled=VendorSelected;
                      PromotedIsBig=Yes;
                      Image=Vendor;
                      PromotedCategory=Category4 }
      { 132     ;2   ;Action    ;
                      Name=GetRecurringPurchaseLines;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Recurring Purchase Lines;
                                 ENA=Get Recurring Purchase Lines];
                      ToolTipML=[ENU=Insert purchase document lines that you have set up for the vendor as recurring. Recurring purchase lines could be for a monthly replenishment order or a fixed freight expense.;
                                 ENA=Insert purchase document lines that you have set up for the vendor as recurring. Recurring purchase lines could be for a monthly replenishment order or a fixed freight expense.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=VendorCode;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 StdVendPurchCode@1000 : Record 175;
                               BEGIN
                                 TESTFIELD("No.");
                                 TESTFIELD("Buy-from Vendor No.");

                                 StdVendPurchCode.FILTERGROUP := 2;
                                 StdVendPurchCode.SETRANGE("Vendor No.","Buy-from Vendor No.");
                                 StdVendPurchCode.FILTERGROUP := 0;

                                 IF PAGE.RUNMODAL(PAGE::"Mini Standard Vendor Purchase",StdVendPurchCode) = ACTION::LookupOK THEN
                                   StdVendPurchCode.ApplyStdCodesToPurchaseLines(Rec,StdVendPurchCode);
                               END;
                                }
      { 66      ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 ENA=P&osting];
                      Image=Post }
      { 68      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 ENA=P&ost];
                      ToolTipML=[ENU=Finalize the purchase document. Posting updates the books with the document's amounts and quantities.;
                                 ENA=Finalise the purchase document. Posting updates the books with the document's amounts and quantities.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Purch.-Post (Yes/No)");
                               END;
                                }
      { 10      ;1   ;ActionGroup;
                      Name=View;
                      CaptionML=[ENU=View;
                                 ENA=View] }
      { 9       ;2   ;Action    ;
                      CaptionML=[ENU=Pay-to Address;
                                 ENA=Pay-to Address];
                      ToolTipML=[ENU=Show fields for the vendor's payment and shipping addresses. The shipping is used when you return items to the vendor. You can specify a different address where the item or service is delivered or specify a different address where the document is sent.;
                                 ENA=Show fields for the vendor's payment and shipping addresses. The shipping is used when you return items to the vendor. You can specify a different address where the item or service is delivered or specify a different address where the document is sent.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ShipAddress;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ShowPayToShipToTab := NOT ShowPayToShipToTab;
                               END;
                                }
      { 7       ;2   ;Action    ;
                      Name=Currency;
                      CaptionML=[ENU=Currency;
                                 ENA=Currency];
                      ToolTipML=[ENU=Show a field for specifying an alternate currency. You can specify a currency that is different than your local currency for amounts on this purchase document.;
                                 ENA=Show a field for specifying an alternate currency. You can specify a currency that is different than your local currency for amounts on this purchase document.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Currency;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ShowCurrencyTab := NOT ShowCurrencyTab;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ENA=General] }

    { 2   ;2   ;Group     ;
                Name=VendorDetails;
                CaptionML=[ENU=Vendor Details;
                           ENA=Vendor Details];
                GroupType=Group }

    { 6   ;3   ;Field     ;
                CaptionML=[ENU=Vendor Name;
                           ENA=Vendor Name];
                ToolTipML=[ENU=Specifies the name of the vendor who ships the items.;
                           ENA=Specifies the name of the vendor who ships the items.];
                NotBlank=Yes;
                SourceExpr="Buy-from Vendor Name";
                TableRelation=Vendor.Name;
                LookupPageID=Mini Vendor List;
                DrillDownPageID=Mini Vendor List;
                OnValidate=VAR
                             NewVendNo@1000 : Code[20];
                           BEGIN
                             IF "No." = '' THEN
                               InitRecord;
                             IF "Buy-from Vendor Name" <> xRec."Buy-from Vendor Name" THEN BEGIN
                               NewVendNo := MiniVendorMgt.GetVendorNoByName("Buy-from Vendor Name");
                               VALIDATE("Buy-from Vendor No.",NewVendNo);
                             END;
                             CurrPage.UPDATE;
                             PurchaseCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 72  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENA=Address];
                ToolTipML=[ENU=Specifies the address of the vendor who ships the items.;
                           ENA=Specifies the address of the vendor who ships the items.];
                SourceExpr="Buy-from Address" }

    { 74  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENA=Address 2];
                ToolTipML=[ENU=Specifies an additional part of the address of the vendor who ships the items.;
                           ENA=Specifies an additional part of the address of the vendor who ships the items.];
                SourceExpr="Buy-from Address 2" }

    { 77  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENA=Post Code];
                ToolTipML=[ENU=Specifies the post code of the vendor's address that items are purchased from.;
                           ENA=Specifies the post code of the vendor's address that items are purchased from.];
                SourceExpr="Buy-from Post Code" }

    { 76  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ENA=City];
                ToolTipML=[ENU=Specifies the city name of the vendor who ships the items.;
                           ENA=Specifies the city name of the vendor who ships the items.];
                SourceExpr="Buy-from City" }

    { 8   ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENA=Contact];
                ToolTipML=[ENU=Specifies the name of the person to contact about shipment of the item from this vendor.;
                           ENA=Specifies the name of the person to contact about shipment of the item from this vendor.];
                SourceExpr="Buy-from Contact" }

    { 11  ;2   ;Group     ;
                Name=InvoiceDetails;
                CaptionML=[ENU=Invoice Details;
                           ENA=Invoice Details];
                GroupType=Group }

    { 12  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the posting of the purchase document will be recorded. By default, today's date is entered.;
                           ENA=Specifies the date when the posting of the purchase document will be recorded. By default, today's date is entered.];
                SourceExpr="Posting Date";
                Importance=Promoted }

    { 43  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which the vendor created the purchase document (the date of the vendor's invoice).;
                           ENA=Specifies the date on which the vendor created the purchase document (the date of the vendor's invoice).];
                SourceExpr="Document Date" }

    { 48  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the date you expect to receive the items on the purchase document.;
                           ENA=Specifies the date you expect to receive the items on the purchase document.];
                SourceExpr="Expected Receipt Date";
                Importance=Promoted }

    { 108 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies whether the unit price on the line should be displayed including or excluding VAT.;
                           ENA=Specifies whether the unit price on the line should be displayed including or excluding GST.];
                SourceExpr="Prices Including VAT";
                Visible=FALSE;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             CALCFIELDS("Invoice Discount Amount");
                             PurchaseCalcDiscByType.ApplyDefaultInvoiceDiscount("Invoice Discount Amount",Rec);
                           END;
                            }

    { 138 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the vendor's VAT specification to link transactions made for this vendor with the appropriate general ledger account according to the VAT posting setup.;
                           ENA=Specifies the vendor's GST specification to link transactions made for this vendor with the appropriate general ledger account according to the GST posting setup.];
                SourceExpr="VAT Bus. Posting Group";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             PurchaseCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 14  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the number that the vendor uses on the invoice that they sent to you. By default, you must fill this field, but you can change that setting in the Ext. Doc. No. Mandatory field.;
                           ENA=Specifies the number that the vendor uses on the invoice that they sent to you. By default, you must fill this field, but you can change that setting in the Ext. Doc. No. Mandatory field.];
                SourceExpr="Vendor Invoice No." }

    { 4   ;3   ;Field     ;
                ToolTipML=[ENU=Specifies a code for the purchase header's transaction type here. To see the transaction type codes that have been set up in the Transaction Type table, click the field.;
                           ENA=Specifies a code for the purchase header's transaction type here. To see the transaction type codes that have been set up in the Transaction Type table, click the field.];
                SourceExpr="Transaction Type" }

    { 13  ;2   ;Group     ;
                Name=PaymentDetails;
                CaptionML=[ENU=Payment Details;
                           ENA=Payment Details];
                GroupType=Group }

    { 28  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the purchase document. By default, the payment term from the vendor card is entered.;
                           ENA=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the purchase document. By default, the payment term from the vendor card is entered.];
                SourceExpr="Payment Terms Code";
                Importance=Promoted }

    { 30  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies when the invoice is due. The program calculates the date using the Payment Terms Code and Document Date fields.;
                           ENA=Specifies when the invoice is due. The program calculates the date using the Payment Terms Code and Document Date fields.];
                SourceExpr="Due Date";
                Importance=Promoted }

    { 102 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies how payment for the purchase document must be submitted, such as bank transfer or check. By default, the payment method from the vendor card is entered.;
                           ENA=Specifies how payment for the purchase document must be submitted, such as bank transfer or cheque. By default, the payment method from the vendor card is entered.];
                SourceExpr="Payment Method Code" }

    { 15  ;2   ;Group     ;
                Name=Currency;
                Visible=ShowCurrencyTab;
                GroupType=Group }

    { 104 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the currency of the amounts on the purchase lines.;
                           ENA=Specifies the code of the currency of the amounts on the purchase lines.];
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             PurchaseCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 54  ;1   ;Part      ;
                Name=PurchLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page1355 }

    { 1905885101;1;Group  ;
                Name=PayToAndShipToAddressesTab;
                CaptionML=[ENU=Pay-to Address;
                           ENA=Pay-to Address];
                Visible=ShowPayToShipToTab;
                GroupType=Group }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Name;
                           ENA=Name];
                ToolTipML=[ENU=Specifies the name of the vendor sending the invoice.;
                           ENA=Specifies the name of the vendor sending the invoice.];
                SourceExpr="Pay-to Name";
                TableRelation=Vendor.Name;
                LookupPageID=Mini Vendor List;
                DrillDownPageID=Mini Vendor List;
                OnValidate=VAR
                             NewVendorNo@1000 : Code[20];
                           BEGIN
                             IF ("Pay-to Name" <> xRec."Pay-to Name")
                             THEN BEGIN
                               NewVendorNo := MiniVendorMgt.GetVendorNoByName("Pay-to Name");
                               VALIDATE("Pay-to Vendor No.",NewVendorNo);
                             END;
                             CurrPage.UPDATE;
                             PurchaseCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 20  ;2   ;Field     ;
                CaptionML=[ENU=Address;
                           ENA=Address];
                ToolTipML=[ENU=Specifies the address of the vendor sending the invoice.;
                           ENA=Specifies the address of the vendor sending the invoice.];
                SourceExpr="Pay-to Address" }

    { 22  ;2   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENA=Address 2];
                ToolTipML=[ENU=Contains another line of the address of the vendor who sends the invoice.;
                           ENA=Contains another line of the address of the vendor who sends the invoice.];
                SourceExpr="Pay-to Address 2" }

    { 82  ;2   ;Field     ;
                CaptionML=[ENU=Post Code;
                           ENA=Post Code];
                ToolTipML=[ENU=Specifies the post code of the vendor's address that payment is made to.;
                           ENA=Specifies the post code of the vendor's address that payment is made to.];
                SourceExpr="Pay-to Post Code" }

    { 24  ;2   ;Field     ;
                CaptionML=[ENU=City;
                           ENA=City];
                ToolTipML=[ENU=Specifies the city name of the vendor sending the invoice.;
                           ENA=Specifies the city name of the vendor sending the invoice.];
                SourceExpr="Pay-to City" }

    { 26  ;2   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENA=Contact];
                ToolTipML=[ENU=Specifies the name of the person to contact about an invoice from this vendor.;
                           ENA=Specifies the name of the person to contact about an invoice from this vendor.];
                SourceExpr="Pay-to Contact" }

  }
  CODE
  {
    VAR
      CopyPurchDoc@1002 : Report 492;
      UserSetupManagement@1004 : Codeunit 5700;
      PurchaseCalcDiscByType@1003 : Codeunit 1310;
      MiniVendorMgt@1005 : Codeunit 1312;
      MiniLinesInstructionMgt@1009 : Codeunit 1320;
      ChangeExchangeRate@1001 : Page 511;
      ShowCurrencyTab@1006 : Boolean;
      ShowPayToShipToTab@1000 : Boolean;
      OpenPostedPurchaseInvQst@1007 : TextConst 'ENU=The invoice has been posted and moved to the Posted Purchase Invoice list.\\Do you want to open the posted invoice?;ENA=The invoice has been posted and moved to the Posted Purchase Invoice list.\\Do you want to open the posted invoice?';
      VendorSelected@1008 : Boolean;

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer);
    BEGIN
      MiniLinesInstructionMgt.PurchaseCheckAllLinesHaveQuantityAssigned(Rec);
      SendToPosting(PostingCodeunitID);
      ShowPostedConfirmationMessage;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@7();
    VAR
      PurchInvHeader@1000 : Record 122;
    BEGIN
      PurchInvHeader.SETFILTER("Pre-Assigned No.","No.");
      IF PurchInvHeader.FINDFIRST THEN
        IF DIALOG.CONFIRM(OpenPostedPurchaseInvQst,FALSE) THEN
          PAGE.RUN(PAGE::"Mini Posted Purchase Invoice",PurchInvHeader);
    END;

    LOCAL PROCEDURE UpdateVisiblePayShowToTab@1();
    BEGIN
      ShowPayToShipToTab := ("Buy-from Vendor No." <> "Pay-to Vendor No.") OR ("Buy-from Address" <> "Pay-to Address");
    END;

    BEGIN
    END.
  }
}

