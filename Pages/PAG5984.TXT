OBJECT Page 5984 Service Item Trend Lines
{
  OBJECT-PROPERTIES
  {
    Date=09/07/12;
    Time=12:00:00;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               ENA=Lines];
    LinksAllowed=No;
    SourceTable=Table2000000007;
    PageType=ListPart;
    OnOpenPage=BEGIN
                 RESET;
               END;

    OnFindRecord=BEGIN
                   EXIT(PeriodFormMgt.FindDate(Which,Rec,ServItemPeriodLength));
                 END;

    OnNextRecord=BEGIN
                   EXIT(PeriodFormMgt.NextDate(Steps,Rec,ServItemPeriodLength));
                 END;

    OnAfterGetRecord=BEGIN
                       SetDateFilter;
                       ServItem.CALCFIELDS("Invoiced Amount","Resources Used","Parts Used","Cost Used","Prepaid Amount");
                       Profit := ServItem."Invoiced Amount" - ServItem."Resources Used" - ServItem."Parts Used" - ServItem."Cost Used";
                       IF ServItem."Invoiced Amount" <> 0 THEN
                         "Profit%" := ROUND((Profit / ServItem."Invoiced Amount") * 100,0.01)
                       ELSE
                         "Profit%" := 0;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Period Start;
                           ENA=Period Start];
                SourceExpr="Period Start" }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Period Name;
                           ENA=Period Name];
                SourceExpr="Period Name" }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Prepaid Income;
                           ENA=Prepaid Income];
                SourceExpr=ServItem."Prepaid Amount";
                OnDrillDown=BEGIN
                              SetDateFilter;
                              CLEAR(ServLedgEntry);
                              ServLedgEntry.SETCURRENTKEY("Service Item No. (Serviced)","Entry Type","Moved from Prepaid Acc.",Type,"Posting Date");
                              ServLedgEntry.SETRANGE("Service Item No. (Serviced)",ServItem."No.");
                              ServLedgEntry.SETRANGE("Entry Type",ServLedgEntry."Entry Type"::Sale);
                              ServLedgEntry.SETRANGE("Moved from Prepaid Acc.",FALSE);
                              ServLedgEntry.SETRANGE(Open,FALSE);
                              ServLedgEntry.SETFILTER("Posting Date",ServItem.GETFILTER("Date Filter"));
                              PAGE.RUN(0,ServLedgEntry);
                            END;
                             }

    { 4   ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=[ENU=Posted Income;
                           ENA=Posted Income];
                SourceExpr=ServItem."Invoiced Amount";
                OnDrillDown=BEGIN
                              SetDateFilter;
                              CLEAR(ServLedgEntry);
                              ServLedgEntry.SETCURRENTKEY("Service Item No. (Serviced)","Entry Type","Moved from Prepaid Acc.",Type,"Posting Date");
                              ServLedgEntry.SETRANGE("Service Item No. (Serviced)",ServItem."No.");
                              ServLedgEntry.SETRANGE("Entry Type",ServLedgEntry."Entry Type"::Sale);
                              ServLedgEntry.SETRANGE("Moved from Prepaid Acc.",TRUE);
                              ServLedgEntry.SETRANGE(Open,FALSE);
                              ServLedgEntry.SETFILTER("Posting Date",ServItem.GETFILTER("Date Filter"));
                              PAGE.RUN(0,ServLedgEntry);
                            END;
                             }

    { 8   ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=[ENU=Parts Used;
                           ENA=Parts Used];
                SourceExpr=ServItem."Parts Used";
                OnDrillDown=BEGIN
                              SetDateFilter;
                              CLEAR(ServLedgEntry);
                              ServLedgEntry.SETCURRENTKEY("Service Item No. (Serviced)","Entry Type","Moved from Prepaid Acc.",Type,"Posting Date");
                              ServLedgEntry.SETRANGE("Service Item No. (Serviced)",ServItem."No.");
                              ServLedgEntry.SETRANGE("Entry Type",ServLedgEntry."Entry Type"::Sale);
                              ServLedgEntry.SETRANGE(Type,ServLedgEntry.Type::Item);
                              ServLedgEntry.SETFILTER("Posting Date",ServItem.GETFILTER("Date Filter"));
                              PAGE.RUN(0,ServLedgEntry);
                            END;
                             }

    { 10  ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=[ENU=Resources Used;
                           ENA=Resources Used];
                SourceExpr=ServItem."Resources Used";
                OnDrillDown=BEGIN
                              SetDateFilter;
                              CLEAR(ServLedgEntry);
                              ServLedgEntry.SETCURRENTKEY("Service Item No. (Serviced)","Entry Type","Moved from Prepaid Acc.",Type,"Posting Date");
                              ServLedgEntry.SETRANGE("Service Item No. (Serviced)",ServItem."No.");
                              ServLedgEntry.SETRANGE("Entry Type",ServLedgEntry."Entry Type"::Sale);
                              ServLedgEntry.SETRANGE(Type,ServLedgEntry.Type::Resource);
                              ServLedgEntry.SETFILTER("Posting Date",ServItem.GETFILTER("Date Filter"));
                              PAGE.RUN(0,ServLedgEntry);
                            END;
                             }

    { 12  ;2   ;Field     ;
                CaptionML=[ENU=Cost Used;
                           ENA=Cost Used];
                SourceExpr=ServItem."Cost Used";
                OnDrillDown=BEGIN
                              SetDateFilter;
                              CLEAR(ServLedgEntry);
                              ServLedgEntry.SETCURRENTKEY("Service Item No. (Serviced)","Entry Type","Moved from Prepaid Acc.",Type,"Posting Date");
                              ServLedgEntry.SETRANGE("Service Item No. (Serviced)",ServItem."No.");
                              ServLedgEntry.SETRANGE("Entry Type",ServLedgEntry."Entry Type"::Sale);
                              ServLedgEntry.SETRANGE(Type,ServLedgEntry.Type::"Service Cost");
                              ServLedgEntry.SETFILTER("Posting Date",ServItem.GETFILTER("Date Filter"));
                              PAGE.RUN(0,ServLedgEntry);
                            END;
                             }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=Profit;
                           ENA=Profit];
                SourceExpr=Profit;
                AutoFormatType=1 }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=Profit %;
                           ENA=Profit %];
                SourceExpr="Profit%" }

  }
  CODE
  {
    VAR
      ServItem@1000 : Record 5940;
      ServLedgEntry@1001 : Record 5907;
      PeriodFormMgt@1002 : Codeunit 359;
      ServItemPeriodLength@1003 : 'Day,Week,Month,Quarter,Year,Period';
      AmountType@1004 : 'Net Change,Balance at Date';
      Profit@1005 : Decimal;
      "Profit%"@1006 : Decimal;

    PROCEDURE Set@1(VAR ServItem1@1000 : Record 5940;NewServItemPeriodLength@1001 : Integer;NewAmountType@1002 : 'Net Change,Balance at Date');
    BEGIN
      ServItem.COPY(ServItem1);
      ServItemPeriodLength := NewServItemPeriodLength;
      AmountType := NewAmountType;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE SetDateFilter@4();
    BEGIN
      IF AmountType = AmountType::"Net Change" THEN
        ServItem.SETRANGE("Date Filter","Period Start","Period End")
      ELSE
        ServItem.SETRANGE("Date Filter",0D,"Period End");
    END;

    BEGIN
    END.
  }
}

