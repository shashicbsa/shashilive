OBJECT Page 28070 Sales Tax Invoice Management
{
  OBJECT-PROPERTIES
  {
    Date=09/23/13;
    Time=12:00:00;
    Version List=NAVAPAC7.10,YIMMAVATO,UPG13,UPG13R2;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Tax Invoice Management;
               ENA=Sales Tax Invoice Management];
    SourceTable=Table112;
    SourceTableView=SORTING(Printed Tax Document,Bill-to Customer No.,Currency Code,Payment Discount %,Posted Tax Document,Tax Document Marked);
    PageType=List;
    OnOpenPage=BEGIN
                 RESET;
                 SETCURRENTKEY(
                   "Printed Tax Document","Bill-to Customer No.","Currency Code","Payment Discount %","Posted Tax Document",
                   "Tax Document Marked");
                 SETRANGE("Posted Tax Document",FALSE);
                 SETRANGE("Tax Document Marked",FALSE);
                 InvoiceTypes := InvoiceTypes::All;
                 FILTERGROUP(2);
               END;

    OnAfterGetRecord=BEGIN
                       LineCount := COUNT;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1500006 ;1   ;ActionGroup;
                      CaptionML=[ENU=&Invoice;
                                 ENA=&Invoice];
                      Image=Invoice }
      { 1500076 ;2   ;Action    ;
                      CaptionML=[ENU=&Card;
                                 ENA=&Card];
                      RunObject=Page 143;
                      RunPageLink=No.=FIELD(No.);
                      Image=EditLines }
      { 1500004 ;1   ;ActionGroup;
                      CaptionML=[ENU=&Customer;
                                 ENA=&Customer];
                      Image=Customer }
      { 1500075 ;2   ;Action    ;
                      CaptionML=[ENU=&Card;
                                 ENA=&Card];
                      RunObject=Page 22;
                      RunPageLink=No.=FIELD(Bill-to Customer No.);
                      Image=EditLines }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1500003 ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 ENA=P&osting];
                      Image=Post }
      { 1500073 ;2   ;Action    ;
                      CaptionML=[ENU=P&ost &Tax Invoice;
                                 ENA=P&ost &Tax Invoice];
                      Promoted=Yes;
                      Image=PostTaxInvoice;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //TaxManagement.GroupSalesTaxInvPosted(Rec,FALSE,0D); // UPG13
                               END;
                                }
      { 1500074 ;2   ;Action    ;
                      CaptionML=[ENU=Post and &Print Tax Invoice;
                                 ENA=Post and &Print Tax Invoice];
                      Promoted=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //TaxManagement.GroupSalesTaxInvPosted(Rec,TRUE); // UPG13
                               END;
                                }
      { 1905512904;1 ;Action    ;
                      CaptionML=[ENU=Posted Sales Tax Invoice;
                                 ENA=Posted US Sales Tax Invoice];
                      RunObject=Page 28071;
                      Promoted=Yes;
                      Image=PostedTaxInvoice;
                      PromotedCategory=Process }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1500002;1;Group     ;
                CaptionML=[ENU=General;
                           ENA=General] }

    { 1500069;2;Field     ;
                CaptionML=[ENU=Tax Date;
                           ENA=Date Filter];
                SourceExpr=Tax_Date;
                OnValidate=BEGIN
                             // UPG13.begin
                             //YIMMAVATOST
                             IF Tax_Date = '' THEN
                               SETRANGE("Tax Invoice Date")
                             ELSE BEGIN
                             IF AppMgmt.MakeDateFilter(Tax_Date) = 0 THEN;
                             SETFILTER("Tax Invoice Date",Tax_Date);
                             Tax_Date := GETFILTER("Tax Invoice Date");
                             END;
                             //YIMMAVATOEN
                             // UPG13.end
                             DateFilterOnAfterValidate;
                           END;
                            }

    { 1500063;2;Field     ;
                CaptionML=[ENU=Tax Invoice Types;
                           ENA=Tax Invoice Types];
                SourceExpr=InvoiceTypes;
                OnValidate=BEGIN
                             InvoiceTypesOnAfterValidate;
                           END;
                            }

    { 1500067;2;Field     ;
                CaptionML=[ENU=Show Posted Tax Invoice;
                           ENA=Show Posted Tax Invoice];
                SourceExpr=PostedInvoice;
                OnValidate=BEGIN
                             PostedInvoiceOnAfterValidate;
                           END;
                            }

    { 1500065;2;Field     ;
                CaptionML=[ENU=Show Printed Tax Invoice;
                           ENA=Show Printed Tax Invoice];
                SourceExpr=PrintedInvoice;
                OnValidate=BEGIN
                             PrintedInvoiceOnAfterValidate;
                           END;
                            }

    { 1500000;1;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 1000000002;2;Field  ;
                SourceExpr="Ship-to Code" }

    { 1500007;2;Field     ;
                SourceExpr="No." }

    { 1500009;2;Field     ;
                SourceExpr="Sell-to Customer No.";
                Visible=FALSE }

    { 1500011;2;Field     ;
                SourceExpr="Bill-to Customer No." }

    { 1500013;2;Field     ;
                SourceExpr="Bill-to Name" }

    { 1000000000;2;Field  ;
                SourceExpr="Tax Invoice Date" }

    { 1500015;2;Field     ;
                SourceExpr="Bill-to Name 2";
                Visible=FALSE }

    { 1500017;2;Field     ;
                SourceExpr="Bill-to Address";
                Visible=FALSE }

    { 1500019;2;Field     ;
                SourceExpr="Bill-to Address 2";
                Visible=FALSE }

    { 1500021;2;Field     ;
                SourceExpr="Bill-to City";
                Visible=FALSE }

    { 1500023;2;Field     ;
                SourceExpr="Bill-to County";
                Visible=FALSE }

    { 1500025;2;Field     ;
                SourceExpr="Bill-to Post Code";
                Visible=FALSE }

    { 1500027;2;Field     ;
                SourceExpr="Bill-to Country/Region Code";
                Visible=FALSE }

    { 1500029;2;Field     ;
                SourceExpr="Bill-to Contact";
                Visible=FALSE }

    { 1500031;2;Field     ;
                SourceExpr="Your Reference";
                Visible=FALSE }

    { 1500033;2;Field     ;
                SourceExpr="Document Date" }

    { 1500035;2;Field     ;
                SourceExpr="Posting Date" }

    { 1500037;2;Field     ;
                SourceExpr="Payment Terms Code";
                Visible=FALSE }

    { 1500039;2;Field     ;
                SourceExpr="Due Date";
                Visible=FALSE }

    { 1500041;2;Field     ;
                SourceExpr="Pmt. Discount Date";
                Visible=FALSE }

    { 1500043;2;Field     ;
                SourceExpr="Salesperson Code";
                Visible=FALSE }

    { 1500045;2;Field     ;
                SourceExpr="No. Printed" }

    { 1500047;2;Field     ;
                SourceExpr="Currency Code" }

    { 1500049;2;Field     ;
                SourceExpr="Payment Discount %" }

    { 1500051;2;Field     ;
                SourceExpr=Amount }

    { 1500053;2;Field     ;
                SourceExpr="Amount Including VAT" }

    { 1500055;2;Field     ;
                SourceExpr="External Document No.";
                Visible=FALSE }

    { 1500057;2;Field     ;
                SourceExpr="Printed Tax Document" }

    { 1500059;2;Field     ;
                SourceExpr="Tax Document Marked" }

    { 1500061;2;Field     ;
                SourceExpr="Posted Tax Document" }

    { 1500005;1;Group      }

    { 1500071;2;Field     ;
                CaptionML=[ENU=Count;
                           ENA=Count];
                SourceExpr=LineCount;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      TaxManagement@1500006 : Codeunit 28070;
      LineCount@1500004 : Integer;
      InvoiceTypes@1500002 : ' ,Document Post,Group Batch,Prompt,All';
      PrintedInvoice@1500001 : Boolean;
      PostedInvoice@1500000 : Boolean;
      DateFilter@150000 : Text[250];
      Tax_Date@1000000000 : Text[250];
      AppMgmt@1000000001 : Codeunit 1;

    PROCEDURE UpdateBalance@1500000();
    BEGIN
      RESET;
      FILTERGROUP(2);
      IF DateFilter <> '' THEN
        SETFILTER("Posting Date",DateFilter);
      IF InvoiceTypes = InvoiceTypes::All THEN
        SETRANGE("Tax Document Type")
      ELSE
        SETRANGE("Tax Document Type",InvoiceTypes);
      SETRANGE("Printed Tax Document",PrintedInvoice);
      SETRANGE("Posted Tax Document",PostedInvoice);
      // UPG13.begin
      //YIMMAVATO
      SETFILTER("Tax Invoice Date",Tax_Date);
      FILTERGROUP(2);
      // UPG13.end
      //FILTERGROUP(0); // UPG13
      CurrPage.UPDATE(FALSE);
      LineCount := COUNT;
    END;

    LOCAL PROCEDURE InvoiceTypesOnAfterValidate@19068816();
    BEGIN
      UpdateBalance;
    END;

    LOCAL PROCEDURE PrintedInvoiceOnAfterValidate@19002942();
    BEGIN
      {
      IF PrintedInvoice THEN
        SETRANGE("Printed Tax Document",TRUE)
      ELSE
        SETRANGE("Printed Tax Document",FALSE);
      CurrForm.UPDATE(FALSE);
      }
      UpdateBalance;
    END;

    LOCAL PROCEDURE PostedInvoiceOnAfterValidate@19041858();
    BEGIN
      {
      IF PostedInvoice THEN
        SETRANGE("Posted Tax Document",TRUE)
      ELSE
        SETRANGE("Posted Tax Document",FALSE);
      CurrForm.UPDATE(FALSE);
      }
      UpdateBalance;
    END;

    LOCAL PROCEDURE DateFilterOnAfterValidate@19006009();
    BEGIN
      // SETFILTER("Posting Date",GETFILTER("Tax Date Filter")); // PS41144
      UpdateBalance;
    END;

    BEGIN
    {
      //YIMMAVATO
      // UPG13
      5.0 Customized Code to 2013 Merged Code.
      // UPG13R2
      2013 to 2013R2 Merged Code.
    }
    END.
  }
}

