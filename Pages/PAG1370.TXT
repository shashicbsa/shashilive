OBJECT Page 1370 Mini Purch. Cr.Memo Subform
{
  OBJECT-PROPERTIES
  {
    Date=11/10/13;
    Time=12:00:00;
    Version List=NAVW17.10.00.35701;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               ENA=Lines];
    MultipleNewLines=Yes;
    LinksAllowed=No;
    SourceTable=Table39;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Document Type=FILTER(Credit Memo));
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnNewRecord=BEGIN
                  Type := Type::Item;
                END;

    OnDeleteRecord=BEGIN
                     DELETE;
                     UpdatePage;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           TotalsOnLinesSubforms.CalculatePurchHeaderTotals(TotalPurchHeader,VATAmount,Rec);
                           UpdateEditableOnRow;
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1900206204;1 ;Action    ;
                      Name=InsertExtTextsAction;
                      CaptionML=[ENU=Insert &Ext. Text;
                                 ENA=Insert &Ext. Text];
                      ToolTipML=[ENU=Insert the extended item description that is set up for the item.;
                                 ENA=Insert the extended item description that is set up for the item.];
                      Image=Text;
                      OnAction=BEGIN
                                 InsertExtendedText(TRUE);
                               END;
                                }
      { 1904522204;1 ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENA=Dimensions];
                      ToolTipML=[ENU=View or edit the dimension sets that are set up for the combination of vendor and item on the invoice line.;
                                 ENA=View or edit the dimension sets that are set up for the combination of vendor and item on the invoice line.];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 4   ;2   ;Field     ;
                CaptionML=[ENU=Item No.;
                           ENA=Item No.];
                ToolTipML=[ENU=Specifies the number of a general ledger account, an item, an additional cost or a fixed asset, depending on what you selected in the Type field.;
                           ENA=Specifies the number of a general ledger account, an item, an additional cost or a fixed asset, depending on what you selected in the Type field.];
                SourceExpr="No.";
                LookupPageID=Mini Item List;
                DrillDownPageID=Mini Item List;
                OnValidate=BEGIN
                             NoOnAfterValidate;
                             UpdateEditableOnRow;
                             UpdatePage;
                           END;
                            }

    { 58  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the cross-reference number for this item. To see the available item cross-reference numbers, click the field.;
                           ENA=Specifies the cross-reference number for this item. To see the available item cross-reference numbers, click the field.];
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             CrossReferenceNoOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           CrossReferenceNoLookUp;
                           InsertExtendedText(FALSE);
                         END;
                          }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Description/Comment;
                           ENA=Description/Comment];
                ToolTipML=[ENU=Contains a description of the entry. The description depends on what you chose in the Type field. If you did not choose Blank, the program will fill in the field when you enter something in the No. field.;
                           ENA=Contains a description of the entry. The description depends on what you chose in the Type field. If you did not choose Blank, the program will fill in the field when you enter something in the No. field.];
                SourceExpr=Description;
                OnValidate=VAR
                             MiniLinesInstructionMgt@1000 : Codeunit 1320;
                           BEGIN
                             MiniLinesInstructionMgt.ShowCreateLineInstruction("No.");
                           END;
                            }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of units of the item that will be specified on the line. Even if you later change the item number, this quantity stays unchanged on the line.;
                           ENA=Specifies the number of units of the item that will be specified on the line. Even if you later change the item number, this quantity stays unchanged on the line.];
                BlankZero=Yes;
                SourceExpr=Quantity;
                Enabled=RowEditable;
                Editable=RowEditable;
                OnValidate=BEGIN
                             UpdatePage;
                           END;
                            }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit of measure code that is valid for the purchase line.;
                           ENA=Specifies the unit of measure code that is valid for the purchase line.];
                SourceExpr="Unit of Measure Code";
                Enabled=RowEditable;
                Editable=RowEditable;
                OnValidate=BEGIN
                             UpdatePage;
                           END;
                            }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the direct unit cost of the item on the line.;
                           ENA=Specifies the direct unit cost of the item on the line.];
                BlankZero=Yes;
                SourceExpr="Direct Unit Cost";
                Enabled=RowEditable;
                Editable=RowEditable;
                OnValidate=BEGIN
                             UpdatePage;
                           END;
                            }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line discount percentage that is valid for the item on the line.;
                           ENA=Specifies the line discount percentage that is valid for the item on the line.];
                BlankZero=Yes;
                SourceExpr="Line Discount %";
                Enabled=RowEditable;
                Editable=RowEditable;
                OnValidate=BEGIN
                             UpdatePage;
                           END;
                            }

    { 40  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount of the line discount that will be granted on the purchase line. The amount is shown in the currency of the purchase document.;
                           ENA=Specifies the amount of the line discount that will be granted on the purchase line. The amount is shown in the currency of the purchase document.];
                SourceExpr="Line Discount Amount";
                Visible=FALSE;
                Enabled=RowEditable;
                Editable=RowEditable;
                OnValidate=BEGIN
                             UpdatePage;
                           END;
                            }

    { 64  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the net amount (excluding the invoice discount amount) of the line, in the currency of the purchase document. If you have placed a check mark in the Prices Including VAT field, the amount displayed will include VAT.;
                           ENA=Specifies the net amount (excluding the invoice discount amount) of the line, in the currency of the purchase document. If you have placed a check mark in the Prices Including GST field, the amount displayed will include GST.];
                BlankZero=Yes;
                SourceExpr="Line Amount";
                Enabled=RowEditable;
                Editable=RowEditable;
                OnValidate=BEGIN
                             UpdatePage;
                           END;
                            }

    { 100 ;1   ;Group     ;
                GroupType=FixedLayout }

    { 101 ;2   ;Group     ;
                GroupType=Group }

    { 102 ;3   ;Field     ;
                SourceExpr='';
                Enabled=FALSE;
                Editable=FALSE }

    { 103 ;1   ;Group     ;
                GroupType=Group }

    { 104 ;2   ;Group     ;
                GroupType=GridLayout;
                Layout=Columns }

    { 105 ;3   ;Group     ;
                GroupType=Group }

    { 106 ;4   ;Group     ;
                GroupType=Group }

    { 107 ;5   ;Field     ;
                Name=Invoice Discount Amount;
                CaptionML=[ENU=Invoice Discount Amount;
                           ENA=Invoice Discount Amount];
                SourceExpr=TotalPurchHeader."Invoice Discount Amount";
                OnValidate=VAR
                             PurchHeader@1000 : Record 38;
                           BEGIN
                             PurchHeader.GET("Document Type","Document No.");
                             PurchCalcDiscByType.ApplyInvDiscBasedOnAmt(TotalPurchHeader."Invoice Discount Amount",PurchHeader);
                             CurrPage.UPDATE;
                           END;
                            }

    { 5   ;5   ;Field     ;
                Name=Vend. Invoice Disc. Pct.;
                CaptionML=[ENU=Vendor Invoice Discount %;
                           ENA=Vendor Invoice Discount %];
                DecimalPlaces=0:1;
                SourceExpr=PurchCalcDiscByType.GetVendInvoiceDiscountPct(Rec);
                Editable=FALSE }

    { 120 ;3   ;Group     ;
                GroupType=Group }

    { 121 ;4   ;Group     ;
                GroupType=Group }

    { 122 ;5   ;Group     ;
                GroupType=FixedLayout }

    { 123 ;6   ;Group     ;
                GroupType=Group }

    { 124 ;7   ;Field     ;
                SourceExpr='';
                Enabled=FALSE;
                Editable=FALSE }

    { 130 ;3   ;Group     ;
                GroupType=Group }

    { 131 ;4   ;Group     ;
                GroupType=Group }

    { 7   ;5   ;Field     ;
                Name=Total Amount Excl. VAT;
                DrillDown=No;
                SourceExpr=TotalPurchHeader.Amount;
                CaptionClass=TotalsOnLinesSubforms.GetTotalExclVATCaption(TotalPurchHeader."Currency Code");
                Editable=FALSE }

    { 2   ;5   ;Field     ;
                Name=Total VAT Amount;
                SourceExpr=VATAmount;
                CaptionClass=TotalsOnLinesSubforms.GetTotalVATCaption(TotalPurchHeader."Currency Code");
                Editable=FALSE }

    { 3   ;5   ;Field     ;
                Name=Total Amount Incl. VAT;
                SourceExpr=TotalPurchHeader."Amount Including VAT";
                CaptionClass=TotalsOnLinesSubforms.GetTotalInclVATCaption(TotalPurchHeader."Currency Code");
                Editable=FALSE;
                Style=Strong;
                StyleExpr=TRUE }

  }
  CODE
  {
    VAR
      TotalPurchHeader@1000 : Record 38;
      TransferExtendedText@1003 : Codeunit 378;
      PurchCalcDiscByType@1001 : Codeunit 1310;
      TotalsOnLinesSubforms@1002 : Codeunit 1301;
      VATAmount@1004 : Decimal;
      RowEditable@1005 : Boolean;

    LOCAL PROCEDURE InsertExtendedText@7(Unconditionally@1000 : Boolean);
    BEGIN
      IF TransferExtendedText.PurchCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        COMMIT;
        TransferExtendedText.InsertPurchExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        UpdatePage;
    END;

    LOCAL PROCEDURE UpdatePage@12();
    VAR
      PurchHeader@1001 : Record 38;
    BEGIN
      CurrPage.UPDATE;
      PurchHeader.GET("Document Type","Document No.");
      PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(TotalPurchHeader."Invoice Discount Amount",PurchHeader);
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      InsertExtendedText(FALSE);
      TESTFIELD(Type,Type::Item);
    END;

    LOCAL PROCEDURE CrossReferenceNoOnAfterValidat@19048248();
    BEGIN
      InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE UpdateEditableOnRow@5();
    BEGIN
      RowEditable := "No." <> '';
    END;

    BEGIN
    END.
  }
}

