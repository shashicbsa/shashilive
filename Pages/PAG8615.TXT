OBJECT Page 8615 Config. Packages
{
  OBJECT-PROPERTIES
  {
    Date=08/16/14;
    Time=[ 6:00:00];
    Modified=Yes;
    Version List=NAVW17.00,S-003;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Config. Packages;
    SourceTable=Table8623;
    PageType=List;
    CardPageID=Config. Package Card;
    OnOpenPage=BEGIN
                 //S-003{
                 WITH gCoU_ConfigExcelExchange DO
                   IF (ServiceIsValid_Bol) THEN BEGIN
                     EVALUATE(gDat_LicenseEndDate, ServiceGetInfo_Txt('License End Date'));
                     IF (TODAY IN [CALCDATE('<-20D>', gDat_LicenseEndDate)..gDat_LicenseEndDate]) THEN
                       MESSAGE('[4Bz] Your Service will be expired on %1:\%2', FORMAT(gDat_LicenseEndDate, 0, 9), ServiceTextInfo_Txt);
                   END;
                 //S-003}
               END;

    ActionList=ACTIONS
    {
      { 9       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 20      ;1   ;ActionGroup;
                      CaptionML=ENU=Package }
      { 22      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Export Package;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Export;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 TESTFIELD(Code);
                                 ConfigXMLExchange.ExportPackage(Rec);
                               END;
                                }
      { 13      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Import Package;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ConfigXMLExchange.ImportPackageXMLFromClient;
                               END;
                                }
      { 26      ;2   ;Action    ;
                      Name=Export Packages to XML;
                      Ellipsis=Yes;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Export;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lRec_CP@1000 : Record 8623;
                               BEGIN
                                 //S-003{
                                 CurrPage.SETSELECTIONFILTER(lRec_CP);
                                 ConfigXMLExchange.ExportPackagesToXML(lRec_CP);
                                 //S-003}
                               END;
                                }
      { 18      ;2   ;Action    ;
                      Name=Import Packages from XML;
                      Ellipsis=Yes;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //S-003{
                                 ConfigXMLExchange.ImportPackagesFromXML();
                                 //S-003}
                               END;
                                }
      { 24      ;2   ;Action    ;
                      Name=Export all Tables Data to XML;
                      Ellipsis=Yes;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=UpdateXML;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lRec_CPTable@1000 : Record 8613;
                               BEGIN
                                 //S-003{
                                 lRec_CPTable.SETRANGE("Package Code", Code);
                                 ConfigXMLExchange.ExportTablesDataToXML(lRec_CPTable);
                                 //S-003}
                               END;
                                }
      { 8       ;2   ;Action    ;
                      Name=Import all Tables Data from XML;
                      Ellipsis=Yes;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=UpdateXML;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 lRec_CPTable@1000 : Record 8613;
                               BEGIN
                                 //S-003{
                                 lRec_CPTable.SETRANGE("Package Code", Code);
                                 ConfigXMLExchange.ImportTablesDataFromXML(lRec_CPTable);
                                 //S-003}
                               END;
                                }
      { 10      ;2   ;Action    ;
                      Name=Excel Import Export Wizard;
                      Ellipsis=Yes;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Excel;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //S-003{
                                 gCoU_ConfigExcelExchange.ExcelWizardStart();
                                 //S-003}
                               END;
                                }
      { 11      ;2   ;Action    ;
                      CaptionML=ENU=Export to Excel;
                      Image=ExportToExcel;
                      OnAction=VAR
                                 ConfigPackageTable@1000 : Record 8613;
                                 ConfigExcelExchange@1001 : Codeunit 8618;
                               BEGIN
                                 TESTFIELD(Code);

                                 ConfigPackageTable.SETRANGE("Package Code",Code);
                                 IF CONFIRM(Text004,TRUE,Code) THEN
                                   ConfigExcelExchange.ExportExcelFromTables(ConfigPackageTable);
                               END;
                                }
      { 15      ;2   ;Action    ;
                      CaptionML=ENU=Import from Excel;
                      Image=ImportExcel;
                      OnAction=VAR
                                 ConfigExcelExchange@1000 : Codeunit 8618;
                               BEGIN
                                 ConfigExcelExchange.ImportExcelFromPackage;
                               END;
                                }
      { 16      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions }
      { 19      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Get Tables;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=GetLines;
                      PromotedCategory=New;
                      OnAction=VAR
                                 GetPackageTables@1000 : Report 8616;
                               BEGIN
                                 CurrPage.SAVERECORD;
                                 GetPackageTables.Set(Code);
                                 GetPackageTables.RUNMODAL;
                                 CLEAR(GetPackageTables);
                               END;
                                }
      { 3       ;2   ;Action    ;
                      CaptionML=ENU=Apply Package;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Apply;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ConfigPackageTable@1002 : Record 8613;
                                 ConfigPackageMgt@1000 : Codeunit 8611;
                               BEGIN
                                 TESTFIELD(Code);
                                 IF CONFIRM(Text003,TRUE,Code) THEN BEGIN
                                   ConfigPackageTable.SETRANGE("Package Code",Code);
                                   ConfigPackageMgt.ApplyPackage(Rec,ConfigPackageTable,TRUE);
                                 END;
                               END;
                                }
      { 14      ;2   ;Action    ;
                      CaptionML=ENU=Copy Package;
                      Image=CopyWorksheet;
                      OnAction=VAR
                                 CopyPackage@1000 : Report 8615;
                               BEGIN
                                 TESTFIELD(Code);
                                 CopyPackage.Set(Rec);
                                 CopyPackage.RUNMODAL;
                                 CLEAR(CopyPackage);
                               END;
                                }
      { 17      ;2   ;Action    ;
                      CaptionML=ENU=Validate Package;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CheckRulesSyntax;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ConfigPackageTable@1000 : Record 8613;
                                 TempConfigPackageTable@1001 : TEMPORARY Record 8613;
                                 ConfigPackageMgt@1002 : Codeunit 8611;
                               BEGIN
                                 IF CONFIRM(Text002,TRUE,"Package Name") THEN BEGIN
                                   ConfigPackageTable.SETRANGE("Package Code",Code);
                                   ConfigPackageMgt.ValidatePackageRelations(ConfigPackageTable,TempConfigPackageTable,TRUE);
                                 END;
                               END;
                                }
      { 12      ;2   ;Separator  }
      { 21      ;2   ;Action    ;
                      CaptionML=ENU=Export to Translation;
                      Visible=FALSE;
                      Image=Export;
                      OnAction=VAR
                                 ConfigPackageTable@1001 : Record 8613;
                               BEGIN
                                 TESTFIELD(Code);
                                 ConfigXMLExchange.SetAdvanced(TRUE);
                                 ConfigPackageTable.SETRANGE("Package Code",Code);
                                 IF CONFIRM(Text004,TRUE,Code) THEN
                                   ConfigXMLExchange.ExportPackageXML(ConfigPackageTable,'');
                               END;
                                }
      { 28      ;1   ;ActionGroup;
                      Name=Service Status }
      { 25      ;2   ;Action    ;
                      Name=4BzSoftware S-003;
                      PromotedIsBig=Yes;
                      Image=Info;
                      OnAction=BEGIN
                                 //S-003{
                                 WITH gCoU_ConfigExcelExchange DO
                                   MESSAGE(ServiceTextIsValid_Txt(ServiceIsValid_Bol) + ServiceTextInfo_Txt);
                                 //S-003}
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                GroupType=Repeater }

    { 31  ;2   ;Field     ;
                SourceExpr=Code }

    { 4   ;2   ;Field     ;
                SourceExpr="Package Name" }

    { 5   ;2   ;Field     ;
                SourceExpr="Language ID" }

    { 32  ;2   ;Field     ;
                SourceExpr="Product Version" }

    { 23  ;2   ;Field     ;
                SourceExpr="Processing Order" }

    { 6   ;2   ;Field     ;
                SourceExpr="Exclude Config. Tables" }

    { 7   ;2   ;Field     ;
                SourceExpr="Exclude XML Schema" }

    { 33  ;2   ;Field     ;
                SourceExpr="No. of Tables" }

    { 34  ;2   ;Field     ;
                SourceExpr="No. of Records" }

    { 27  ;2   ;Field     ;
                SourceExpr="No. of Errors" }

  }
  CODE
  {
    VAR
      ConfigXMLExchange@1000 : Codeunit 8614;
      Text002@1002 : TextConst 'ENU=Validate package %1?';
      Text003@1003 : TextConst 'ENU=Apply data from package %1?';
      Text004@1005 : TextConst 'ENU=Export package %1?';
      gCoU_ConfigExcelExchange@1004 : Codeunit 8618;
      gDat_LicenseEndDate@1001 : Date;

    BEGIN
    {
      Code  | Version | Author      | Description
      -----------------------------------------------------------------------------------------------------------------------------------
      S-003   140412    4BzSoftware   Universal Data Import Export.
    }
    END.
  }
}

