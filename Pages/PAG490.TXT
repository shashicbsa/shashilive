OBJECT Page 490 Acc. Schedule Overview
{
  OBJECT-PROPERTIES
  {
    Date=11/07/15;
    Time=[ 9:59:59];
    Modified=Yes;
    Version List=NAVW17.10.00.36035,NAVAPAC7.10.00.36035,TBI1.0,UPG13,UPG13R2;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Acc. Schedule Overview;
               ENA=Acc. Schedule Overview];
    SaveValues=Yes;
    LinksAllowed=No;
    SourceTable=Table85;
    DataCaptionExpr=CurrentSchedName + ' - ' + CurrentColumnName;
    PageType=Worksheet;
    OnInit=BEGIN
             Dim4FilterEnable := TRUE;
             Dim3FilterEnable := TRUE;
             Dim2FilterEnable := TRUE;
             Dim1FilterEnable := TRUE;
             IncludeSimulationEditable := TRUE;
           END;

    OnOpenPage=BEGIN
                 GLSetup.GET;
                 IF NewCurrentSchedName <> '' THEN
                   CurrentSchedName := NewCurrentSchedName;
                 IF CurrentSchedName = '' THEN
                   CurrentSchedName := Text000;
                 IncludeSimulation := FALSE;
                 IF AccSchedName.GET(CurrentSchedName) THEN
                   IF AccSchedName."Analysis View Name" <> '' THEN BEGIN
                     IncludeSimulationEditable := FALSE;
                     IF AnalysisView.GET(AccSchedName."Analysis View Name") THEN
                       IncludeSimulation := FALSE;
                   END ELSE
                     IncludeSimulationEditable := TRUE;
                 IF NewCurrentColumnName <> '' THEN
                   CurrentColumnName := NewCurrentColumnName;
                 IF CurrentColumnName = '' THEN
                   CurrentColumnName := Text000;
                 AccSchedManagement.CopyColumnsToTemp(CurrentColumnName,TempColumnLayout);
                 AccSchedManagement.OpenSchedule(CurrentSchedName,Rec);
                 AccSchedManagement.OpenColumns(CurrentColumnName,TempColumnLayout);
                 AccSchedManagement.CheckAnalysisView(CurrentSchedName,CurrentColumnName,TRUE);
                 UpdateColumnCaptions;
                 IF AccSchedName.GET(CurrentSchedName) THEN
                   IF AccSchedName."Analysis View Name" <> '' THEN
                     AnalysisView.GET(AccSchedName."Analysis View Name")
                   ELSE BEGIN
                     CLEAR(AnalysisView);
                     AnalysisView."Dimension 1 Code" := GLSetup."Global Dimension 1 Code";
                     AnalysisView."Dimension 2 Code" := GLSetup."Global Dimension 2 Code";
                   END;

                 AccSchedManagement.FindPeriod(Rec,'',PeriodType);
                 SETFILTER(Show,'<>%1',Show::No);
                 SETRANGE("Dimension 1 Filter");
                 SETRANGE("Dimension 2 Filter");
                 SETRANGE("Dimension 3 Filter");
                 SETRANGE("Dimension 4 Filter");
                 SETRANGE("Cost Center Filter");
                 SETRANGE("Cost Object Filter");
                 SETRANGE("Cash Flow Forecast Filter");
                 SETRANGE("Cost Budget Filter");
                 SETRANGE("G/L Budget Filter");
                 UpdateDimFilterControls;
                 DateFilter := GETFILTER("Date Filter");
               END;

    OnAfterGetRecord=VAR
                       ColumnNo@1000 : Integer;
                     BEGIN
                       CLEAR(ColumnValues);

                       IF (Totaling = '') OR (NOT TempColumnLayout.FINDSET) THEN
                         EXIT;

                       REPEAT
                         ColumnNo := ColumnNo + 1;
                         IF (ColumnNo > ColumnOffset) AND (ColumnNo - ColumnOffset <= ARRAYLEN(ColumnValues)) THEN BEGIN
                           ColumnValues[ColumnNo - ColumnOffset] :=
                             AccSchedManagement.RoundValue(
                               AccSchedManagement.CalcCell(Rec,TempColumnLayout,UseAmtsInAddCurr,IncludeSimulation),
                               TempColumnLayout);
                           ColumnLayoutArr[ColumnNo - ColumnOffset] := TempColumnLayout;
                         END;
                       UNTIL TempColumnLayout.NEXT = 0;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 28      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENA=F&unctions];
                      Image=Action }
      { 40      ;1   ;Action    ;
                      Name=Print;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Print;
                                 ENA=Print];
                      Image=Print;
                      OnAction=VAR
                                 AccSched@1000 : Report 25;
                                 DateFilter2@1002 : Text[30];
                                 GLBudgetFilter2@1003 : Text[30];
                                 BusUnitFilter@1004 : Text[30];
                                 CostBudgetFilter2@1005 : Text[30];
                               BEGIN
                                 AccSched.SetAccSchedName(CurrentSchedName);
                                 AccSched.SetColumnLayoutName(CurrentColumnName);
                                 DateFilter2 := GETFILTER("Date Filter");
                                 GLBudgetFilter2 := GETFILTER("G/L Budget Filter");
                                 CostBudgetFilter2 := GETFILTER("Cost Budget Filter");
                                 BusUnitFilter := GETFILTER("Business Unit Filter");
                                 AccSched.SetFilters(DateFilter2,GLBudgetFilter2,CostBudgetFilter2,BusUnitFilter,Dim1Filter,Dim2Filter,Dim3Filter,Dim4Filter);
                                 AccSched.RUN;
                               END;
                                }
      { 2       ;1   ;Action    ;
                      Name=PreviousColumn;
                      CaptionML=[ENU=Previous Column;
                                 ENA=Previous Column];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 AdjustColumnOffset(-1);
                               END;
                                }
      { 27      ;1   ;Action    ;
                      Name=NextPeriod;
                      CaptionML=[ENU=Next Period;
                                 ENA=Next Period];
                      ToolTipML=[ENU=Next Period;
                                 ENA=Next Period];
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 AccSchedManagement.FindPeriod(Rec,'>=',PeriodType);
                                 DateFilter := GETFILTER("Date Filter");
                               END;
                                }
      { 26      ;1   ;Action    ;
                      Name=PreviousPeriod;
                      CaptionML=[ENU=Previous Period;
                                 ENA=Previous Period];
                      ToolTipML=[ENU=Previous Period;
                                 ENA=Previous Period];
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 AccSchedManagement.FindPeriod(Rec,'<=',PeriodType);
                                 DateFilter := GETFILTER("Date Filter");
                               END;
                                }
      { 1       ;1   ;Action    ;
                      Name=NextColumn;
                      CaptionML=[ENU=Next Column;
                                 ENA=Next Column];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 AdjustColumnOffset(1);
                               END;
                                }
      { 11      ;1   ;ActionGroup;
                      CaptionML=[ENU=Excel;
                                 ENA=Excel] }
      { 41      ;2   ;ActionGroup;
                      CaptionML=[ENU=Export to Excel;
                                 ENA=Export to Excel];
                      Image=ExportToExcel }
      { 292     ;3   ;Action    ;
                      CaptionML=[ENU=Create New Document;
                                 ENA=Create New Document];
                      Image=ExportToExcel;
                      OnAction=VAR
                                 ExportAccSchedToExcel@1001 : Report 29;
                               BEGIN
                                 ExportAccSchedToExcel.SetOptions(Rec,CurrentColumnName,UseAmtsInAddCurr,IncludeSimulation);
                                 ExportAccSchedToExcel.RUN;
                               END;
                                }
      { 13      ;3   ;Action    ;
                      CaptionML=[ENU=Update Existing Document;
                                 ENA=Update Existing Document];
                      Image=ExportToExcel;
                      OnAction=VAR
                                 ExportAccSchedToExcel@1000 : Report 29;
                               BEGIN
                                 ExportAccSchedToExcel.SetOptions(Rec,CurrentColumnName,UseAmtsInAddCurr,IncludeSimulation);
                                 ExportAccSchedToExcel.SetUpdateExistingWorksheet(TRUE);
                                 ExportAccSchedToExcel.RUN;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 8   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ENA=General] }

    { 10  ;2   ;Field     ;
                Lookup=Yes;
                CaptionML=[ENU=Account Schedule Name;
                           ENA=Account Schedule Name];
                SourceExpr=CurrentSchedName;
                LookupPageID=Account Schedule Names;
                OnValidate=BEGIN
                             AccSchedManagement.CheckName(CurrentSchedName);
                             CurrentSchedNameOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           EXIT(AccSchedManagement.LookupName(CurrentSchedName,Text));
                         END;
                          }

    { 12  ;2   ;Field     ;
                Lookup=Yes;
                CaptionML=[ENU=Column Layout Name;
                           ENA=Column Layout Name];
                SourceExpr=CurrentColumnName;
                TableRelation="Column Layout Name".Name;
                OnValidate=BEGIN
                             AccSchedManagement.CheckColumnName(CurrentColumnName);
                             CurrentColumnNameOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           EXIT(AccSchedManagement.LookupColumnName(CurrentColumnName,Text));
                         END;
                          }

    { 1500000;2;Field     ;
                Name=IncludeSimulation;
                CaptionML=[ENU=Include Simulation;
                           ENA=Include Simulation];
                SourceExpr=IncludeSimulation;
                Visible=FALSE;
                Editable=IncludeSimulationEditable }

    { 44  ;2   ;Field     ;
                CaptionML=[ENU=Show Amounts in Add. Reporting Currency;
                           ENA=Show Amounts in Add. Reporting Currency];
                SourceExpr=UseAmtsInAddCurr;
                Visible=FALSE;
                MultiLine=Yes;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 42  ;2   ;Field     ;
                CaptionML=[ENU=View by;
                           ENA=View by];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 ENA=Day,Week,Month,Quarter,Year,Accounting Period];
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             AccSchedManagement.FindPeriod(Rec,'',PeriodType);
                             DateFilter := GETFILTER("Date Filter");
                             CurrPage.UPDATE;
                           END;
                            }

    { 7   ;2   ;Field     ;
                Name=DateFilter;
                CaptionML=[ENU=Date Filter;
                           ENA=Date Filter];
                SourceExpr=DateFilter;
                OnValidate=VAR
                             ApplicationManagement@1002 : Codeunit 1;
                           BEGIN
                             IF ApplicationManagement.MakeDateFilter(DateFilter) = 0 THEN;
                             SETFILTER("Date Filter",DateFilter);
                             DateFilter := GETFILTER("Date Filter");
                             CurrPage.UPDATE;
                           END;
                            }

    { 1000000000;2;Field  ;
                Name=G/LBudgetFilter;
                CaptionML=[ENU=G/L Budget Filter;
                           ENA=G/L Budget Filter];
                SourceExpr=GLBudgetFilter;
                OnValidate=BEGIN
                             IF GLBudgetFilter = '' THEN
                               SETRANGE("G/L Budget Filter")
                             ELSE
                               SETFILTER("G/L Budget Filter",GLBudgetFilter);
                             CurrPage.UPDATE;
                           END;

                OnLookup=VAR
                           Result@1001 : Boolean;
                         BEGIN
                           Result := LookupGLBudgetFilter(Text);
                           IF Result THEN BEGIN
                             SETFILTER("G/L Budget Filter",Text);
                             Text := GETFILTER("G/L Budget Filter");
                           END;
                           EXIT(Result);
                         END;
                          }

    { 48  ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 49  ;2   ;Field     ;
                SourceExpr="Row No." }

    { 51  ;2   ;Field     ;
                SourceExpr=Description }

    { 53  ;2   ;Field     ;
                Name=ColumnValues1;
                BlankZero=Yes;
                SourceExpr=[ColumnValues[1]]];
                CaptionClass=['3,' + ColumnCaptions[1]]];
                OnDrillDown=BEGIN
                              DrillDown(1);
                            END;
                             }

    { 59  ;2   ;Field     ;
                Name=ColumnValues2;
                BlankZero=Yes;
                SourceExpr=[ColumnValues[2]]];
                CaptionClass=['3,' + ColumnCaptions[2]]];
                OnDrillDown=BEGIN
                              DrillDown(2);
                            END;
                             }

    { 61  ;2   ;Field     ;
                Name=ColumnValues3;
                BlankZero=Yes;
                SourceExpr=[ColumnValues[3]]];
                CaptionClass=['3,' + ColumnCaptions[3]]];
                OnDrillDown=BEGIN
                              DrillDown(3);
                            END;
                             }

    { 63  ;2   ;Field     ;
                Name=ColumnValues4;
                BlankZero=Yes;
                SourceExpr=[ColumnValues[4]]];
                CaptionClass=['3,' + ColumnCaptions[4]]];
                OnDrillDown=BEGIN
                              DrillDown(4);
                            END;
                             }

    { 65  ;2   ;Field     ;
                Name=ColumnValues5;
                BlankZero=Yes;
                SourceExpr=[ColumnValues[5]]];
                CaptionClass=['3,' + ColumnCaptions[5]]];
                OnDrillDown=BEGIN
                              DrillDown(5);
                            END;
                             }

    { 81  ;2   ;Field     ;
                Name=ColumnValues6;
                BlankZero=Yes;
                SourceExpr=[ColumnValues[6]]];
                CaptionClass=['3,' + ColumnCaptions[6]]];
                OnDrillDown=BEGIN
                              DrillDown(6);
                            END;
                             }

    { 79  ;2   ;Field     ;
                Name=ColumnValues7;
                BlankZero=Yes;
                SourceExpr=[ColumnValues[7]]];
                CaptionClass=['3,' + ColumnCaptions[7]]];
                OnDrillDown=BEGIN
                              DrillDown(7);
                            END;
                             }

    { 77  ;2   ;Field     ;
                Name=ColumnValues8;
                BlankZero=Yes;
                SourceExpr=[ColumnValues[8]]];
                CaptionClass=['3,' + ColumnCaptions[8]]];
                OnDrillDown=BEGIN
                              DrillDown(8);
                            END;
                             }

    { 75  ;2   ;Field     ;
                Name=ColumnValues9;
                BlankZero=Yes;
                SourceExpr=[ColumnValues[9]]];
                CaptionClass=['3,' + ColumnCaptions[9]]];
                OnDrillDown=BEGIN
                              DrillDown(9);
                            END;
                             }

    { 73  ;2   ;Field     ;
                Name=ColumnValues10;
                BlankZero=Yes;
                SourceExpr=[ColumnValues[10]]];
                CaptionClass=['3,' + ColumnCaptions[10]]];
                OnDrillDown=BEGIN
                              DrillDown(10);
                            END;
                             }

    { 71  ;2   ;Field     ;
                Name=ColumnValues11;
                BlankZero=Yes;
                SourceExpr=[ColumnValues[11]]];
                CaptionClass=['3,' + ColumnCaptions[11]]];
                OnDrillDown=BEGIN
                              DrillDown(11);
                            END;
                             }

    { 69  ;2   ;Field     ;
                Name=ColumnValues12;
                BlankZero=Yes;
                SourceExpr=[ColumnValues[12]]];
                CaptionClass=['3,' + ColumnCaptions[12]]];
                OnDrillDown=BEGIN
                              DrillDown(12);
                            END;
                             }

    { 1903121901;1;Group  ;
                CaptionML=[ENU=Options;
                           ENA=Options] }

    { 37  ;2   ;Field     ;
                Name=Dim1Filter;
                CaptionML=[ENU=Dimension 1 Filter;
                           ENA=Dimension 1 Filter];
                SourceExpr=Dim1Filter;
                CaptionClass=FormGetCaptionClass(1);
                Enabled=Dim1FilterEnable;
                OnValidate=BEGIN
                             IF Dim1Filter = '' THEN
                               SETRANGE("Dimension 1 Filter")
                             ELSE
                               SETFILTER("Dimension 1 Filter",Dim1Filter);
                             CurrPage.UPDATE;
                           END;

                OnLookup=VAR
                           DimValue@1000 : Record 349;
                         BEGIN
                           EXIT(DimValue.LookUpDimFilter(AnalysisView."Dimension 1 Code",Text));
                         END;
                          }

    { 36  ;2   ;Field     ;
                Name=Dim2Filter;
                CaptionML=[ENU=Dimension 2 Filter;
                           ENA=Dimension 2 Filter];
                SourceExpr=Dim2Filter;
                CaptionClass=FormGetCaptionClass(2);
                Enabled=Dim2FilterEnable;
                OnValidate=BEGIN
                             IF Dim2Filter = '' THEN
                               SETRANGE("Dimension 2 Filter")
                             ELSE
                               SETFILTER("Dimension 2 Filter",Dim2Filter);
                             CurrPage.UPDATE;
                           END;

                OnLookup=VAR
                           DimValue@1000 : Record 349;
                         BEGIN
                           EXIT(DimValue.LookUpDimFilter(AnalysisView."Dimension 2 Code",Text));
                         END;
                          }

    { 39  ;2   ;Field     ;
                Name=Dim3Filter;
                CaptionML=[ENU=Dimension 3 Filter;
                           ENA=Dimension 3 Filter];
                SourceExpr=Dim3Filter;
                CaptionClass=FormGetCaptionClass(3);
                Enabled=Dim3FilterEnable;
                OnValidate=BEGIN
                             IF Dim3Filter = '' THEN
                               SETRANGE("Dimension 3 Filter")
                             ELSE
                               SETFILTER("Dimension 3 Filter",Dim3Filter);
                             CurrPage.UPDATE;
                           END;

                OnLookup=VAR
                           DimValue@1000 : Record 349;
                         BEGIN
                           EXIT(DimValue.LookUpDimFilter(AnalysisView."Dimension 3 Code",Text));
                         END;
                          }

    { 38  ;2   ;Field     ;
                Name=Dim4Filter;
                CaptionML=[ENU=Dimension 4 Filter;
                           ENA=Dimension 4 Filter];
                SourceExpr=Dim4Filter;
                CaptionClass=FormGetCaptionClass(4);
                Enabled=Dim4FilterEnable;
                OnValidate=BEGIN
                             IF Dim4Filter = '' THEN
                               SETRANGE("Dimension 4 Filter")
                             ELSE
                               SETFILTER("Dimension 4 Filter",Dim4Filter);
                             CurrPage.UPDATE;
                           END;

                OnLookup=VAR
                           DimValue@1000 : Record 349;
                         BEGIN
                           EXIT(DimValue.LookUpDimFilter(AnalysisView."Dimension 4 Code",Text));
                         END;
                          }

    { 3   ;2   ;Field     ;
                Name=CostCenterFilter;
                CaptionML=[ENU=Cost Center Filter;
                           ENA=Cost Centre Filter];
                SourceExpr=CostCenterFilter;
                OnValidate=BEGIN
                             IF CostCenterFilter = '' THEN
                               SETRANGE("Cost Center Filter")
                             ELSE
                               SETFILTER("Cost Center Filter",CostCenterFilter);
                             CurrPage.UPDATE;
                           END;

                OnLookup=VAR
                           CostCenter@1000 : Record 1112;
                         BEGIN
                           EXIT(CostCenter.LookupCostCenterFilter(Text));
                         END;
                          }

    { 4   ;2   ;Field     ;
                Name=CostObjectFilter;
                CaptionML=[ENU=Cost Object Filter;
                           ENA=Cost Object Filter];
                SourceExpr=CostObjectFilter;
                OnValidate=BEGIN
                             IF CostObjectFilter = '' THEN
                               SETRANGE("Cost Object Filter")
                             ELSE
                               SETFILTER("Cost Object Filter",CostObjectFilter);
                             CurrPage.UPDATE;
                           END;

                OnLookup=VAR
                           CostObject@1000 : Record 1113;
                         BEGIN
                           EXIT(CostObject.LookupCostObjectFilter(Text));
                         END;
                          }

    { 5   ;2   ;Field     ;
                Name=CashFlowFilter;
                CaptionML=[ENU=Cash Flow Filter;
                           ENA=Cash Flow Filter];
                SourceExpr=CashFlowFilter;
                OnValidate=BEGIN
                             IF CashFlowFilter = '' THEN
                               SETRANGE("Cash Flow Forecast Filter")
                             ELSE
                               SETFILTER("Cash Flow Forecast Filter",CashFlowFilter);
                             CurrPage.UPDATE;
                           END;

                OnLookup=VAR
                           CashFlowForecast@1000 : Record 840;
                         BEGIN
                           EXIT(CashFlowForecast.LookupCashFlowFilter(Text));
                         END;
                          }

    { 9   ;2   ;Field     ;
                Name=CostBudgetFilter;
                CaptionML=[ENU=Cost Budget Filter;
                           ENA=Cost Budget Filter];
                SourceExpr=CostBudgetFilter;
                OnValidate=BEGIN
                             IF CostBudgetFilter = '' THEN
                               SETRANGE("Cost Budget Filter")
                             ELSE
                               SETFILTER("Cost Budget Filter",CostBudgetFilter);
                             CurrPage.UPDATE;
                           END;

                OnLookup=VAR
                           Result@1001 : Boolean;
                         BEGIN
                           Result := LookupCostBudgetFilter(Text);
                           IF Result THEN BEGIN
                             SETFILTER("Cost Budget Filter",Text);
                             Text := GETFILTER("Cost Budget Filter");
                           END;
                           EXIT(Result);
                         END;
                          }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=DEFAULT;ENA=DEFAULT';
      Text005@1021 : TextConst 'ENU=1,6,,Dimension %1 Filter;ENA=1,6,,Dimension %1 Filter';
      TempColumnLayout@1004 : TEMPORARY Record 334;
      ColumnLayoutArr@1018 : ARRAY [12] OF Record 334;
      AccSchedName@1005 : Record 84;
      AnalysisView@1020 : Record 363;
      GLSetup@1016 : Record 98;
      AccSchedManagement@1006 : Codeunit 8;
      CurrentSchedName@1007 : Code[10];
      CurrentColumnName@1008 : Code[10];
      NewCurrentSchedName@1009 : Code[10];
      NewCurrentColumnName@1010 : Code[10];
      ColumnValues@1012 : ARRAY [12] OF Decimal;
      ColumnCaptions@1017 : ARRAY [12] OF Text[80];
      PeriodType@1013 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      UseAmtsInAddCurr@1014 : Boolean;
      Dim1Filter@1019 : Text[250];
      Dim2Filter@1022 : Text[250];
      Dim3Filter@1023 : Text[250];
      Dim4Filter@1024 : Text[250];
      CostCenterFilter@1011 : Text[250];
      CostObjectFilter@1001 : Text[250];
      CashFlowFilter@1015 : Text[250];
      ColumnOffset@1025 : Integer;
      IncludeSimulation@1500000 : Boolean;
      IncludeSimulationEditable@19039816 : Boolean INDATASET;
      Dim1FilterEnable@19054192 : Boolean INDATASET;
      Dim2FilterEnable@19062512 : Boolean INDATASET;
      Dim3FilterEnable@19011605 : Boolean INDATASET;
      Dim4FilterEnable@19064250 : Boolean INDATASET;
      GLBudgetFilter@1026 : Text[250];
      CostBudgetFilter@1027 : Text[250];
      DateFilter@1028 : Text[30];
      Text004@1040 : TextConst 'ENU=Not Available';
      MasterSetup@1000000000 : Record 50008;

    PROCEDURE SetAccSchedName@6(NewAccSchedName@1000 : Code[10]);
    VAR
      AccSchedName@1001 : Record 84;
    BEGIN
      NewCurrentSchedName := NewAccSchedName;
      IF AccSchedName.GET(NewCurrentSchedName) THEN
        IF AccSchedName."Default Column Layout" <> '' THEN
          NewCurrentColumnName := AccSchedName."Default Column Layout";
    END;

    LOCAL PROCEDURE FormGetCaptionClass@12(DimNo@1000 : Integer) : Text[250];
    BEGIN
      CASE DimNo OF
        1:
          BEGIN
            IF AnalysisView."Dimension 1 Code" <> '' THEN
              EXIT('1,6,' + AnalysisView."Dimension 1 Code");

            EXIT(STRSUBSTNO(Text005,DimNo));
          END;
        2:
          BEGIN
            IF AnalysisView."Dimension 2 Code" <> '' THEN
              EXIT('1,6,' + AnalysisView."Dimension 2 Code");

            EXIT(STRSUBSTNO(Text005,DimNo));
          END;
        3:
          BEGIN
            IF AnalysisView."Dimension 3 Code" <> '' THEN
              EXIT('1,6,' + AnalysisView."Dimension 3 Code");

            EXIT(STRSUBSTNO(Text005,DimNo));
          END;
        4:
          BEGIN
            IF AnalysisView."Dimension 4 Code" <> '' THEN
              EXIT('1,6,' + AnalysisView."Dimension 4 Code");

            EXIT(STRSUBSTNO(Text005,DimNo));
          END;
        5:
          EXIT(FIELDCAPTION("Date Filter"));
        6:
          EXIT(FIELDCAPTION("Cash Flow Forecast Filter"));
      END;
    END;

    LOCAL PROCEDURE DrillDown@5(ColumnNo@1003 : Integer);
    BEGIN
      TempColumnLayout := ColumnLayoutArr[ColumnNo];
      AccSchedManagement.DrillDown(TempColumnLayout,Rec);
    END;

    LOCAL PROCEDURE UpdateColumnCaptions@19();
    VAR
      ColumnNo@1000 : Integer;
      i@1001 : Integer;
    BEGIN
      CLEAR(ColumnCaptions);
      IF TempColumnLayout.FINDSET THEN
        REPEAT
          ColumnNo := ColumnNo + 1;
          IF (ColumnNo > ColumnOffset) AND (ColumnNo - ColumnOffset <= ARRAYLEN(ColumnCaptions)) THEN
            ColumnCaptions[ColumnNo - ColumnOffset] := TempColumnLayout."Column Header";
        UNTIL (ColumnNo - ColumnOffset = ARRAYLEN(ColumnCaptions)) OR (TempColumnLayout.NEXT = 0);
      // Set unused columns to blank to prevent RTC to display control ID as caption
      FOR i := ColumnNo - ColumnOffset + 1 TO ARRAYLEN(ColumnCaptions) DO
        ColumnCaptions[i] := ' ';
    END;

    LOCAL PROCEDURE AdjustColumnOffset@18(Delta@1000 : Integer);
    VAR
      OldColumnOffset@1001 : Integer;
    BEGIN
      OldColumnOffset := ColumnOffset;
      ColumnOffset := ColumnOffset + Delta;
      IF ColumnOffset + 12 > TempColumnLayout.COUNT THEN
        ColumnOffset := TempColumnLayout.COUNT - 12;
      IF ColumnOffset < 0 THEN
        ColumnOffset := 0;
      IF ColumnOffset <> OldColumnOffset THEN BEGIN
        UpdateColumnCaptions;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE UpdateDimFilterControls@4();
    BEGIN
      Dim1Filter := GETFILTER("Dimension 1 Filter");
      Dim2Filter := GETFILTER("Dimension 2 Filter");
      Dim3Filter := GETFILTER("Dimension 3 Filter");
      Dim4Filter := GETFILTER("Dimension 4 Filter");
      CostCenterFilter := '';
      CostObjectFilter := '';
      CashFlowFilter := '';
      Dim1FilterEnable := AnalysisView."Dimension 1 Code" <> '';
      Dim2FilterEnable := AnalysisView."Dimension 2 Code" <> '';
      Dim3FilterEnable := AnalysisView."Dimension 3 Code" <> '';
      Dim4FilterEnable := AnalysisView."Dimension 4 Code" <> '';
      GLBudgetFilter := '';
      CostBudgetFilter := '';
    END;

    LOCAL PROCEDURE CurrentSchedNameOnAfterValidate@19053875();
    VAR
      AccSchedName@1001 : Record 84;
      PrevAnalysisView@1002 : Record 363;
    BEGIN
      IncludeSimulation := FALSE;
      CurrPage.SAVERECORD;
      AccSchedManagement.SetName(CurrentSchedName,Rec);
      IF AccSchedName.GET(CurrentSchedName) THEN
        IF AccSchedName."Analysis View Name" <> '' THEN BEGIN
          IncludeSimulationEditable := FALSE;
          IF AnalysisView.GET(AccSchedName."Analysis View Name") THEN
            IncludeSimulation := TRUE;
        END ELSE
          IncludeSimulationEditable := TRUE;
      IF (AccSchedName."Default Column Layout" <> '') AND
         (CurrentColumnName <> AccSchedName."Default Column Layout")
      THEN BEGIN
        CurrentColumnName := AccSchedName."Default Column Layout";
        AccSchedManagement.CopyColumnsToTemp(CurrentColumnName,TempColumnLayout);
        AccSchedManagement.SetColumnName(CurrentColumnName,TempColumnLayout);
      END;
      AccSchedManagement.CheckAnalysisView(CurrentSchedName,CurrentColumnName,TRUE);

      IF AccSchedName."Analysis View Name" <> AnalysisView.Code THEN BEGIN
        PrevAnalysisView := AnalysisView;
        IF AccSchedName."Analysis View Name" <> '' THEN
          AnalysisView.GET(AccSchedName."Analysis View Name")
        ELSE BEGIN
          CLEAR(AnalysisView);
          AnalysisView."Dimension 1 Code" := GLSetup."Global Dimension 1 Code";
          AnalysisView."Dimension 2 Code" := GLSetup."Global Dimension 2 Code";
        END;
        IF PrevAnalysisView."Dimension 1 Code" <> AnalysisView."Dimension 1 Code" THEN
          SETRANGE("Dimension 1 Filter");
        IF PrevAnalysisView."Dimension 2 Code" <> AnalysisView."Dimension 2 Code" THEN
          SETRANGE("Dimension 2 Filter");
        IF PrevAnalysisView."Dimension 3 Code" <> AnalysisView."Dimension 3 Code" THEN
          SETRANGE("Dimension 3 Filter");
        IF PrevAnalysisView."Dimension 4 Code" <> AnalysisView."Dimension 4 Code" THEN
          SETRANGE("Dimension 4 Filter");
      END;
      UpdateDimFilterControls;

      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE CurrentColumnNameOnAfterValidate@19064415();
    BEGIN
      AccSchedManagement.CopyColumnsToTemp(CurrentColumnName,TempColumnLayout);
      AccSchedManagement.SetColumnName(CurrentColumnName,TempColumnLayout);
      AccSchedManagement.CheckAnalysisView(CurrentSchedName,CurrentColumnName,TRUE);
      UpdateColumnCaptions;
      CurrPage.UPDATE(FALSE);
    END;

    BEGIN
    {
      //TBI -CODE ADDED FOR VISBILITY OF FIELDS.
      //UPG13
      5.0 Customized Code to 2013 Merged Code.
      // UPG13R2
      2013 to 2013R2 Merged Code.
    }
    END.
  }
}

