OBJECT Report 50085 Reconcilation ESPT wth GL
{
  OBJECT-PROPERTIES
  {
    Date=12/11/15;
    Time=13:46:51;
    Modified=Yes;
    Version List=UPG13R2DEV;
  }
  PROPERTIES
  {
    OnPreReport=BEGIN
                  ExcelBuff.DELETEALL;
                END;

    OnPostReport=BEGIN

                   IF ExporttoExcel= TRUE THEN
                   BEGIN
                   //ExcelBuff.CreateBook;                                                       // UPG13R2DEV
                   //ExcelBuff.CreateSheet('RECONCILATION','Comparison','G/L Entry',USERID);     // UPG13R2DEV
                   ExcelBuff.CreateBookAndOpenExcel('RECONCILATION','Comparison','G/L Entry',USERID);     //UPG13R2DEV
                   ExcelBuff.GiveUserControl;
                   END;
                 END;

  }
  DATASET
  {
    { 1102159001;;DataItem;                  ;
               DataItemTable=Table17;
               DataItemTableView=SORTING(Entry No.)
                                 ORDER(Ascending)
                                 WHERE(Amount=FILTER(<>0));
               OnPreDataItem=BEGIN

                               CASE CurrMonth OF
                                 CurrMonth::Jan: Month:=1;
                                 CurrMonth::Feb: Month:=2;
                                 CurrMonth::Mar: Month:=3;
                                 CurrMonth::Apr: Month:=4;
                                 CurrMonth::May: Month:=5;
                                 CurrMonth::Jun: Month:=6;
                                 CurrMonth::Jul: Month:=7;
                                 CurrMonth::Aug: Month:=8;
                                 CurrMonth::Sep: Month:=9;
                                 CurrMonth::Oct: Month:=10;
                                 CurrMonth::Nov: Month:=11;
                                 CurrMonth::Dec: Month:=12;
                               END;
                               Year := DATE2DMY(WORKDATE,3);
                               CurrMonthStartdt := DMY2DATE(1,Month,Year);
                               CurrMonthEnddt := CALCDATE('+1M-1D',CurrMonthStartdt);
                               SETRANGE("Posting Date",CurrMonthStartdt,CurrMonthEnddt);

                               //*****************G/L Entry, Header (1) - OnPreSection()
                               IF ExporttoExcel= TRUE THEN
                               BEGIN
                               ExcelBuff."Row No."+=1;
                               EnterCell(ExcelBuff."Row No.",1,FORMAT('DOCUMENT NO.'),TRUE,FALSE,TRUE);
                               EnterCell(ExcelBuff."Row No.",2,FORMAT('SLIP NO'),TRUE,FALSE,TRUE);
                               EnterCell(ExcelBuff."Row No.",3,FORMAT('POSTING DATE'),TRUE,FALSE,TRUE);
                               EnterCell(ExcelBuff."Row No.",4,FORMAT('NARRATION'),TRUE,FALSE,TRUE);
                               EnterCell(ExcelBuff."Row No.",5,FORMAT('NPWP No.'),TRUE,FALSE,TRUE);
                               EnterCell(ExcelBuff."Row No.",6,FORMAT('NPWP NAME'),TRUE,FALSE,TRUE);
                               EnterCell(ExcelBuff."Row No.",7,FORMAT('TAX INVOICE NO.'),TRUE,FALSE,TRUE);
                               EnterCell(ExcelBuff."Row No.",8,FORMAT('TAX INVOICE DATE'),TRUE,FALSE,TRUE);
                               EnterCell(ExcelBuff."Row No.",9,FORMAT('AMOUNT'),TRUE,FALSE,TRUE);
                               EnterCell(ExcelBuff."Row No.",10,FORMAT('ESPT - TAX PERIOD'),TRUE,FALSE,TRUE);
                               EnterCell(ExcelBuff."Row No.",11,FORMAT('ESPT - STATUS'),TRUE,FALSE,TRUE);
                               END;
                             END;

               OnAfterGetRecord=VAR
                                  PurchInvHeader@1102159004 : Record 122;
                                  SalInvHeader@1102159003 : Record 112;
                                  SalCrmHeader@1102159002 : Record 114;
                                  PurchCrmHeader@1102159001 : Record 124;
                                BEGIN



                                  //**************************G/L Entry, Body (2) - OnPreSection()
                                  NPWPNAme:='';
                                  "NPWPNO.":='';
                                  ESPTTable.RESET;
                                  ESPTTable.SETRANGE(ESPTTable."Document No.","G/L Entry"."Slip No.");
                                  IF ESPTTable.FINDFIRST THEN
                                   BEGIN
                                    ESPTTable.SETRANGE(ESPTTable.Amount,"G/L Entry".Amount);
                                     IF ESPTTable.FINDFIRST THEN
                                      BEGIN
                                        RE:='Record Exist';
                                        TAXPERIOD:=FORMAT(ESPTTable."Tax Period");
                                      END
                                     ELSE
                                      BEGIN
                                         RE:='Record Not Exist';
                                         TAXPERIOD:='NA';
                                      END;
                                    END
                                  ELSE
                                   BEGIN
                                    RE:='Record Not Exist';
                                    TAXPERIOD:='NA';
                                   END;


                                  IF "G/L Entry"."Document Type"="G/L Entry"."Document Type"::Invoice THEN
                                   BEGIN
                                    IF "G/L Entry"."Source Code"='PURCHASES' THEN
                                     BEGIN
                                       PurchInvHeader.RESET;
                                       PurchInvHeader.SETRANGE(PurchInvHeader."No.","G/L Entry"."Document No.");
                                       IF PurchInvHeader.FINDFIRST THEN
                                        BEGIN
                                          NPWPNAme:=PurchInvHeader."Ship-to Name";
                                          "NPWPNO.":=PurchInvHeader."Order Address Code";
                                        END;
                                      END;
                                    IF "G/L Entry"."Source Code"='SALES' THEN
                                     BEGIN
                                       SalInvHeader.RESET;
                                       SalInvHeader.SETRANGE(SalInvHeader."No.","G/L Entry"."Document No.");
                                       IF SalInvHeader.FINDFIRST THEN
                                        BEGIN
                                          NPWPNAme:=( SalInvHeader."Ship-to Name"  + SalInvHeader."Ship-to Name 2");
                                          "NPWPNO.":=SalInvHeader."Ship-to Code";
                                        END;

                                      END;
                                  END;

                                  IF "G/L Entry"."Document Type"="G/L Entry"."Document Type"::"Credit Memo" THEN
                                   BEGIN
                                    IF "G/L Entry"."Source Code"='PURCHASES' THEN
                                     BEGIN
                                       PurchCrmHeader.RESET;
                                       PurchCrmHeader.SETRANGE(PurchCrmHeader."No.","G/L Entry"."Document No.");
                                       IF PurchCrmHeader.FINDFIRST THEN
                                        BEGIN
                                          NPWPNAme:=PurchCrmHeader."Ship-to Name";
                                          "NPWPNO.":=PurchCrmHeader."Order Address Code";
                                        END;
                                      END;
                                    IF "G/L Entry"."Source Code"='SALES' THEN
                                     BEGIN
                                       SalCrmHeader.RESET;
                                       SalCrmHeader.SETRANGE(SalCrmHeader."No.","G/L Entry"."Document No.");
                                       IF SalCrmHeader.FINDFIRST THEN
                                        BEGIN
                                          NPWPNAme:=( SalCrmHeader."Ship-to Name"  + SalCrmHeader."Ship-to Name 2");
                                          "NPWPNO.":=SalCrmHeader."Ship-to Code";
                                        END;

                                      END;
                                  END;


                                  IF ExporttoExcel= TRUE THEN
                                     BEGIN
                                        ExcelBuff."Row No."+=1;
                                        EnterCell(ExcelBuff."Row No.",1,FORMAT("G/L Entry"."Document No."),FALSE,FALSE,TRUE);
                                        EnterCell(ExcelBuff."Row No.",2,FORMAT("G/L Entry"."Slip No."),FALSE,FALSE,TRUE);
                                        EnterCell(ExcelBuff."Row No.",3,FORMAT("G/L Entry"."Posting Date"),FALSE,FALSE,TRUE);
                                        EnterCell(ExcelBuff."Row No.",4,FORMAT("G/L Entry".Narration),FALSE,FALSE,TRUE);
                                        EnterCell(ExcelBuff."Row No.",5,FORMAT("NPWPNO."),FALSE,FALSE,TRUE);
                                        EnterCell(ExcelBuff."Row No.",6,FORMAT(NPWPNAme),FALSE,FALSE,TRUE);
                                        EnterCell(ExcelBuff."Row No.",7,FORMAT("G/L Entry"."Tax Invoice No."),FALSE,FALSE,TRUE);
                                        EnterCell(ExcelBuff."Row No.",8,FORMAT("G/L Entry"."Tax Invoice Date"),FALSE,FALSE,TRUE);
                                        EnterCell(ExcelBuff."Row No.",9,FORMAT("G/L Entry".Amount),FALSE,FALSE,TRUE);
                                        EnterCell(ExcelBuff."Row No.",10,FORMAT(TAXPERIOD),FALSE,FALSE,TRUE);
                                        EnterCell(ExcelBuff."Row No.",11,FORMAT(RE),TRUE,TRUE,TRUE);
                                     END;
                                END;

               ReqFilterFields=G/L Account No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1102159001;;Container;
                  ContainerType=ContentArea }

      { 1102159002;1;Field  ;
                  Name=Select Current Month;
                  SourceExpr=CurrMonth }

      { 1102159003;1;Field  ;
                  Name=Export To Excel;
                  SourceExpr=ExporttoExcel }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ExcelBuff@1102159012 : TEMPORARY Record 370;
      ExporttoExcel@1102159011 : Boolean;
      ESPTTable@1102159010 : Record 50016;
      RE@1102159009 : Text[250];
      CurrMonthStartdt@1102159008 : Date;
      CurrMonthEnddt@1102159007 : Date;
      CurrMonth@1102159006 : 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec';
      Month@1102159005 : Integer;
      Year@1102159004 : Integer;
      TAXPERIOD@1102159003 : Text[200];
      NPWPNAme@1102159002 : Code[250];
      "NPWPNO."@1102159001 : Code[250];

    PROCEDURE EnterCell@1102159005(rowno@1102159007 : Integer;colno@1102159006 : Integer;cellvalue@1102159005 : Text[250];bold@1102159004 : Boolean;italic@1102159003 : Boolean;underline@1102159002 : Boolean);
    BEGIN

         ExcelBuff.INIT;
         ExcelBuff.VALIDATE(ExcelBuff."Row No.",rowno);
         ExcelBuff.VALIDATE(ExcelBuff."Column No.",colno);
         ExcelBuff."Cell Value as Text":=cellvalue;
         ExcelBuff.Formula:='';
         ExcelBuff.Bold:=bold;
         ExcelBuff.Italic:=italic;
         ExcelBuff.Underline:=underline;
         ExcelBuff.INSERT;
    END;

    BEGIN
    {
      // UPG13R2DEV
      // CreateBookAndOpenExcel func used to create excel
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns:cl="http://schemas.microsoft.com/sqlserver/reporting/2010/01/componentdefinition" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <Code>Public Function BlankZero(ByVal Value As Decimal)
    if Value = 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankPos(ByVal Value As Decimal)
    if Value &gt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankZeroAndPos(ByVal Value As Decimal)
    if Value &gt;= 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNeg(ByVal Value As Decimal)
    if Value &lt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNegAndZero(ByVal Value As Decimal)
    if Value &lt;= 0 then
        Return ""
    end if
    Return Value
End Function
</Code>
  <Language>=User!Language</Language>
  <ConsumeContainerWhitespace>true</ConsumeContainerWhitespace>
  <rd:ReportID>0eeb6585-38ae-40f1-885b-8d50088d51b4</rd:ReportID>
  <rd:ReportUnitType>Inch</rd:ReportUnitType>
</Report>
    END_OF_RDLDATA
  }
}

